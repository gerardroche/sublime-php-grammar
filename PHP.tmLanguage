<?xml version="1.0" encoding="UTF-8"?>
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>php</string>
	</array>
	<key>firstLineMatch</key>
	<string>^(#!.*(?&lt;!-)|&lt;\?)php[0-9]{0,1}\b</string>
	<key>foldingStartMarker</key>
	<string>(/\*|\{\s*$|&lt;&lt;&lt;HTML)</string>
	<key>foldingStopMarker</key>
	<string>(\*/|^\s*\}|^HTML;)</string>
	<key>name</key>
	<string>PHP</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>source.php.embedded.line.empty.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.php</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>meta.consecutive-tags.php</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.trailing.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Matches empty tags.</string>
			<key>match</key>
			<string>(?x)
				(^\s*)?							# 1 - Leading whitespace
					(							# 2 - meta.embedded.line.empty.php
						(						# 3 - Open Tag
							(?:
								((?&lt;=\?&gt;)&lt;)		# 4 - Consecutive tags
							  | &lt;
							)
							\?(?i:php|=)?
						)
							(\s*)				# 5 - Loneliness
						((\?)&gt;)					# 6 - Close Tag
												# 7 - Scope ? as scope.php
					)
				(
					\1							# Match nothing if there was no
												#   leading whitespace...
				  | (\s*$\n)?					# or match trailing whitespace.
				)
			</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=&lt;\?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Catches tags with preceeding whitespace.</string>
			<key>end</key>
			<string>(?&lt;=\?&gt;)(\s*$\n)?</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.trailing.php</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;\?(?i:php|=)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?)&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>source.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>source.php.embedded.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(((?&lt;=\?&gt;)&lt;)|&lt;)\?(?i:php|=)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.consecutive-tags.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Catches the remainder.</string>
			<key>end</key>
			<string>(\?)&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>source.php.embedded.line.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#language</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>class-builtin</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\\)?\b(A(ppendIterator|r(ithmeticError|ray(Access|Iterator|Object))|ssertionError)|Bad(FunctionCallException|MethodCallException)|C(URLFile|a(chingIterator|llbackFilterIterator)|los(edGeneratorException|ure)|o(llator|untable))|D(OM(Attr|C(dataSection|haracterData|o(mment|nfiguration))|Do(cument(Fragment|Type)?|mError)|E(lement|ntity(Reference)?|rrorHandler|xception)|Implementation(List|Source)?|Locator|N(ame(List|SpaceNode|dNodeMap)|o(de(List)?|tation))|ProcessingInstruction|String(Extend|List)|T(ext|ypeinfo)|UserDataHandler|XPath)|ate(Interval|Period|Time(I(mmutable|nterface)|Zone)?)|i(rectory(Iterator)?|visionByZeroError)|omainException)|E(mptyIterator|rror(Exception)?|xception)|Fil(esystemIterator|terIterator)|G(enerator|lobIterator)|I(n(finiteIterator|tl(BreakIterator|C(alendar|har|odePointBreakIterator)|DateFormatter|Exception|GregorianCalendar|Iterator|PartsIterator|RuleBasedBreakIterator|TimeZone)|validArgumentException)|terator(Aggregate|Iterator)?)|JsonSerializable|L(engthException|i(bXMLError|mitIterator)|o(cale|gicException))|M(essageFormatter|ultipleIterator)|N(o(RewindIterator|rmalizer)|umberFormatter)|O(ut(Of(BoundsException|RangeException)|erIterator)|verflowException)|P(DO(Exception|Row|Statement)?|ar(entIterator|seError)|har(Data|Exception|FileInfo)?)|R(angeException|e(cursive(ArrayIterator|Ca(chingIterator|llbackFilterIterator)|DirectoryIterator|FilterIterator|Iterator(Iterator)?|RegexIterator|TreeIterator)|flect(ion(Class|Ex(ception|tension)|Function(Abstract)?|Generator|Method|Object|P(arameter|roperty)|Type|ZendExtension)?|or)|gexIterator|sourceBundle)|untimeException)|S(QLite3(Result|Stmt)?|e(ekableIterator|rializable|ssion(Handler(Interface)?|IdInterface|UpdateTimestampHandlerInterface))|impleXML(Element|Iterator)|oap(Client|Fault|Header|Param|Server|Var)|p(l(DoublyLinkedList|Fi(le(Info|Object)|xedArray)|Heap|M(axHeap|inHeap)|Ob(jectStorage|server)|PriorityQueue|Queue|S(tack|ubject)|TempFileObject)|oofchecker))|T(hrowable|ra(nsliterator|versable)|ypeError)|U(Converter|n(derflowException|expectedValueException))|XML(Reader|Writer)|ZipArchive|__PHP_Incomplete_Class|finfo|mysqli(_(driver|result|s(ql_exception|tmt)|warning))?|php_user_filter|stdClass|tidy(Node)?)\b</string>
					<key>name</key>
					<string>support.class.builtin.php</string>
				</dict>
			</array>
		</dict>
		<key>class-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-builtin</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[\\a-zA-Z_])</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?:#@\+)?\s*$</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>This now only highlights a docblock if the first line contains only /**
								- this is to stop highlighting everything as invalid when people do comment banners with /******** ...
								- Now matches /**#@+ too - used for docblock templates: http://manual.phpdoc.org/HTMLframesConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.phpdoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#php_doc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*?($\n?|(?=\?&gt;))</string>
					<key>name</key>
					<string>comment.line.double-slash.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*?($\n?|(?=\?&gt;))</string>
					<key>name</key>
					<string>comment.line.number-sign.php</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?xi)(?=
			            (
			                (\\[a-z_][a-z_0-9]*\\[a-z_][a-z_0-9\\]*)|
			                ([a-z_][a-z_0-9]*\\[a-z_][a-z_0-9\\]*)
			            )
			            [^a-z_0-9\\])</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\\?[a-zA-Z_\x{7f}-\x{ff}])</string>
					<key>end</key>
					<string>(?=[^\\a-zA-Z_\x{7f}-\x{ff}])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\bNULL\b</string>
							<key>name</key>
							<string>constant.language.null.php</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(TRUE|FALSE)\b</string>
							<key>name</key>
							<string>constant.language.boolean.php</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(__(FILE|DIR|FUNCTION|CLASS|METHOD|LINE|NAMESPACE|TRAIT)__)\b</string>
							<key>name</key>
							<string>constant.language.magic.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(DE(BUG_BACKTRACE_(IGNORE_ARGS|PROVIDE_OBJECT)|FAULT_INCLUDE_PATH)|E_(ALL|CO(MPILE_(ERROR|WARNING)|RE_(ERROR|WARNING))|DEPRECATED|ERROR|NOTICE|PARSE|RECOVERABLE_ERROR|STRICT|USER_(DEPRECATED|ERROR|NOTICE|WARNING)|WARNING)|FALSE|NULL|P(EAR_(EXTENSION_DIR|INSTALL_DIR)|HP_(BIN(ARY|DIR)|CONFIG_FILE_(PATH|SCAN_DIR)|D(ATADIR|EBUG)|E(OL|XT(ENSION_DIR|RA_VERSION))|INT_(M(AX|IN)|SIZE)|L(IBDIR|OCALSTATEDIR)|M(A(JOR_VERSION|NDIR|XPATHLEN)|INOR_VERSION)|O(S|UTPUT_HANDLER_(C(LEAN(ABLE)?|ONT)|DISABLED|END|F(INAL|LUSH(ABLE)?)|REMOVABLE|ST(ART(ED)?|DFLAGS)|WRITE))|PREFIX|RELEASE_VERSION|S(API|HLIB_SUFFIX|YSCONFDIR)|VERSION(_ID)?|ZTS))|STD(ERR|IN|OUT)|TRUE|UPLOAD_ERR_(CANT_WRITE|EXTENSION|FORM_SIZE|INI_SIZE|NO_(FILE|TMP_DIR)|OK|PARTIAL)|ZEND_(DEBUG_BUILD|THREAD_SAFE))\b</string>
							<key>name</key>
							<string>support.constant.core.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(A(B(DAY_(1|2|3|4|5|6|7)|MON_(1(0|1|2)?|2|3|4|5|6|7|8|9))|LT_DIGITS|M_STR|RRAY_FILTER_USE_(BOTH|KEY)|SSERT_(ACTIVE|BAIL|CALLBACK|EXCEPTION|QUIET_EVAL|WARNING))|C(ASE_(LOWER|UPPER)|HAR_MAX|O(DESET|NNECTION_(ABORTED|NORMAL|TIMEOUT)|UNT_(NORMAL|RECURSIVE))|R(EDITS_(ALL|DOCS|FULLPAGE|G(ENERAL|ROUP)|MODULES|QA|SAPI)|NCYSTR|YPT_(BLOWFISH|EXT_DES|MD5|S(ALT_LENGTH|HA(256|512)|TD_DES))))|D(AY_(1|2|3|4|5|6|7)|IRECTORY_SEPARATOR|NS_(A(6|AAA|LL|NY)?|CNAME|HINFO|MX|N(APTR|S)|PTR|S(OA|RV)|TXT)|_(FMT|T_FMT))|E(NT_(COMPAT|DISALLOWED|HTML(401|5)|IGNORE|NOQUOTES|QUOTES|SUBSTITUTE|X(HTML|ML1))|RA(_(D_(FMT|T_FMT)|T_FMT))?|XTR_(IF_EXISTS|OVERWRITE|PREFIX_(ALL|I(F_EXISTS|NVALID)|SAME)|REFS|SKIP))|F(ILE_(APPEND|BINARY|IGNORE_NEW_LINES|NO_DEFAULT_CONTEXT|SKIP_EMPTY_LINES|TEXT|USE_INCLUDE_PATH)|NM_(CASEFOLD|NOESCAPE|P(ATHNAME|ERIOD)))|GLOB_(AVAILABLE_FLAGS|BRACE|ERR|MARK|NO(CHECK|ESCAPE|SORT)|ONLYDIR)|HTML_(ENTITIES|SPECIALCHARS)|I(MAGETYPE_(BMP|COUNT|GIF|I(CO|FF)|J(B2|P(2|C|EG(2000)?|X))|P(NG|SD)|SW(C|F)|TIFF_(II|MM)|UNKNOWN|WBMP|XBM)|N(F(O_(ALL|C(ONFIGURATION|REDITS)|ENVIRONMENT|GENERAL|LICENSE|MODULES|VARIABLES))?|I_(ALL|PERDIR|S(CANNER_(NORMAL|RAW|TYPED)|YSTEM)|USER)))|L(C_(ALL|C(OLLATE|TYPE)|M(ESSAGES|ONETARY)|NUMERIC|TIME)|O(CK_(EX|NB|SH|UN)|G_(A(LERT|UTH(PRIV)?)|C(ONS|R(IT|ON))|D(AEMON|EBUG)|E(MERG|RR)|INFO|KERN|L(OCAL(0|1|2|3|4|5|6|7)|PR)|MAIL|N(DELAY|EWS|O(TICE|WAIT))|ODELAY|P(ERROR|ID)|SYSLOG|U(SER|UCP)|WARNING)))|M(ON_(1(0|1|2)?|2|3|4|5|6|7|8|9)|_(1_PI|2_(PI|SQRTPI)|E(ULER)?|L(N(10|2|PI)|OG(10E|2E))|PI(_(2|4))?|SQRT(1_2|2|3|PI)))|N(AN|OEXPR)|P(A(SSWORD_(BCRYPT(_DEFAULT_COST)?|DEFAULT)|TH(INFO_(BASENAME|DIRNAME|EXTENSION|FILENAME)|_SEPARATOR))|HP_(QUERY_RFC(1738|3986)|ROUND_HALF_(DOWN|EVEN|ODD|UP)|URL_(FRAGMENT|HOST|P(A(SS|TH)|ORT)|QUERY|SCHEME|USER))|M_STR|SFS_(ERR_FATAL|F(EED_ME|LAG_(FLUSH_(CLOSE|INC)|NORMAL))|PASS_ON))|RADIXCHAR|S(CANDIR_SORT_(ASCENDING|DESCENDING|NONE)|EEK_(CUR|END|SET)|ORT_(ASC|DESC|FLAG_CASE|LOCALE_STRING|N(ATURAL|UMERIC)|REGULAR|STRING)|TR(EAM_(BUFFER_(FULL|LINE|NONE)|C(AST_(AS_STREAM|FOR_SELECT)|LIENT_(ASYNC_CONNECT|CONNECT|PERSISTENT)|RYPTO_METHOD_(ANY_(CLIENT|SERVER)|SSLv(2(3_(CLIENT|SERVER)|_(CLIENT|SERVER))|3_(CLIENT|SERVER))|TLS(_(CLIENT|SERVER)|v1_(0_(CLIENT|SERVER)|1_(CLIENT|SERVER)|2_(CLIENT|SERVER)))))|FILTER_(ALL|READ|WRITE)|I(GNORE_URL|PPROTO_(I(CMP|P)|RAW|TCP|UDP)|S_URL)|M(ETA_(ACCESS|GROUP(_NAME)?|OWNER(_NAME)?|TOUCH)|KDIR_RECURSIVE|UST_SEEK)|NOTIFY_(AUTH_RE(QUIRED|SULT)|CO(MPLETED|NNECT)|F(AILURE|ILE_SIZE_IS)|MIME_TYPE_IS|PROGRESS|RE(DIRECTED|SOLVE)|SEVERITY_(ERR|INFO|WARN))|O(OB|PTION_(BLOCKING|READ_(BUFFER|TIMEOUT)|WRITE_BUFFER))|P(EEK|F_(INET(6)?|UNIX))|REPORT_ERRORS|S(ERVER_(BIND|LISTEN)|HUT_(RD(WR)?|WR)|OCK_(DGRAM|R(AW|DM)|S(EQPACKET|TREAM)))|U(RL_STAT_(LINK|QUIET)|SE_PATH))|_PAD_(BOTH|LEFT|RIGHT)))|T(HOUSEP|_FMT(_AMPM)?)|YESEXPR)\b</string>
							<key>name</key>
							<string>support.constant.std.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(A(F_(INET(6)?|UNIX)|PACHE_MAP)|BUS_(ADR(ALN|ERR)|OBJERR)|C(AL_(DOW_(DAYNO|LONG|SHORT)|EASTER_(ALWAYS_(GREGORIAN|JULIAN)|DEFAULT|ROMAN)|FRENCH|GREGORIAN|J(EWISH(_ADD_(ALAFIM(_GERESH)?|GERESHAYIM))?|ULIAN)|MONTH_(FRENCH|GREGORIAN_(LONG|SHORT)|J(EWISH|ULIAN_(LONG|SHORT)))|NUM_CALS)|LD_(CONTINUED|DUMPED|EXITED|KILLED|STOPPED|TRAPPED)|URL(AUTH_(ANY(SAFE)?|BASIC|DIGEST(_IE)?|GSSNEGOTIATE|N(ONE|TLM)|ONLY)|E_(ABORTED_BY_CALLBACK|BAD_(C(ALLING_ORDER|ONTENT_ENCODING)|DOWNLOAD_RESUME|FUNCTION_ARGUMENT|PASSWORD_ENTERED)|COULDNT_(CONNECT|RESOLVE_(HOST|PROXY))|F(AILED_INIT|ILE(SIZE_EXCEEDED|_COULDNT_READ_FILE)|TP_(ACCESS_DENIED|BAD_DOWNLOAD_RESUME|C(ANT_(GET_HOST|RECONNECT)|OULDNT_(GET_SIZE|RETR_FILE|S(ET_(ASCII|BINARY)|TOR_FILE)|USE_REST))|P(ARTIAL_FILE|ORT_FAILED)|QUOTE_ERROR|SSL_FAILED|USER_PASSWORD_INCORRECT|W(EIRD_(227_FORMAT|PAS(S_REPLY|V_REPLY)|SERVER_REPLY|USER_REPLY)|RITE_ERROR))|UNCTION_NOT_FOUND)|GOT_NOTHING|HTTP_(NOT_FOUND|PO(RT_FAILED|ST_ERROR)|R(ANGE_ERROR|ETURNED_ERROR))|L(DAP_(CANNOT_BIND|INVALID_URL|SEARCH_FAILED)|IBRARY_NOT_FOUND)|MALFORMAT_USER|O(BSOLETE|K|PERATION_TIME(DOUT|OUTED)|UT_OF_MEMORY)|PARTIAL_FILE|RE(AD_ERROR|CV_ERROR)|S(END_ERROR|HARE_IN_USE|S(H|L_(C(ACERT|ERTPROBLEM|IPHER|ONNECT_ERROR)|ENGINE_(NOTFOUND|SETFAILED)|PEER_CERTIFICATE)))|T(ELNET_OPTION_SYNTAX|OO_MANY_REDIRECTS)|U(N(KNOWN_TELNET_OPTION|SUPPORTED_PROTOCOL)|RL_MALFORMAT(_USER)?)|WRITE_ERROR)|FTP(AUTH_(DEFAULT|SSL|TLS)|METHOD_(MULTICWD|NOCWD|SINGLECWD)|SSL_(ALL|C(CC_(ACTIVE|NONE|PASSIVE)|ONTROL)|NONE|TRY))|GSSAPI_DELEGATION_(FLAG|POLICY_FLAG)|INFO_(APPCONNECT_TIME|C(ERTINFO|O(N(DITION_UNMET|NECT_TIME|TENT_(LENGTH_(DOWNLOAD|UPLOAD)|TYPE))|OKIELIST))|EFFECTIVE_URL|F(ILETIME|TP_ENTRY_PATH)|H(EADER_(OUT|SIZE)|TTP(AUTH_AVAIL|_CO(DE|NNECTCODE)))|L(ASTONE|OCAL_(IP|PORT))|N(AMELOOKUP_TIME|UM_CONNECTS)|OS_ERRNO|PR(ETRANSFER_TIME|I(MARY_(IP|PORT)|VATE)|OXYAUTH_AVAIL)|R(E(DIRECT_(COUNT|TIME|URL)|QUEST_SIZE|SPONSE_CODE)|TSP_(C(LIENT_CSEQ|SEQ_RECV)|SE(RVER_CSEQ|SSION_ID)))|S(IZE_(DOWNLOAD|UPLOAD)|PEED_(DOWNLOAD|UPLOAD)|SL_(ENGINES|VERIFYRESULT)|TARTTRANSFER_TIME)|TOTAL_TIME)|M(OPT_(MAXCONNECTS|PIPELINING)|SG_DONE|_(ADDED_ALREADY|BAD_(EASY_HANDLE|HANDLE)|CALL_MULTI_PERFORM|INTERNAL_ERROR|O(K|UT_OF_MEMORY)))|OPT_(A(CCEPT(TIMEOUT_MS|_ENCODING)|DDRESS_SCOPE|PPEND|UTOREFERER)|B(INARYTRANSFER|UFFERSIZE)|C(A(INFO|PATH)|ERTINFO|O(NNECT(TIMEOUT(_MS)?|_ONLY)|OKIE(FILE|JAR|LIST|SESSION)?)|RLF(ILE)?|USTOMREQUEST)|D(IRLISTONLY|NS_(CACHE_TIMEOUT|SERVERS|USE_GLOBAL_CACHE))|E(GDSOCKET|NCODING)|F(AILONERROR|ILE(TIME)?|NMATCH_FUNCTION|O(LLOWLOCATION|RBID_REUSE)|RESH_CONNECT|TP(APPEND|LISTONLY|PORT|SSLAUTH|_(A(CCOUNT|LTERNATIVE_TO_USER)|CREATE_MISSING_DIRS|FILEMETHOD|RESPONSE_TIMEOUT|S(KIP_PASV_IP|SL(_CCC)?)|USE_(EP(RT|SV)|PRET))))|GSSAPI_DELEGATION|H(EADER(FUNCTION)?|TTP(200ALIASES|AUTH|GET|HEADER|PROXYTUNNEL|_(CONTENT_DECODING|TRANSFER_DECODING|VERSION)))|I(GNORE_CONTENT_LENGTH|N(FILE(SIZE)?|TERFACE)|PRESOLVE|SSUERCERT)|K(EYPASSWD|RB(4LEVEL|LEVEL))|LO(CALPORT(RANGE)?|W_SPEED_(LIMIT|TIME))|MA(IL_(AUTH|FROM|RCPT)|X(CONNECTS|FILESIZE|REDIRS|_(RECV_SPEED_LARGE|SEND_SPEED_LARGE)))|N(E(TRC(_FILE)?|W_(DIRECTORY_PERMS|FILE_PERMS))|O(BODY|PRO(GRESS|XY)|SIGNAL))|P(ASSWORD|O(RT|ST(FIELDS|QUOTE|REDIR)?)|R(EQUOTE|IVATE|O(GRESSFUNCTION|TOCOLS|XY(AUTH|P(ASSWORD|ORT)|TYPE|USER(NAME|PWD)|_TRANSFER_MODE)?))|UT)|QUOTE|R(AN(DOM_FILE|GE)|E(AD(DATA|FUNCTION)|DIR_PROTOCOLS|FERER|S(OLVE|UME_FROM)|TURNTRANSFER)|TSP_(CLIENT_CSEQ|REQUEST|S(E(RVER_CSEQ|SSION_ID)|TREAM_URI)|TRANSPORT))|S(AFE_UPLOAD|HARE|OCKS5_GSSAPI_(NEC|SERVICE)|S(H_(AUTH_TYPES|HOST_PUBLIC_KEY_MD5|KNOWNHOSTS|P(RIVATE_KEYFILE|UBLIC_KEYFILE))|L(CERT(PASSWD|TYPE)?|ENGINE(_DEFAULT)?|KEY(PASSWD|TYPE)?|VERSION|_(CIPHER_LIST|OPTIONS|SESSIONID_CACHE|VERIFY(HOST|PEER))))|TDERR)|T(CP_(KEEP(ALIVE|I(DLE|NTVL))|NODELAY)|ELNETOPTIONS|FTP_BLKSIZE|IME(CONDITION|OUT(_MS)?|VALUE)|LSAUTH_(PASSWORD|TYPE|USERNAME)|RANSFER(TEXT|_ENCODING))|U(NRESTRICTED_AUTH|PLOAD|RL|SE(R(AGENT|NAME|PWD)|_SSL))|VERBOSE|W(ILDCARDMATCH|RITE(FUNCTION|HEADER)))|P(AUSE_(ALL|CONT|RECV(_CONT)?|SEND(_CONT)?)|RO(TO_(ALL|DICT|F(ILE|TP(S)?)|GOPHER|HTTP(S)?|IMAP(S)?|LDAP(S)?|POP3(S)?|RT(MP(E|S|T(E|S)?)?|SP)|S(CP|FTP|MTP(S)?)|T(ELNET|FTP))|XY_(HTTP|SOCKS(4(A)?|5(_HOSTNAME)?))))|S(HOPT_(NONE|SHARE|UNSHARE)|S(H_AUTH_(ANY|DEFAULT|HOST|KEYBOARD|NONE|P(ASSWORD|UBLICKEY))|LOPT_ALLOW_BEAST))|USESSL_(ALL|CONTROL|NONE|TRY)|VERSION_NOW|_(FNMATCHFUNC_(FAIL|MATCH|NOMATCH)|HTTP_VERSION_(1_(0|1)|2_0|NONE)|IPRESOLVE_(V(4|6)|WHATEVER)|LOCK_DATA_(COOKIE|DNS|SSL_SESSION)|NETRC_(IGNORED|OPTIONAL|REQUIRED)|R(EADFUNC_PAUSE|TSPREQ_(ANNOUNCE|DESCRIBE|GET_PARAMETER|OPTIONS|P(AUSE|LAY)|REC(EIVE|ORD)|SET(UP|_PARAMETER)|TEARDOWN))|SSLVERSION_(DEFAULT|SSLv(2|3)|TLSv1(_(0|1|2))?)|T(IMECOND_(IF(MODSINCE|UNMODSINCE)|LASTMOD|NONE)|LSAUTH_SRP)|VERSION_(HTTP2|IPV6|KERBEROS4|LIBZ|SSL)|WRITEFUNC_PAUSE)))|D(ATE_(ATOM|COOKIE|ISO8601|R(FC(1(036|123)|2822|3339(_EXTENDED)?|8(22|50))|SS)|W3C)|OM(STRING_SIZE_ERR|_(HIERARCHY_REQUEST_ERR|IN(DEX_SIZE_ERR|USE_ATTRIBUTE_ERR|VALID_(ACCESS_ERR|CHARACTER_ERR|MODIFICATION_ERR|STATE_ERR))|N(AMESPACE_ERR|O(T_(FOUND_ERR|SUPPORTED_ERR)|_(DATA_ALLOWED_ERR|MODIFICATION_ALLOWED_ERR)))|PHP_ERR|SYNTAX_ERR|VALIDATION_ERR|WRONG_DOCUMENT_ERR)))|EXIF_USE_MBSTRING|F(IL(EINFO_(CONTINUE|DEVICES|MIME(_(ENCODING|TYPE))?|NONE|PRESERVE_ATIME|RAW|SYMLINK)|TER_(CALLBACK|DEFAULT|F(LAG_(ALLOW_(FRACTION|HEX|OCTAL|SCIENTIFIC|THOUSAND)|E(MPTY_STRING_NULL|NCODE_(AMP|HIGH|LOW))|HOST(NAME|_REQUIRED)|IPV(4|6)|NO(NE|_(ENCODE_QUOTES|PRIV_RANGE|RES_RANGE))|PATH_REQUIRED|QUERY_REQUIRED|S(CHEME_REQUIRED|TRIP_(BACKTICK|HIGH|LOW)))|ORCE_ARRAY)|NULL_ON_FAILURE|REQUIRE_(ARRAY|SCALAR)|SANITIZE_(E(MAIL|NCODED)|FULL_SPECIAL_CHARS|MAGIC_QUOTES|NUMBER_(FLOAT|INT)|S(PECIAL_CHARS|TRI(NG|PPED))|URL)|UNSAFE_RAW|VALIDATE_(BOOLEAN|DOMAIN|EMAIL|FLOAT|I(NT|P)|MAC|REGEXP|URL)))|ORCE_(DEFLATE|GZIP)|PE_(FLT(DIV|INV|OVF|RES|SUB|UND)|INT(DIV|OVF))|TP_(A(SCII|UTO(RESUME|SEEK))|BINARY|F(AILED|INISHED)|IMAGE|MOREDATA|T(EXT|IMEOUT_SEC)|USEPASVADDRESS))|G(D_(BUNDLED|EXTRA_VERSION|M(AJOR_VERSION|INOR_VERSION)|RELEASE_VERSION|VERSION)|RAPHEME_EXTR_(COUNT|MAX(BYTES|CHARS)))|HASH_HMAC|I(CONV_(IMPL|MIME_DECODE_(CONTINUE_ON_ERROR|STRICT)|VERSION)|DNA_(ALLOW_UNASSIGNED|CHECK_(BIDI|CONTEXTJ)|DEFAULT|ERROR_(BIDI|CONTEXTJ|D(ISALLOWED|OMAIN_NAME_TOO_LONG)|EMPTY_LABEL|HYPHEN_3_4|INVALID_ACE_LABEL|L(ABEL_(HAS_DOT|TOO_LONG)|EADING_(COMBINING_MARK|HYPHEN))|PUNYCODE|TRAILING_HYPHEN)|NONTRANSITIONAL_TO_(ASCII|UNICODE)|USE_STD3_RULES)|LL_(BADSTK|COPROC|ILL(ADR|OP(C|N)|TRP)|PRV(OPC|REG))|MG_(A(FFINE_(ROTATE|S(CALE|HEAR_(HORIZONTAL|VERTICAL))|TRANSLATE)|RC_(CHORD|EDGED|NOFILL|PIE|ROUNDED))|B(E(LL|SSEL)|I(CUBIC(_FIXED)?|LINEAR_FIXED)|LACKMAN|OX|SPLINE)|C(ATMULLROM|OLOR_(BRUSHED|STYLED(BRUSHED)?|T(ILED|RANSPARENT))|ROP_(BLACK|DEFAULT|SIDES|T(HRESHOLD|RANSPARENT)|WHITE))|EFFECT_(ALPHABLEND|NORMAL|OVERLAY|REPLACE)|F(ILTER_(BRIGHTNESS|CO(LORIZE|NTRAST)|E(DGEDETECT|MBOSS)|G(AUSSIAN_BLUR|RAYSCALE)|MEAN_REMOVAL|NEGATE|PIXELATE|S(ELECTIVE_BLUR|MOOTH))|LIP_(BOTH|HORIZONTAL|VERTICAL))|G(AUSSIAN|D2_(COMPRESSED|RAW)|ENERALIZED_CUBIC|IF)|H(A(MMING|NNING)|ERMITE)|JP(EG|G)|MITCHELL|NEAREST_NEIGHBOUR|P(NG|OWER)|QUADRATIC|SINC|TRIANGLE|W(BMP|EIGHTED4)|XPM)|N(PUT_(COOKIE|ENV|GET|POST|REQUEST|SE(RVER|SSION))|TL_(I(CU_(DATA_VERSION|VERSION)|DNA_VARIANT_(2003|UTS46))|MAX_LOCALE_LEN))|P(PROTO_IP(V6)?|V6_(HOPLIMIT|MULTICAST_(HOPS|IF|LOOP)|PKTINFO|RECV(HOPLIMIT|PKTINFO|TCLASS)|TCLASS|UNICAST_HOPS|V6ONLY)|_MULTICAST_(IF|LOOP|TTL)))|JSON_(BIGINT_AS_STRING|ERROR_(CTRL_CHAR|DEPTH|IN(F_OR_NAN|VALID_PROPERTY_NAME)|NONE|RECURSION|S(TATE_MISMATCH|YNTAX)|U(NSUPPORTED_TYPE|TF(16|8)))|FORCE_OBJECT|HEX_(A(MP|POS)|QUOT|TAG)|NUMERIC_CHECK|OBJECT_AS_ARRAY|P(ARTIAL_OUTPUT_ON_ERROR|RE(SERVE_ZERO_FRACTION|TTY_PRINT))|UNESCAPED_(SLASHES|UNICODE))|LIBXML_(BIGLINES|COMPACT|D(OTTED_VERSION|TD(ATTR|LOAD|VALID))|ERR_(ERROR|FATAL|NONE|WARNING)|HTML_NO(DEFDTD|IMPLIED)|LOADED_VERSION|N(O(BLANKS|CDATA|E(MPTYTAG|NT|RROR)|NET|WARNING|XMLDECL)|SCLEAN)|P(ARSEHUGE|EDANTIC)|SCHEMA_CREATE|VERSION|XINCLUDE)|M(B_(CASE_(LOWER|TITLE|UPPER)|OVERLOAD_(MAIL|REGEX|STRING))|C(AST_(BLOCK_SOURCE|JOIN_(GROUP|SOURCE_GROUP)|LEAVE_(GROUP|SOURCE_GROUP)|UNBLOCK_SOURCE)|RYPT_(3DES|ARCFOUR(_IV)?|BLOWFISH(_COMPAT)?|C(AST_(128|256)|RYPT)|DE(CRYPT|S|V_(RANDOM|URANDOM))|EN(CRYPT|IGNA)|GOST|IDEA|LOKI97|M(ARS|ODE_(C(BC|FB)|ECB|NOFB|OFB|STREAM))|PANAMA|R(AND|C(2|6)|IJNDAEL_(1(28|92)|256))|S(AFER(128|64|PLUS)|ERPENT|KIPJACK)|T(HREEWAY|RIPLEDES|WOFISH)|WAKE|XTEA))|HASH_(ADLER32|CRC32(B)?|FNV1(32|64|A(32|64))|GOST|HAVAL(1(28|60|92)|2(24|56))|JOAAT|MD(2|4|5)|RIPEMD(1(28|60)|256|320)|S(HA(1|2(24|56)|384|512)|NEFRU256)|TIGER(1(28|60))?|WHIRLPOOL)|SG_(C(MSG_CLOEXEC|ONFIRM|TRUNC)|DONT(ROUTE|WAIT)|E(AGAIN|NOMSG|O(F|R)|RRQUEUE|XCEPT)|IPC_NOWAIT|MORE|NO(ERROR|SIGNAL)|OOB|PEEK|TRUNC|WAIT(ALL|FORONE))|YSQLI_(A(S(SOC|YNC)|UTO_INCREMENT_FLAG)|B(INARY_FLAG|LOB_FLAG|OTH)|C(LIENT_(C(AN_HANDLE_EXPIRED_PASSWORDS|OMPRESS)|FOUND_ROWS|I(GNORE_SPACE|NTERACTIVE)|NO_SCHEMA|SSL(_(DONT_VERIFY_SERVER_CERT|VERIFY_SERVER_CERT))?)|URSOR_TYPE_(FOR_UPDATE|NO_CURSOR|READ_ONLY|SCROLLABLE))|D(ATA_TRUNCATED|EBUG_TRACE_ENABLED)|ENUM_FLAG|GROUP_FLAG|INIT_COMMAND|MULTIPLE_KEY_FLAG|N(O(T_NULL_FLAG|_D(ATA|EFAULT_VALUE_FLAG))|UM(_FLAG)?)|O(N_UPDATE_NOW_FLAG|PT_(C(AN_HANDLE_EXPIRED_PASSWORDS|ONNECT_TIMEOUT)|INT_AND_FLOAT_NATIVE|LOCAL_INFILE|NET_(CMD_BUFFER_SIZE|READ_BUFFER_SIZE)|SSL_VERIFY_SERVER_CERT))|P(ART_KEY_FLAG|RI_KEY_FLAG)|RE(AD_DEFAULT_(FILE|GROUP)|FRESH_(BACKUP_LOG|GRANT|HOSTS|LOG|MASTER|S(LAVE|TATUS)|T(ABLES|HREADS))|PORT_(ALL|ERROR|INDEX|OFF|STRICT))|S(E(RVER_(P(S_OUT_PARAMS|UBLIC_KEY)|QUERY_(NO_(GOOD_INDEX_USED|INDEX_USED)|WAS_SLOW))|T_(CHARSET_(DIR|NAME)|FLAG))|T(MT_ATTR_(CURSOR_TYPE|PREFETCH_ROWS|UPDATE_MAX_LENGTH)|ORE_RESULT(_COPY_DATA)?))|T(IMESTAMP_FLAG|RANS_(COR_(AND_(CHAIN|NO_CHAIN)|NO_RELEASE|RELEASE)|START_(READ_(ONLY|WRITE)|WITH_CONSISTENT_SNAPSHOT))|YPE_(B(IT|LOB)|CHAR|D(ATE(TIME)?|ECIMAL|OUBLE)|ENUM|FLOAT|GEOMETRY|INT(24|ERVAL)|JSON|LONG(LONG|_BLOB)?|MEDIUM_BLOB|N(EWD(ATE|ECIMAL)|ULL)|S(ET|HORT|TRING)|TI(ME(STAMP)?|NY(_BLOB)?)|VAR_STRING|YEAR))|U(N(IQUE_KEY_FLAG|SIGNED_FLAG)|SE_RESULT)|ZEROFILL_FLAG))|OPENSSL_(ALGO_(DSS1|MD(4|5)|RMD160|SHA(1|2(24|56)|384|512))|CIPHER_(3DES|AES_(1(28_CBC|92_CBC)|256_CBC)|DES|RC2_(128|40|64))|DEFAULT_STREAM_CIPHERS|KEYTYPE_(D(H|SA)|EC|RSA)|NO_PADDING|PKCS1_(OAEP_PADDING|PADDING)|RAW_DATA|SSLV23_PADDING|TLSEXT_SERVER_NAME|VERSION_(NUMBER|TEXT)|ZERO_PADDING)|P(C(NTL_E(2BIG|A(CCES|GAIN)|CHILD|FAULT|I(N(TR|VAL)|O|SDIR)|L(IBBAD|OOP)|MFILE|N(AMETOOLONG|FILE|O(E(NT|XEC)|MEM|TDIR))|PERM|SRCH|TXTBSY)|RE_VERSION)|HP_(BINARY_READ|NORMAL_READ|SESSION_(ACTIVE|DISABLED|NONE))|KCS7_(BINARY|DETACHED|NO(ATTR|C(ERTS|HAIN)|INTERN|SIGS|VERIFY)|TEXT)|NG_(ALL_FILTERS|FILTER_(AVG|NONE|PAETH|SUB|UP)|NO_FILTER)|O(LL_(ERR|HUP|IN|MSG|OUT|PRI)|SIX_(F_OK|R(LIMIT_(AS|C(ORE|PU)|DATA|FSIZE|INFINITY|LOCKS|M(EMLOCK|SGQUEUE)|N(ICE|OFILE|PROC)|R(SS|T(PRIO|TIME))|S(IGPENDING|TACK))|_OK)|S_IF(BLK|CHR|IFO|REG|SOCK)|W_OK|X_OK))|R(EG_(BA(CKTRACK_LIMIT_ERROR|D_UTF8_(ERROR|OFFSET_ERROR))|GREP_INVERT|INTERNAL_ERROR|JIT_STACKLIMIT_ERROR|NO_ERROR|OFFSET_CAPTURE|PATTERN_ORDER|RECURSION_LIMIT_ERROR|S(ET_ORDER|PLIT_(DELIM_CAPTURE|NO_EMPTY|OFFSET_CAPTURE)))|IO_(P(GRP|ROCESS)|USER)))|READLINE_LIB|S(CM_(CREDENTIALS|RIGHTS)|EGV_(ACCERR|MAPERR)|I(G(A(BRT|LRM)|B(ABY|US)|C(HLD|LD|ONT)|FPE|HUP|I(LL|NT|O(T)?)|KILL|P(IPE|OLL|ROF|WR)|QUIT|S(EGV|T(KFLT|OP)|YS)|T(ERM|RAP|STP|T(IN|OU))|U(RG|SR(1|2))|VTALRM|WINCH|X(CPU|FSZ)|_(BLOCK|DFL|ERR|IGN|SETMASK|UNBLOCK))|_(ASYNCIO|KERNEL|MESGQ|QUEUE|SIGIO|T(IMER|KILL)|USER))|O(AP_(1_(1|2)|A(CTOR_(N(EXT|ONE)|UNLIMATERECEIVER)|UTHENTICATION_(BASIC|DIGEST))|COMPRESSION_(ACCEPT|DEFLATE|GZIP)|DOCUMENT|ENC(ODED|_(ARRAY|OBJECT))|FUNCTIONS_ALL|LITERAL|PERSISTENCE_(REQUEST|SESSION)|RPC|S(INGLE_ELEMENT_ARRAYS|SL_METHOD_(SSLv(2(3)?|3)|TLS))|USE_XSI_ARRAY_TYPE|WAIT_ONE_WAY_CALLS)|CK(ET_E(2BIG|A(CCES|D(DR(INUSE|NOTAVAIL)|V)|FNOSUPPORT|GAIN|LREADY)|B(AD(E|F(D)?|MSG|R(QC)?|SLT)|USY)|C(HRNG|O(MM|NN(ABORTED|RE(FUSED|SET))))|D(ESTADDRREQ|QUOT)|EXIST|FAULT|HOST(DOWN|UNREACH)|I(DRM|N(PROGRESS|TR|VAL)|O|S(CONN|DIR|NAM))|L(2(HLT|NSYNC)|3(HLT|RST)|NRNG|OOP)|M(EDIUMTYPE|FILE|LINK|SGSIZE|ULTIHOP)|N(AMETOOLONG|ET(DOWN|RESET|UNREACH)|FILE|O(ANO|BUFS|CSI|D(ATA|EV)|ENT|L(CK|INK)|M(E(DIUM|M)|SG)|NET|PROTOOPT|S(PC|R|TR|YS)|T(BLK|CONN|DIR|EMPTY|SOCK|TY|UNIQ))|XIO)|OPNOTSUPP|P(ERM|FNOSUPPORT|IPE|ROTO(NOSUPPORT|TYPE)?)|R(E(M(CHG|OTE(IO)?)|START)|OFS)|S(HUTDOWN|OCKTNOSUPPORT|PIPE|RMNT|TRPIPE)|T(IME(DOUT)?|OOMANYREFS)|U(NATCH|SERS)|WOULDBLOCK|X(DEV|FULL))|_(DGRAM|R(AW|DM)|S(EQPACKET|TREAM)))|L_(SOCKET|TCP|UDP)|MAXCONN|_(B(INDTODEVICE|ROADCAST)|D(EBUG|ONTROUTE)|ERROR|KEEPALIVE|LINGER|OOBINLINE|PASSCRED|R(CV(BUF|LOWAT|TIMEO)|EUSE(ADDR|PORT))|SND(BUF|LOWAT|TIMEO)|TYPE))|QLITE3_(ASSOC|B(LOB|OTH)|FLOAT|INTEGER|NU(LL|M)|OPEN_(CREATE|READ(ONLY|WRITE))|TEXT)|UNFUNCS_RET_(DOUBLE|STRING|TIMESTAMP))|T(CP_NODELAY|IDY_(NODETYPE_(ASP|C(DATA|OMMENT)|DOCTYPE|END|JSTE|P(HP|ROCINS)|ROOT|S(ECTION|TART(END)?)|TEXT|XMLDECL)|TAG_(A(BBR|CRONYM|DDRESS|LIGN|PPLET|REA)?|B(ASE(FONT)?|DO|GSOUND|IG|L(INK|OCKQUOTE)|ODY|R|UTTON)?|C(APTION|ENTER|ITE|O(DE|L(GROUP)?|MMENT))|D(D|EL|FN|I(R|V)|L|T)|EM(BED)?|F(IELDSET|O(NT|RM)|RAME(SET)?)|H(1|2|3|4|5|6|EAD|R|TML)|I(FRAME|LAYER|MG|N(PUT|S)|SINDEX)?|K(BD|EYGEN)|L(A(BEL|YER)|EGEND|I(NK|STING)?)|M(A(P|RQUEE)|E(NU|TA)|ULTICOL)|NO(BR|EMBED|FRAMES|LAYER|S(AVE|CRIPT))|O(BJECT|L|PT(GROUP|ION))|P(ARAM|LAINTEXT|RE)?|Q|R(B(C)?|P|T(C)?|UBY)|S(AMP|CRIPT|E(LECT|RV(ER|LET))|MALL|PA(CER|N)|T(R(IKE|ONG)|YLE)|U(B|P))?|T(ABLE|BODY|D|EXTAREA|FOOT|H(EAD)?|ITLE|R|T)|U(L|NKNOWN)?|VAR|WBR|XMP))|RAP_(BRKPT|TRACE))|U(LOC_(ACTUAL_LOCALE|VALID_LOCALE)|NKNOWN_TYPE|_(AMBIGUOUS_ALIAS_WARNING|B(AD_VARIABLE_DEFINITION|RK_(ASSIGN_ERROR|ERROR_(LIMIT|START)|HEX_DIGITS_EXPECTED|IN(IT_ERROR|TERNAL_ERROR)|M(ALFORMED_RULE_TAG|ISMATCHED_PAREN)|NEW_LINE_IN_QUOTED_STRING|RULE_(EMPTY_SET|SYNTAX)|SEMICOLON_EXPECTED|UN(CLOSED_SET|DEFINED_VARIABLE|RECOGNIZED_OPTION)|VARIABLE_REDFINITION)|UFFER_OVERFLOW_ERROR)|C(E_NOT_FOUND_ERROR|OLLATOR_VERSION_MISMATCH)|DIFFERENT_UCA_VERSION|E(NUM_OUT_OF_SYNC_ERROR|RROR_(LIMIT|WARNING_(LIMIT|START)))|F(ILE_ACCESS_ERROR|MT_PARSE_ERROR_(LIMIT|START))|I(DNA_(ACE_PREFIX_ERROR|CHECK_BIDI_ERROR|DOMAIN_NAME_TOO_LONG_ERROR|ERROR_(LIMIT|START)|LABEL_TOO_LONG_ERROR|PROHIBITED_ERROR|STD3_ASCII_RULES_ERROR|UNASSIGNED_ERROR|VERIFICATION_ERROR|ZERO_LENGTH_LABEL_ERROR)|LLEGAL_(ARGUMENT_ERROR|CHAR(ACTER|_(FOUND|IN_SEGMENT))|ESCAPE_SEQUENCE|PAD_POSITION)|N(DEX_OUTOFBOUNDS_ERROR|TERNAL_(PROGRAM_ERROR|TRANSLITERATOR_ERROR)|VA(LID_(CHAR_FOUND|F(ORMAT_ERROR|UNCTION)|ID|PROPERTY_PATTERN|RBT_SYNTAX|STATE_ERROR|TABLE_F(ILE|ORMAT))|RIANT_CONVERSION_ERROR)))|M(ALFORMED_(EXPONENTIAL_PATTERN|PRAGMA|RULE|S(ET|YMBOL_REFERENCE)|UNICODE_ESCAPE|VARIABLE_(DEFINITION|REFERENCE))|E(MORY_ALLOCATION_ERROR|SSAGE_PARSE_ERROR)|IS(MATCHED_SEGMENT_DELIMITERS|PLACED_(ANCHOR_START|C(OMPOUND_FILTER|URSOR_OFFSET)|QUANTIFIER)|SING_(OPERATOR|RESOURCE_ERROR|SEGMENT_CLOSE))|ULTIPLE_(ANTE_CONTEXTS|C(OMPOUND_FILTERS|URSORS)|DECIMAL_SEP(ARATORS|ERATORS)|EXPONENTIAL_SYMBOLS|P(AD_SPECIFIERS|ER(CENT_SYMBOLS|MILL_SYMBOLS)|OST_CONTEXTS)))|NO_(SPACE_AVAILABLE|WRITE_PERMISSION)|P(A(RSE_ERROR(_(LIMIT|START))?|TTERN_SYNTAX_ERROR)|RIMARY_TOO_LONG_ERROR)|R(E(GEX_(BAD_(ESCAPE_SEQUENCE|INTERVAL)|ERROR_(LIMIT|START)|IN(TERNAL_ERROR|VALID_(BACK_REF|FLAG|STATE))|LOOK_BEHIND_LIMIT|M(AX_LT_MIN|ISMATCHED_PAREN)|NUMBER_TOO_BIG|PROPERTY_SYNTAX|RULE_SYNTAX|SET_CONTAINS_STRING|UNIMPLEMENTED)|SOURCE_TYPE_MISMATCH)|ULE_MASK_ERROR)|S(AFECLONE_ALLOCATED_WARNING|ORT_KEY_TOO_SHORT_WARNING|T(A(NDARD_ERROR_LIMIT|TE_(OLD_WARNING|TOO_OLD_ERROR))|RING(PREP_(CHECK_BIDI_ERROR|PROHIBITED_ERROR|UNASSIGNED_ERROR)|_NOT_TERMINATED_WARNING)))|T(OO_MANY_ALIASES_ERROR|R(AILING_BACKSLASH|UNCATED_CHAR_FOUND))|U(N(CLOSED_SEGMENT|DEFINED_(SEGMENT_REFERENCE|VARIABLE)|EXPECTED_TOKEN|MATCHED_BRACES|QUOTED_SPECIAL|SUPPORTED_(ATTRIBUTE|E(RROR|SCAPE_SEQUENCE)|PROPERTY)|TERMINATED_QUOTE)|S(ELESS_COLLATOR_ERROR|ING_(DEFAULT_WARNING|FALLBACK_WARNING)))|VARIABLE_RANGE_(EXHAUSTED|OVERLAP)|ZERO_ERROR))|W(CONTINUED|NOHANG|SDL_CACHE_(BOTH|DISK|MEMORY|NONE)|UNTRACED)|X(509_PURPOSE_(ANY|CRL_SIGN|NS_SSL_SERVER|S(MIME_(ENCRYPT|SIGN)|SL_(CLIENT|SERVER)))|DEBUG_(CC_(BRANCH_CHECK|DEAD_CODE|UNUSED)|STACK_NO_DESC|TRACE_(APPEND|COMPUTERIZED|HTML|NAKED_FILENAME))|ML_(ATTRIBUTE_(CDATA|DECL_NODE|EN(TITY|UMERATION)|ID(REF(S)?)?|N(MTOKEN(S)?|O(DE|TATION)))|C(DATA_SECTION_NODE|OMMENT_NODE)|D(OCUMENT_(FRAG_NODE|NODE|TYPE_NODE)|TD_NODE)|E(LEMENT_(DECL_NODE|NODE)|NTITY_(DECL_NODE|NODE|REF_NODE)|RROR_(A(SYNC_ENTITY|TTRIBUTE_EXTERNAL_ENTITY_REF)|B(AD_CHAR_REF|INARY_ENTITY_REF)|DUPLICATE_ATTRIBUTE|EXTERNAL_ENTITY_HANDLING|IN(CORRECT_ENCODING|VALID_TOKEN)|JUNK_AFTER_DOC_ELEMENT|MISPLACED_XML_PI|NO(NE|_(ELEMENTS|MEMORY))|PAR(AM_ENTITY_REF|TIAL_CHAR)|RECURSIVE_ENTITY_REF|SYNTAX|TAG_MISMATCH|UN(CLOSED_(CDATA_SECTION|TOKEN)|DEFINED_ENTITY|KNOWN_ENCODING)))|HTML_DOCUMENT_NODE|LOCAL_NAMESPACE|N(AMESPACE_DECL_NODE|OTATION_NODE)|OPTION_(CASE_FOLDING|SKIP_(TAGSTART|WHITE)|TARGET_ENCODING)|PI_NODE|SAX_IMPL|TEXT_NODE)|SD_(1999_(NAMESPACE|TIMEINSTANT)|ANY(TYPE|URI|XML)|B(ASE64BINARY|OOLEAN|YTE)|D(ATE(TIME)?|ECIMAL|OUBLE|URATION)|ENTIT(IES|Y)|FLOAT|G(DAY|MONTH(DAY)?|YEAR(MONTH)?)|HEXBINARY|I(D(REF(S)?)?|NT(EGER)?)|L(ANGUAGE|ONG)|N(AME(SPACE)?|CNAME|EGATIVEINTEGER|MTOKEN(S)?|O(N(NEGATIVEINTEGER|POSITIVEINTEGER)|RMALIZEDSTRING|TATION))|POSITIVEINTEGER|QNAME|S(HORT|TRING)|T(IME|OKEN)|UNSIGNED(BYTE|INT|LONG|SHORT)))|ZLIB_(BLOCK|DEFAULT_STRATEGY|ENCODING_(DEFLATE|GZIP|RAW)|F(I(LTERED|NISH|XED)|ULL_FLUSH)|HUFFMAN_ONLY|NO_FLUSH|PARTIAL_FLUSH|RLE|SYNC_FLUSH|VER(NUM|SION)))\b</string>
							<key>name</key>
							<string>support.constant.ext.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\bT(OKEN_PARSE|_(A(BSTRACT|ND_EQUAL|RRAY(_CAST)?|S)|B(OOL(EAN_(AND|OR)|_CAST)|REAK)|C(A(LLABLE|SE|TCH)|L(ASS(_C)?|O(NE|SE_TAG))|O(ALESCE|MMENT|N(CAT_EQUAL|ST(ANT_ENCAPSED_STRING)?|TINUE))|URLY_OPEN)|D(E(C(LARE)?|FAULT)|I(R|V_EQUAL)|NUMBER|O(C_COMMENT|LLAR_OPEN_CURLY_BRACES|UBLE_(ARROW|C(AST|OLON)))?)|E(CHO|L(LIPSIS|SE(IF)?)|MPTY|N(CAPSED_AND_WHITESPACE|D(DECLARE|FOR(EACH)?|IF|SWITCH|WHILE|_HEREDOC))|VAL|X(IT|TENDS))|F(I(LE|NAL(LY)?)|OR(EACH)?|UNC(TION|_C))|G(LOBAL|OTO)|HALT_COMPILER|I(F|MPLEMENTS|N(C(LUDE(_ONCE)?)?|LINE_HTML|ST(ANCEOF|EADOF)|T(ERFACE|_CAST))|S(SET|_(EQUAL|GREATER_OR_EQUAL|IDENTICAL|NOT_(EQUAL|IDENTICAL)|SMALLER_OR_EQUAL)))|L(I(NE|ST)|NUMBER|OGICAL_(AND|OR|XOR))|M(ETHOD_C|INUS_EQUAL|OD_EQUAL|UL_EQUAL)|N(AMESPACE|EW|S_(C|SEPARATOR)|UM_STRING)|O(BJECT_(CAST|OPERATOR)|PEN_TAG(_WITH_ECHO)?|R_EQUAL)|P(AAMAYIM_NEKUDOTAYIM|LUS_EQUAL|OW(_EQUAL)?|R(I(NT|VATE)|OTECTED)|UBLIC)|RE(QUIRE(_ONCE)?|TURN)|S(L(_EQUAL)?|PACESHIP|R(_EQUAL)?|T(A(RT_HEREDOC|TIC)|RING(_(CAST|VARNAME))?)|WITCH)|T(HROW|R(AIT(_C)?|Y))|U(NSET(_CAST)?|SE)|VAR(IABLE)?|WHI(LE|TESPACE)|XOR_EQUAL|YIELD(_FROM)?))\b</string>
							<key>name</key>
							<string>support.constant.parser-token.php</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>In PHP, any identifier which is not a variable is taken to be a constant.
        				However, if there is no constant defined with the given name then a notice
        				is generated and the constant is assumed to have the value of its name.</string>
							<key>match</key>
							<string>[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*</string>
							<key>name</key>
							<string>constant.other.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)
							\s*(array) # Typehint
							\s*(&amp;)? 					# Reference
							\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
							\s*(=)	# A default value
							\s*(?:(array(?=[^\[])|(?=\[))\s*(\(|\[))
							</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.array.php</string>
					<key>end</key>
					<string>\)|\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.argument.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#numbers</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.language.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.non-null-typehinted.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?xi)
							\s*(array) # Typehint
							\s*(&amp;)? 					# Reference
							\s*((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*) # The variable name
							(?:
								\s*(?:(=)\s*(?:(null)|((?:\S*?\(\))|(?:\S*?))))	# A default value
							)?
							\s*(?=,|\)|/[/*]|\#|$) # A closing parentheses (end of argument list) or a comma or a comment
							</string>
					<key>name</key>
					<string>meta.function.argument.array.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?=[a-z_0-9\\]*[a-z_][a-z_0-9]*\s*&amp;?\s*\$)</string>
					<key>end</key>
					<string>(?=,|\)|/[/*]|\#|$)</string>
					<key>name</key>
					<string>meta.function.argument.typehinted.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.reference.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.language.php</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.non-null-typehinted.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?xi)
        							\s*([a-z_][a-z_0-9]*)? # Typehinted class name
        							\s*(&amp;)? 					# Reference
        							\s*((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*) # The variable name
        							(?:
        								\s*(?:(=)\s*(?:(null)|((?:\S*?\(\))|(?:\S*?))))	# A default value
        							)?
        							\s*(?=,|\)|/[/*]|\#|$) # A closing parentheses (end of argument list) or a comma
					        </string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\)|/[/*]|\#)</string>
					<key>name</key>
					<string>meta.function.argument.no-default.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(?:\s*(=)\s*)\s*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=,|\)|/[/*]|\#)</string>
					<key>name</key>
					<string>meta.function.argument.default.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-default-types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\\?[a-z_0-9\\]+\\[a-z_][a-z0-9_]*\s*\()</string>
					<key>comment</key>
					<string>Functions in a user-defined namespace (overrides any built-ins)</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#user-function-call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(print|echo)\b</string>
					<key>name</key>
					<string>support.function.construct.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(\\)?(?=\b[a-z_][a-z_0-9]*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Root namespace function calls (built-in or user)</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(isset|unset|e(val|mpty)|list)(?=\s*\()</string>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#user-function-call</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>heredoc</key>
		<dict>
			<key>begin</key>
			<string>(?=&lt;&lt;&lt;\s*('?)([a-zA-Z_]+[a-zA-Z0-9_]*)(\1)\s*$)</string>
			<key>end</key>
			<string>^((HTML|XML|SQL|JAVASCRIPT|JSON|CSS)|\2)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.heredoc.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.unquoted.heredoc.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(HTML)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>text.html</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(XML)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>text.xml</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.xml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(SQL)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.sql</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(JAVASCRIPT)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.js</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(JSON)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.json</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.json</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.json</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(CSS)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.css</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.css</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*([a-zA-Z_]+[a-zA-Z0-9_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*'([a-zA-Z_]+[a-zA-Z0-9_]*)'</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>string.unquoted.nowdoc.php</string>
				</dict>
			</array>
		</dict>
		<key>instantiation</key>
		<dict>
			<key>begin</key>
			<string>(?i)(new)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.new.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(?=[^$a-z0-9_\\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(parent|static|self)(?=[^a-z0-9_])</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>comment</key>
			<string>http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[0-7]{1,3}</string>
					<key>name</key>
					<string>constant.numeric.octal.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f]{1,2}</string>
					<key>name</key>
					<string>constant.numeric.hex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\u\{[0-9A-Fa-f]+\}</string>
					<key>name</key>
					<string>constant.numeric.unicodepoint.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[efnrtv\\\$\"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\{)(?=\$.*?\})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>invoke-call</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)(\$+)([a-z_][a-z_0-9]*)(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.invoke.php</string>
		</dict>
		<key>language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(interface)\s+([a-z0-9_]+)\s*(extends)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.interface.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([a-zA-Z0-9_]+)?\s*(?:(?=\{)|$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.interface.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(namespace)\b\s+(?=([a-z0-9_\\]+\s*($|[;{]|(\/[\/*])))|$)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.namespace.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.type.namespace.php</string>
					<key>end</key>
					<string>(?i)(?=\s*$|[^a-z0-9_\\])</string>
					<key>name</key>
					<string>meta.namespace.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\s*\b(use)\s+(?:((const)|(function))\s+)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.use.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.const.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;|(?:^\s*$))</string>
					<key>name</key>
					<string>meta.use.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\s*(?=[a-z_0-9\\])</string>
							<key>end</key>
							<string>(?xi)(?:
    			                (?:\s*(as)\b\s*([a-z_0-9]*)\s*(?=,|;|$))
    			                |(?=,|;|$)
    			            )</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.use-as.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.other.namespace.use-as.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-builtin</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\s*(?=[\\a-z_0-9])</string>
									<key>end</key>
									<string>$|(?=[\s,;])</string>
									<key>name</key>
									<string>support.other.namespace.use.php</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\\</string>
											<key>name</key>
											<string>punctuation.separator.inheritance.php</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\s*,\s*</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(trait)\s+([a-zA-Z0-9_]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.trait.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.trait.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\{)</string>
					<key>name</key>
					<string>meta.trait.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(abstract|final)?\s*(class)\s+([a-z0-9_]+)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.abstract.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(extends)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.extends.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.other.inherited-class.php</string>
							<key>end</key>
							<string>(?i)(?=[^a-z_0-9\\])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
									<key>end</key>
									<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.other.inherited-class.php</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#namespace</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#class-builtin</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#namespace</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)[a-z_][a-z_0-9]*</string>
									<key>name</key>
									<string>entity.other.inherited-class.php</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(implements)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.implements.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=[;{])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)(?=[a-z0-9_\\]+)</string>
									<key>contentName</key>
									<string>meta.other.inherited-class.php</string>
									<key>end</key>
									<string>(?i)(?:\s*(?:,|(?=[^a-z0-9_\\\s]))\s*)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
											<key>end</key>
											<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>entity.other.inherited-class.php</string>
												</dict>
											</dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#namespace</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#class-builtin</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#namespace</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?i)[a-z_][a-z_0-9]*</string>
											<key>name</key>
											<string>entity.other.inherited-class.php</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\s*\b(break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|return|switch|use|while|yield)\b</string>
					<key>name</key>
					<string>keyword.control.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b((?:require|include)(?:_once)?)\b\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.include.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|;|$)</string>
					<key>name</key>
					<string>meta.include.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(catch)\b\s*\(\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.catch.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([A-Za-z_][A-Za-z_0-9]*)\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*\)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.exception.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.catch.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(catch|try|throw|exception|finally)\b</string>
					<key>name</key>
					<string>keyword.control.exception.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(function)\s*(&amp;\s*)?(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\{</string>
					<key>name</key>
					<string>meta.function.closure.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function.arguments.php</string>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-arguments</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(use)\s*(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.function.use.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.reference.php</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>variable.other.php</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.variable.php</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\))</string>
									<key>name</key>
									<string>meta.function.closure.use.php</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)\s*
					    ((?:(?:final|abstract|public|private|protected|static)\s+)*)
				        (function)
				        (?:\s+|(\s*&amp;\s*))
				        (?:
				            (__(?:call|construct|debugInfo|destruct|get|set|isset|unset|toString|clone|set_state|sleep|wakeup|autoload|invoke|callStatic))
				            |([a-zA-Z0-9_]+)
				        )
				        \s*
				        (\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.arguments.php</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#invoke-call</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)\s*(?=
				        [a-z_0-9$\\]+(::)
                        (?:
        				    ([a-z_][a-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)
        				)?
				    )</string>
					<key>end</key>
					<string>(?x)(::)
                        (?:
        				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.static.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.class.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(self|static|parent)\b</string>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(array)(\()(\))</string>
					<key>name</key>
					<string>meta.array.empty.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\s*\(\s*(array|real|double|float|int(eger)?|bool(ean)?|string|object|binary|unset)\s*\)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(array|real|double|float|int(eger)?|bool(ean)?|string|class|clone|var|function|interface|parent|self|object)\b</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(global|abstract|const|extends|implements|final|p(r(ivate|otected)|ublic)|static)\b</string>
					<key>name</key>
					<string>storage.modifier.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.expression.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#heredoc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.=?</string>
					<key>name</key>
					<string>keyword.operator.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(\=)(&amp;))|(&amp;(?=[$A-Za-z_]))</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(@)</string>
					<key>name</key>
					<string>keyword.operator.error-control.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(!|&amp;&amp;|\|\|)|\b(and|or|xor|as)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;|&gt;&gt;|~|\^|&amp;|\|</string>
					<key>name</key>
					<string>keyword.operator.bitwise.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(===|==|!==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(instanceof)\b\s+(?=[\\$a-z_])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.type.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\\$A-Za-z_0-9])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.goto.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.other.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(goto)\s+([a-z_][a-z_0-9]*)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.goto-label.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)^\s*([a-z_][a-z_0-9]*)\s*:</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[)(\])</string>
					<key>name</key>
					<string>meta.array.empty.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>namespace</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?:(namespace)|[a-z0-9_]+)?(\\)(?=.*?[^a-z_0-9\\])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.namespace.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.inheritance.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(?=[a-z0-9_]*[^a-z0-9_\\])</string>
			<key>name</key>
			<string>support.other.namespace.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\\)</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
			<key>name</key>
			<string>constant.numeric.php</string>
		</dict>
		<key>object</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(-&gt;)(\$?\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.object.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)(-&gt;)
            				(?:
            				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
            				    |
            				    ((\$+)?[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
            				)?</string>
				</dict>
			</array>
		</dict>
		<key>parameter-default-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;(?=\s*\$)</string>
					<key>name</key>
					<string>storage.modifier.reference.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array(?=[^\[])|(?=\[))\s*(\(|\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)|\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-default-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)\s*(?=
				        [a-z_0-9\\]+(::)
    				    ([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)?
				    )</string>
					<key>end</key>
					<string>(?i)(::)([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>php_doc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>PHPDocumentor only recognises lines with an asterisk as the first non-whitespaces character</string>
					<key>match</key>
					<string>^(?!\s*\*).*$\n?</string>
					<key>name</key>
					<string>invalid.illegal.missing-asterisk.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.wrong-access-type.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*\*\s*(@access)\s+((public|private|protected)|(.+))\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&amp;#]+(?&lt;![.?:])</string>
					<key>name</key>
					<string>markup.underline.link.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@xlink)\s+(.+)\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\@\b(a(bstract|uthor)|c(ategory|opyright)|example|global|internal|li(cense|nk)|pa(ckage|ram)|return|s(ee|ince|tatic|ubpackage)|t(hrows|odo)|v(ar|ersion)|uses|deprecated|final)\b</string>
					<key>name</key>
					<string>keyword.other.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\{(@(link)).+?\}</string>
					<key>name</key>
					<string>meta.tag.inline.phpdoc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\@[a-z0-9_-]+</string>
					<key>name</key>
					<string>keyword.other.phpdoc.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)"/ (?= (\\.|[^"/])++/[imsxeADSUXu]*" )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.double-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repetition.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)'/ (?= (\\.|[^'/])++/[imsxeADSUXu]*' )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.single-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repetition.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Escaped from the PHP string – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>\\{1,2}[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\'\[\]]</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\"`']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>'(?=((\\')|[^'"])*("|$))</string>
					<key>name</key>
					<string>string.quoted.single.unclosed.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>`(?=((\\`)|[^`"])*("|$))</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\'`"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>`(?=((\\`)|[^`'])*('|$))</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>"(?=((\\")|[^"'])*('|$))</string>
					<key>name</key>
					<string>string.quoted.double.unclosed.sql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>string-backtick</key>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>`</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.interpolated.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This contentName is just to allow the usage of “select scope” to select the string contents first, then the string with quotes</string>
			<key>contentName</key>
			<string>meta.string-contents.quoted.double.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.string-contents.quoted.single.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regex-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\bapc_(s(tore|ma_info)|c(ompile_file|lear_cache|a(s|che_info))|inc|de(c|fine_constants|lete(_file)?)|exists|fetch|load_constants|add|bin_(dump(file)?|load(file)?))\b</string>
					<key>name</key>
					<string>support.function.apc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(huffle|izeof|ort)|n(ext|at(sort|casesort))|c(o(unt|mpact)|urrent)|in_array|u(sort|ksort|asort)|p(os|rev)|e(nd|ach|xtract)|k(sort|ey(_exists)?|rsort)|list|a(sort|r(sort|ray(_(s(hift|um|plice|earch|lice)|c(h(unk|ange_key_case)|o(unt_values|lumn|mbine))|intersect(_(u(key|assoc)|key|assoc))?|diff(_(u(key|assoc)|key|assoc))?|u(n(shift|ique)|intersect(_(uassoc|assoc))?|diff(_(uassoc|assoc))?)|p(op|ush|ad|roduct)|values|key(s|_exists)|f(il(ter|l(_keys)?)|lip)|walk(_recursive)?|r(e(duce|place(_recursive)?|verse)|and)|m(ultisort|erge(_recursive)?|ap)))?))|r(sort|eset|ange))\b</string>
					<key>name</key>
					<string>support.function.array.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(how_source|ys_getloadavg|leep)|highlight_(string|file)|con(stant|nection_(status|aborted))|time_(sleep_until|nanosleep)|ignore_user_abort|d(ie|efine(d)?)|u(sleep|n(iqid|pack))|__halt_compiler|p(hp_(strip_whitespace|check_syntax)|ack)|e(val|xit)|get_browser)\b</string>
					<key>name</key>
					<string>support.function.basic_functions.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbc(add|comp|div|m(od|ul)|pow(mod)?|s(cale|qrt|ub))\b</string>
					<key>name</key>
					<string>support.function.bcmath.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bblenc_encrypt\b</string>
					<key>name</key>
					<string>support.function.blenc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbz(c(lose|ompress)|decompress|err(no|or|str)|flush|open|read|write)\b</string>
					<key>name</key>
					<string>support.function.bz2.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cal_(days_in_month|from_jd|info|to_jd)|easter_da(te|ys)|frenchtojd|gregoriantojd|j(d(dayofweek|monthname|to(french|gregorian|j(ewish|ulian)|unix))|ewishtojd|uliantojd)|unixtojd)\b</string>
					<key>name</key>
					<string>support.function.calendar.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(lass_(exists|alias)|all_user_method(_array)?)|trait_exists|i(s_(subclass_of|a)|nterface_exists)|__autoload|property_exists|get_(c(lass(_(vars|methods))?|alled_class)|object_vars|declared_(classes|traits|interfaces)|parent_class)|method_exists)\b</string>
					<key>name</key>
					<string>support.function.classobj.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(com_(create_guid|print_typeinfo|event_sink|load_typelib|get_active_object|message_pump)|variant_(s(ub|et(_type)?)|n(ot|eg)|c(a(st|t)|mp)|i(nt|div|mp)|or|d(iv|ate_(to_timestamp|from_timestamp))|pow|eqv|fix|a(nd|dd|bs)|round|get_type|xor|m(od|ul)))\b</string>
					<key>name</key>
					<string>support.function.com.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bctype_(al(num|pha)|cntrl|digit|graph|lower|p(rint|unct)|space|upper|xdigit)\b</string>
					<key>name</key>
					<string>support.function.ctype.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcurl_(c(lose|opy_handle)|e(rr(no|or)|scape|xec)|file_create|getinfo|init|multi_(add_handle|close|exec|getcontent|in(fo_read|it)|remove_handle|s(e(lect|topt)|trerror))|pause|reset|s(etopt(_array)?|hare_(close|init|setopt)|trerror)|unescape|version)\b</string>
					<key>name</key>
					<string>support.function.curl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(checkdate|date(_(add|create(_(from_format|immutable(_from_format)?))?|d(ate_set|efault_timezone_(get|set)|iff)|format|get_last_errors|i(nterval_(create_from_date_string|format)|sodate_set)|modify|offset_get|parse(_from_format)?|su(b|n(_info|rise|set))|time(_set|stamp_(get|set)|zone_(get|set))))?|g(etdate|m(date|mktime|strftime))|idate|localtime|mktime|str(ftime|totime)|time(zone_(abbreviations_list|identifiers_list|location_get|name_(from_abbr|get)|o(ffset_get|pen)|transitions_get|version_get))?)\b</string>
					<key>name</key>
					<string>support.function.datetime.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdba_(close|delete|exists|f(etch|irstkey)|handlers|insert|key_split|list|nextkey|op(en|timize)|popen|replace|sync)\b</string>
					<key>name</key>
					<string>support.function.dba.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdbx_(sort|c(o(nnect|mpare)|lose)|e(scape_string|rror)|query|fetch_row)\b</string>
					<key>name</key>
					<string>support.function.dbx.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(scandir|c(h(dir|root)|losedir)|opendir|dir|re(winddir|addir)|getcwd)\b</string>
					<key>name</key>
					<string>support.function.dir.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\beio_(s(y(nc(_file_range|fs)?|mlink)|tat(vfs)?|e(ndfile|t_m(in_parallel|ax_(idle|p(oll_(time|reqs)|arallel)))|ek))|n(threads|op|pending|re(qs|ady))|c(h(own|mod)|ustom|lose|ancel)|truncate|init|open|dup2|u(nlink|time)|poll|event_loop|f(s(ync|tat(vfs)?)|ch(own|mod)|truncate|datasync|utime|allocate)|write|l(stat|ink)|r(e(name|a(d(dir|link|ahead)?|lpath))|mdir)|g(et_(event_stream|last_error)|rp(_(cancel|limit|add))?)|mk(nod|dir)|busy)\b</string>
					<key>name</key>
					<string>support.function.eio.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\benchant_(dict_(s(tore_replacement|uggest)|check|is_in_session|describe|quick_check|add_to_(session|personal)|get_error)|broker_(set_(ordering|dict_path)|init|d(ict_exists|escribe)|free(_dict)?|list_dicts|request_(dict|pwl_dict)|get_(dict_path|error)))\b</string>
					<key>name</key>
					<string>support.function.enchant.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(set_e(rror_handler|xception_handler)|trigger_error|debug_(print_backtrace|backtrace)|user_error|error_(clear_last|log|reporting|get_last)|restore_e(rror_handler|xception_handler))\b</string>
					<key>name</key>
					<string>support.function.errorfunc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(hell_exec|ystem)|p(assthru|roc_(nice|close|terminate|open|get_status))|e(scapeshell(cmd|arg)|xec))\b</string>
					<key>name</key>
					<string>support.function.exec.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(exif_(imagetype|read_data|t(agname|humbnail))|read_exif_data)\b</string>
					<key>name</key>
					<string>support.function.exif.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfann_(s(huffle_train_data|cale_(train(_data)?|input(_train_data)?|output(_train_data)?)|ubset_train_data|et_(s(caling_params|arprop_(step_error_(shift|threshold_factor)|temperature|weight_decay_shift))|ca(scade_(num_candidate_groups|candidate_(stagnation_epochs|change_fraction|limit)|output_(stagnation_epochs|change_fraction)|weight_multiplier|activation_(steepnesses|functions)|m(in_(cand_epochs|out_epochs)|ax_(cand_epochs|out_epochs)))|llback)|train(ing_algorithm|_(stop_function|error_function))|input_scaling_params|output_scaling_params|error_log|quickprop_(decay|mu)|weight(_array)?|learning_(rate|momentum)|activation_(steepness(_(hidden|output|layer))?|function(_(hidden|output|layer))?)|rprop_(increase_factor|de(crease_factor|lta_(zero|m(in|ax))))|bit_fail_limit)|ave(_train)?)|num_(input_train_data|output_train_data)|c(opy|lear_scaling_params|ascadetrain_on_(data|file)|reate_(s(hortcut(_array)?|tandard(_array)?|parse(_array)?)|train(_from_callback)?|from_file))|t(est(_data)?|rain(_(on_(data|file)|epoch))?)|init_weights|d(uplicate_train_data|es(cale_(train|input|output)|troy(_train)?))|print_error|length_train_data|r(un|e(set_(MSE|err(str|no))|ad_train_from_file)|andomize_weights)|get_(sarprop_(step_error_(shift|threshold_factor)|temperature|weight_decay_shift)|n(um_(input|output|layers)|etwork_type)|MSE|c(onnection_(array|rate)|ascade_(num_candidate(s|_groups)|candidate_(stagnation_epochs|change_fraction|limit)|output_(stagnation_epochs|change_fraction)|weight_multiplier|activation_(steepnesses(_count)?|functions(_count)?)|m(in_(cand_epochs|out_epochs)|ax_(cand_epochs|out_epochs))))|t(otal_(neurons|connections)|rain(ing_algorithm|_(stop_function|error_function)))|err(str|no)|quickprop_(decay|mu)|l(earning_(rate|momentum)|ayer_array)|activation_(steepness|function)|rprop_(increase_factor|de(crease_factor|lta_(zero|m(in|ax))))|bi(t_fail(_limit)?|as_array))|merge_train_data)\b</string>
					<key>name</key>
					<string>support.function.fann.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(ymlink|tat|et_file_buffer)|c(h(own|grp|mod)|opy|learstatcache)|t(ouch|empnam|mpfile)|is_(dir|uploaded_file|executable|file|writ(eable|able)|link|readable)|d(i(sk(_(total_space|free_space)|freespace)|rname)|elete)|u(nlink|mask)|p(close|open|a(thinfo|rse_ini_(string|file)))|f(s(canf|tat|eek)|nmatch|close|t(ell|runcate)|ile(size|ctime|type|inode|owner|_(put_contents|exists|get_contents)|perms|atime|group|mtime)?|open|p(ut(s|csv)|assthru)|eof|flush|write|lock|read|get(s(s)?|c(sv)?))|l(stat|ch(own|grp)|ink(info)?)|r(e(name|wind|a(d(file|link)|lpath(_cache_(size|get))?))|mdir)|glob|m(ove_uploaded_file|kdir)|basename)\b</string>
					<key>name</key>
					<string>support.function.file.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(finfo_(buffer|close|file|open|set_flags)|mime_content_type)\b</string>
					<key>name</key>
					<string>support.function.fileinfo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfilter_(has_var|i(d|nput(_array)?)|list|var(_array)?)\b</string>
					<key>name</key>
					<string>support.function.filter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfastcgi_finish_request\b</string>
					<key>name</key>
					<string>support.function.fpm.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(all_user_func(_array)?|reate_function)|unregister_tick_function|f(orward_static_call(_array)?|unc(tion_exists|_(num_args|get_arg(s)?)))|register_(shutdown_function|tick_function)|get_defined_functions)\b</string>
					<key>name</key>
					<string>support.function.funchand.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(_|bind(_textdomain_codeset|textdomain)|d(c(gettext|ngettext)|gettext|ngettext)|gettext|ngettext|textdomain)\b</string>
					<key>name</key>
					<string>support.function.gettext.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bgmp_(s(can(1|0)|trval|ign|ub|etbit|qrt(rem)?)|hamdist|ne(g|xtprime)|c(om|lrbit|mp)|testbit|i(n(tval|it|vert)|mport)|or|div(_(q(r)?|r)|exact)?|jacobi|p(o(pcount|w(m)?)|erfect_square|rob_prime)|export|fact|legendre|a(nd|dd|bs)|r(oot(rem)?|andom(_(seed|range|bits))?)|gcd(ext)?|xor|m(od|ul))\b</string>
					<key>name</key>
					<string>support.function.gmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(hash(_(algos|copy|equals|fi(le|nal)|hmac(_file)?|init|pbkdf2|update(_(file|stream))?))?|mhash(_(count|get_(block_size|hash_name)|keygen_s2k))?)\b</string>
					<key>name</key>
					<string>support.function.hash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(http_(s(upport|end_(st(atus|ream)|content_(type|disposition)|data|file|last_modified))|head|negotiate_(c(harset|ontent_type)|language)|c(hunked_decode|ache_(etag|last_modified))|throttle|inflate|d(eflate|ate)|p(ost_(data|fields)|ut_(stream|data|file)|ersistent_handles_(c(ount|lean)|ident)|arse_(headers|cookie|params|message))|re(direct|quest(_(method_(name|unregister|exists|register)|body_encode))?)|get(_request_(headers|body(_stream)?))?|match_(etag|request_header|modified)|build_(str|cookie|url))|ob_(inflatehandler|deflatehandler|etaghandler))\b</string>
					<key>name</key>
					<string>support.function.http.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\biconv(_(get_encoding|mime_(decode(_headers)?|encode)|s(et_encoding|tr(len|pos|rpos)|ubstr)))?\b</string>
					<key>name</key>
					<string>support.function.iconv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\biis_(s(t(op_serv(ice|er)|art_serv(ice|er))|et_(s(cript_map|erver_rights)|dir_security|app_settings))|add_server|remove_server|get_(s(cript_map|erv(ice_state|er_(rights|by_(comment|path))))|dir_security))\b</string>
					<key>name</key>
					<string>support.function.iisfunc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(gd_info|image(2wbmp|a(ffine(matrix(concat|get))?|lphablending|ntialias|rc)|c(har(up)?|o(lor(a(llocate(alpha)?|t)|closest(alpha|hwb)?|deallocate|exact(alpha)?|match|resolve(alpha)?|s(et|forindex|total)|transparent)|nvolution|py(merge(gray)?|res(ampled|ized))?)|r(eate(from(g(d(2(part)?)?|if)|jpeg|png|string|wbmp|xbm)|truecolor)?|op(auto)?))|d(ashedline|estroy)|ellipse|f(il(l(ed(arc|ellipse|polygon|rectangle)|toborder)?|ter)|lip|ont(height|width))|g(ammacorrect|d(2)?|if)|i(nterlace|struecolor)|jpeg|l(ayereffect|ine|oadfont)|p(alette(copy|totruecolor)|ng|olygon)|r(ectangle|otate)|s(avealpha|cale|et(brush|interpolation|pixel|style|t(hickness|ile))|tring(up)?|x|y)|t(ruecolortopalette|ypes)|wbmp|xbm)|jpeg2wbmp|png2wbmp)\b</string>
					<key>name</key>
					<string>support.function.image.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(ys_get_temp_dir|et_(time_limit|include_path|magic_quotes_runtime))|cli_(set_process_title|get_process_title)|ini_(set|alter|restore|get(_all)?)|zend_(thread_id|version|logo_guid)|dl|p(hp(credits|info|_(sapi_name|ini_(scanned_files|loaded_file)|uname|logo_guid)|version)|utenv)|extension_loaded|version_compare|assert(_options)?|restore_include_path|g(c_(collect_cycles|disable|enable(d)?|mem_caches)|et(opt|_(c(urrent_user|fg_var)|include(d_files|_path)|defined_constants|extension_funcs|loaded_extensions|re(sources|quired_files)|magic_quotes_(runtime|gpc))|env|lastmod|rusage|my(inode|uid|pid|gid)))|m(emory_get_(usage|peak_usage)|a(in|gic_quotes_runtime)))\b</string>
					<key>name</key>
					<string>support.function.info.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_(se(t_event_handler|rv(ice_(detach|attach)|er_info))|n(um_(params|fields)|ame_result)|c(o(nnect|mmit(_ret)?)|lose)|trans|d(elete_user|rop_db|b_info)|p(connect|aram_info|repare)|e(rr(code|msg)|xecute)|query|f(ield_info|etch_(object|assoc|row)|ree_(event_handler|query|result))|wait_event|a(dd_user|ffected_rows)|r(ollback(_ret)?|estore)|gen_id|m(odify_user|aintain_db)|b(lob_(c(lose|ancel|reate)|i(nfo|mport)|open|echo|add|get)|ackup))\b</string>
					<key>name</key>
					<string>support.function.interbase.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(collator_(asort|c(ompare|reate)|get_(attribute|error_(code|message)|locale|s(ort_key|trength))|s(et_(attribute|strength)|ort(_with_sort_keys)?))|datefmt_(create|format(_object)?|get_(calendar(_object)?|datetype|error_(code|message)|locale|pattern|time(type|zone(_id)?))|is_lenient|localtime|parse|set_(calendar|lenient|pattern|timezone))|grapheme_(extract|s(tr(i(pos|str)|len|pos|r(ipos|pos)|str)|ubstr))|i(dn_to_(ascii|utf8)|ntl(_(error_name|get_error_(code|message)|is_failure)|cal_(a(dd|fter)|before|c(lear|reate_instance)|equals|f(ield_difference|rom_date_time)|get(_(a(ctual_m(aximum|inimum)|vailable_locales)|day_of_week_type|error_(code|message)|first_day_of_week|greatest_minimum|keyword_values_for_locale|l(east_maximum|ocale)|m(aximum|inim(al_days_in_first_week|um))|now|repeated_wall_time_option|skipped_wall_time_option|t(ime(_zone)?|ype)|weekend_transition))?|i(n_daylight_time|s_(equivalent_to|lenient|set|weekend))|roll|set(_(first_day_of_week|lenient|minimal_days_in_first_week|repeated_wall_time_option|skipped_wall_time_option|time(_zone)?))?|to_date_time)|gregcal_(create_instance|get_gregorian_change|is_leap_year|set_gregorian_change)|tz_(c(ount_equivalent_ids|reate_(default|enumeration|time_zone(_id_enumeration)?))|from_date_time_zone|get_(canonical_id|d(isplay_name|st_savings)|e(quivalent_id|rror_(code|message))|gmt|id|offset|r(aw_offset|egion)|tz_data_version|unknown)|has_same_rules|to_date_time_zone|use_daylight_time)))|locale_(accept_from_http|c(anonicalize|ompose)|filter_matches|get_(all_variants|d(efault|isplay_(language|name|region|script|variant))|keywords|primary_language|region|script)|lookup|parse|set_default)|msgfmt_(create|format(_message)?|get_(error_(code|message)|locale|pattern)|parse(_message)?|set_pattern)|n(ormalizer_(is_normalized|normalize)|umfmt_(create|format(_currency)?|get_(attribute|error_(code|message)|locale|pattern|symbol|text_attribute)|parse(_currency)?|set_(attribute|pattern|symbol|text_attribute)))|resourcebundle_(c(ount|reate)|get(_error_(code|message))?|locales)|transliterator_(create(_(from_rules|inverse))?|get_error_(code|message)|list_ids|transliterate))\b</string>
					<key>name</key>
					<string>support.function.intl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bjson_(decode|encode|last_error(_msg)?)\b</string>
					<key>name</key>
					<string>support.function.json.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bldap_(s(tart_tls|ort|e(t_(option|rebind_proc)|arch)|asl_bind)|next_(entry|attribute|reference)|c(o(n(nect|trol_paged_result(_response)?)|unt_entries|mpare)|lose)|t61_to_8859|d(n2ufn|elete)|8859_to_t61|unbind|parse_re(sult|ference)|e(scape|rr(no|2str|or)|xplode_dn)|f(irst_(entry|attribute|reference)|ree_result)|list|add|re(name|ad)|get_(option|dn|entries|values(_len)?|attributes)|mod(ify(_batch)?|_(del|add|replace))|bind)\b</string>
					<key>name</key>
					<string>support.function.ldap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blibxml_(clear_errors|disable_entity_loader|get_(errors|last_error)|set_(external_entity_loader|streams_context)|use_internal_errors)\b</string>
					<key>name</key>
					<string>support.function.libxml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ezmlm_hash|mail)\b</string>
					<key>name</key>
					<string>support.function.mail.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(in(h)?|qrt|rand)|h(ypot|exdec)|c(os(h)?|eil)|tan(h)?|i(s_(nan|infinite|finite)|ntdiv)|octdec|de(c(hex|oct|bin)|g2rad)|p(i|ow)|exp(m1)?|f(loor|mod)|l(cg_value|og(1(p|0))?)|a(sin(h)?|cos(h)?|tan(h|2)?|bs)|r(ound|a(nd|d2deg))|getrandmax|m(t_(srand|rand|getrandmax)|in|ax)|b(indec|ase_convert))\b</string>
					<key>name</key>
					<string>support.function.math.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmb(_(c(heck_encoding|onvert_(case|encoding|kana|variables))|de(code_(mimeheader|numericentity)|tect_(encoding|order))|e(ncod(e_(mimeheader|numericentity)|ing_aliases)|reg(_(match|replace(_callback)?|search(_(get(pos|regs)|init|pos|regs|setpos))?)|i(_replace)?)?)|get_info|http_(input|output)|internal_encoding|l(anguage|ist_encodings)|output_handler|p(arse_str|referred_mime_name)|regex_(encoding|set_options)|s(end_mail|plit|tr(cut|i(mwidth|pos|str)|len|pos|r(chr|i(chr|pos)|pos)|str|to(lower|upper)|width)|ubst(itute_character|r(_count)?)))|ereg(_(match|replace|search(_(get(pos|regs)|init|pos|regs|setpos))?)|i(_replace)?)?|regex_encoding|split)\b</string>
					<key>name</key>
					<string>support.function.mbstring.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bm(crypt_(create_iv|decrypt|enc(_(get_(algorithms_name|block_size|iv_size|key_size|modes_name|supported_key_sizes)|is_block_(algorithm(_mode)?|mode)|self_test)|rypt)|ge(neric(_(deinit|init))?|t_(block_size|cipher_name|iv_size|key_size))|list_(algorithms|modes)|module_(close|get_(algo_(block_size|key_size)|supported_key_sizes)|is_block_(algorithm(_mode)?|mode)|open|self_test))|decrypt_generic)\b</string>
					<key>name</key>
					<string>support.function.mcrypt.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmemcache_debug\b</string>
					<key>name</key>
					<string>support.function.memcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmhash(_(count|keygen_s2k|get_(hash_name|block_size)))?\b</string>
					<key>name</key>
					<string>support.function.mhash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(log_(cmd_(insert|delete|update)|killcursor|write_batch|reply|getmore)|bson_(decode|encode))\b</string>
					<key>name</key>
					<string>support.function.mongo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_(a(ffected_rows|utocommit)|begin_transaction|c(ha(nge_user|racter_set_name)|lose|o(mmit|nnect(_err(no|or))?))|d(ata_seek|ebug|ump_debug_info)|e(rr(no|or(_list)?)|scape_string|xecute)|f(etch_(a(ll|rray|ssoc)|field(_direct|s)?|lengths|object|row)|ield_(count|seek|tell)|ree_result)|get_(c(harset|lient_(info|stats|version)|onnection_stats)|host_info|links_stats|proto_info|server_(info|version)|warnings)|in(fo|it|sert_id)|kill|m(ore_results|ulti_query)|n(ext_result|um_(fields|rows))|options|p(ing|oll|repare)|query|r(e(a(l_(connect|escape_string|query)|p_async_query)|fresh|lease_savepoint|port)|ollback)|s(avepoint|e(lect_db|t_(charset|opt))|qlstate|sl_set|t(at|mt_(a(ffected_rows|ttr_(get|set))|bind_(param|result)|close|data_seek|e(rr(no|or(_list)?)|xecute)|f(etch|ield_count|ree_result)|get_(result|warnings)|in(it|sert_id)|more_results|n(ext_result|um_rows)|p(aram_count|repare)|res(et|ult_metadata)|s(end_long_data|qlstate|tore_result))|ore_result))|thread_(id|safe)|use_result|warning_count)\b</string>
					<key>name</key>
					<string>support.function.mysqli.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_memcache_(set|get_config)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-memcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_ms_(set_(user_pick_server|qos)|dump_servers|query_is_select|fabric_select_(shard|global)|get_(stats|last_(used_connection|gtid))|xa_(commit|rollback|gc|begin)|match_wild)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-ms.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_qc_(set_(storage_handler|cache_condition|is_select|user_handlers)|clear_cache|get_(normalized_query_trace_log|c(ore_stats|ache_info)|query_trace_log|available_handlers))\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-qc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_uh_(set_(statement_proxy|connection_proxy)|convert_to_mysqlnd)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-uh.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(yslog|ocket_(set_(timeout|blocking)|get_status)|et(cookie|rawcookie))|h(ttp_response_code|eader(s_(sent|list)|_re(gister_callback|move))?)|c(heckdnsrr|loselog)|i(net_(ntop|pton)|p2long)|openlog|d(ns_(check_record|get_(record|mx))|efine_syslog_variables)|pfsockopen|fsockopen|long2ip|get(servby(name|port)|host(name|by(name(l)?|addr))|protobyn(umber|ame)|mxrr))\b</string>
					<key>name</key>
					<string>support.function.network.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bnsapi_(virtual|re(sponse_headers|quest_headers))\b</string>
					<key>name</key>
					<string>support.function.nsapi.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\boci(s(tatementtype|e(tprefetch|rverversion)|avelob(file)?)|n(umcols|ew(c(ollection|ursor)|descriptor)|logon)|c(o(l(umn(s(cale|ize)|name|type(raw)?|isnull|precision)|l(size|trim|a(ssign(elem)?|ppend)|getelem|max))|mmit)|loselob|ancel)|internaldebug|definebyname|_(s(tatement_type|e(t_(client_i(nfo|dentifier)|prefetch|edition|action|module_name)|rver_version))|n(um_(fields|rows)|ew_(c(o(nnect|llection)|ursor)|descriptor))|c(o(nnect|mmit)|l(ient_version|ose)|ancel)|internal_debug|define_by_name|p(connect|a(ssword_change|rse))|e(rror|xecute)|f(ield_(s(cale|ize)|name|type(_raw)?|is_null|precision)|etch(_(object|a(ssoc|ll|rray)|row))?|ree_(statement|descriptor))|lob_(copy|is_equal)|r(ollback|esult)|get_implicit_resultset|bind_(array_by_name|by_name))|p(logon|arse)|e(rror|xecute)|f(etch(statement|into)?|ree(statement|c(ollection|ursor)|desc))|write(temporarylob|lobtofile)|lo(adlob|go(n|ff))|r(o(wcount|llback)|esult)|bindbyname)\b</string>
					<key>name</key>
					<string>support.function.oci8.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopcache_(compile_file|get_(configuration|status)|i(nvalidate|s_script_cached)|reset)\b</string>
					<key>name</key>
					<string>support.function.opcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopenssl_(c(ipher_iv_length|sr_(export(_to_file)?|get_(public_key|subject)|new|sign))|d(ecrypt|h_compute_key|igest)|e(ncrypt|rror_string)|free_key|get_(c(ert_locations|ipher_methods)|md_methods|p(rivatekey|ublickey))|open|p(bkdf2|k(cs(12_(export(_to_file)?|read)|7_(decrypt|encrypt|sign|verify))|ey_(export(_to_file)?|free|get_(details|p(rivate|ublic))|new))|rivate_(decrypt|encrypt)|ublic_(decrypt|encrypt))|random_pseudo_bytes|s(eal|ign|pki_(export(_challenge)?|new|verify))|verify|x509_(check(_private_key|purpose)|export(_to_file)?|f(ingerprint|ree)|parse|read))\b</string>
					<key>name</key>
					<string>support.function.openssl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(o(utput_(add_rewrite_var|reset_rewrite_vars)|b_(start|clean|implicit_flush|end_(clean|flush)|flush|list_handlers|g(zhandler|et_(status|c(ontents|lean)|flush|le(ngth|vel)))))|flush)\b</string>
					<key>name</key>
					<string>support.function.output.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpassword_(get_info|hash|needs_rehash|verify)\b</string>
					<key>name</key>
					<string>support.function.password.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpcntl_(alarm|e(rrno|xec)|fork|get(_last_error|priority)|s(etpriority|ig(nal(_dispatch)?|procmask|timedwait|waitinfo)|trerror)|w(ait(pid)?|exitstatus|if(continued|exited|s(ignaled|topped))|stopsig|termsig))\b</string>
					<key>name</key>
					<string>support.function.pcntl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpg_(s(ocket|e(nd_(prepare|execute|query(_params)?)|t_(client_encoding|error_verbosity)|lect))|host|num_(fields|rows)|c(o(n(sume_input|nect(ion_(status|reset|busy)|_poll)?|vert)|py_(to|from))|l(ient_encoding|ose)|ancel_query)|t(ty|ra(nsaction_status|ce))|insert|options|d(elete|bname)|u(n(trace|escape_bytea)|pdate)|p(connect|ing|ort|ut_line|arameter_status|repare)|e(scape_(string|identifier|literal|bytea)|nd_copy|xecute)|version|query(_params)?|f(ield_(size|n(um|ame)|t(ype(_oid)?|able)|is_null|prtlen)|etch_(object|a(ssoc|ll(_columns)?|rray)|r(ow|esult))|lush|ree_result)|l(o_(seek|c(lose|reate)|t(ell|runcate)|import|open|unlink|export|write|read(_all)?)|ast_(notice|oid|error))|affected_rows|result_(s(tatus|eek)|error(_field)?)|get_(notify|pid|result)|meta_data)\b</string>
					<key>name</key>
					<string>support.function.pgsql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(virtual|apache_(setenv|note|child_terminate|lookup_uri|re(s(ponse_headers|et_timeout)|quest_headers)|get(_(version|modules)|env))|getallheaders)\b</string>
					<key>name</key>
					<string>support.function.php_apache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_import_simplexml\b</string>
					<key>name</key>
					<string>support.function.php_dom.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bftp_(alloc|c(dup|h(dir|mod)|lose|onnect)|delete|exec|f(get|put)|get(_option)?|login|m(dtm|kdir)|n(b_(continue|f(get|put)|get|put)|list)|p(asv|ut|wd)|quit|r(aw(list)?|ename|mdir)|s(et_option|i(te|ze)|sl_connect|ystype))\b</string>
					<key>name</key>
					<string>support.function.php_ftp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bimap_(s(can(mailbox)?|tatus|ort|ubscribe|e(t(_quota|flag_full|acl)|arch)|avebody)|header(s|info)?|num_(recent|msg)|c(heck|l(ose|earflag_full)|reate(mailbox)?)|t(hread|imeout)|open|delete(mailbox)?|8bit|u(n(subscribe|delete)|tf(7_(decode|encode)|8)|id)|ping|e(rrors|xpunge)|qprint|fetch(structure|header|text|_overview|mime|body)|l(sub|ist(s(can|ubscribed)|mailbox)?|ast_error)|a(ppend|lerts)|r(e(name(mailbox)?|open)|fc822_(parse_(headers|adrlist)|write_address))|g(c|et(subscribed|_quota(root)?|acl|mailboxes))|m(sgno|ime_header_decode|ail(_(co(py|mpose)|move)|boxmsginfo)?)|b(inary|ody(struct)?|ase64))\b</string>
					<key>name</key>
					<string>support.function.php_imap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bodbc_(s(tatistics|pecialcolumns|etoption)|n(um_(fields|rows)|ext_result)|c(o(nnect|lumn(s|privileges)|mmit)|ursor|lose(_all)?)|table(s|privileges)|d(o|ata_source)|p(connect|r(imarykeys|ocedure(s|columns)|epare))|e(rror(msg)?|xec(ute)?)|f(ield_(scale|n(um|ame)|type|precision|len)|oreignkeys|etch_(into|object|array|row)|ree_result)|longreadlen|autocommit|r(ollback|esult(_all)?)|gettypeinfo|binmode)\b</string>
					<key>name</key>
					<string>support.function.php_odbc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpreg_(filter|grep|last_error|match(_all)?|quote|replace(_callback(_array)?)?|split)\b</string>
					<key>name</key>
					<string>support.function.php_pcre.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(class_(implements|parents|uses)|iterator_(apply|count|to_array)|spl_(autoload(_(call|extensions|functions|register|unregister))?|classes|object_hash))\b</string>
					<key>name</key>
					<string>support.function.php_spl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bzip_(close|entry_(c(lose|ompress(edsize|ionmethod))|filesize|name|open|read)|open|read)\b</string>
					<key>name</key>
					<string>support.function.php_zip.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bposix_(access|ctermid|errno|get(_last_error|cwd|e(gid|uid)|g(id|r(gid|nam|oups))|login|p(g(id|rp)|id|pid|w(nam|uid))|rlimit|sid|uid)|i(nitgroups|satty)|kill|mk(fifo|nod)|s(et(e(gid|uid)|gid|pgid|rlimit|sid|uid)|trerror)|t(imes|tyname)|uname)\b</string>
					<key>name</key>
					<string>support.function.posix.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bset(threadtitle|proctitle)\b</string>
					<key>name</key>
					<string>support.function.proctitle.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpspell_(s(tore_replacement|uggest|ave_wordlist)|new(_(config|personal))?|c(heck|onfig_(save_repl|create|ignore|d(ict_dir|ata_dir)|personal|r(untogether|epl)|mode)|lear_session)|add_to_(session|personal))\b</string>
					<key>name</key>
					<string>support.function.pspell.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\breadline(_(add_history|c(allback_(handler_(install|remove)|read_char)|lear_history|ompletion_function)|info|list_history|on_new_line|re(ad_history|display)|write_history))?\b</string>
					<key>name</key>
					<string>support.function.readline.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brecode(_(string|file))?\b</string>
					<key>name</key>
					<string>support.function.recode.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brrd(c_disconnect|_(create|tune|info|update|error|version|f(irst|etch)|last(update)?|restore|graph|xport))\b</string>
					<key>name</key>
					<string>support.function.rrd.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(msg_(get_queue|queue_exists|re(ceive|move_queue)|s(e(nd|t_queue)|tat_queue))|s(em_(acquire|get|re(lease|move))|hm_(attach|detach|get_var|has_var|put_var|remove(_var)?)))\b</string>
					<key>name</key>
					<string>support.function.sem.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsession_(abort|c(ache_(expire|limiter)|ommit)|de(code|stroy)|encode|get_cookie_params|id|module_name|name|re(g(enerate_id|ister_shutdown)|set)|s(ave_path|et_(cookie_params|save_handler)|ta(rt|tus))|unset|write_close)\b</string>
					<key>name</key>
					<string>support.function.session.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bshmop_(close|delete|open|read|size|write)\b</string>
					<key>name</key>
					<string>support.function.shmop.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsimplexml_(import_dom|load_(file|string))\b</string>
					<key>name</key>
					<string>support.function.simplexml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsnmp(set|2_(set|walk|real_walk|get(next)?)|_(set_(oid_(numeric_print|output_format)|enum_print|valueretrieval|quick_print)|read_mib|get_(valueretrieval|quick_print))|3_(set|walk|real_walk|get(next)?)|walk(oid)?|realwalk|get(next)?)\b</string>
					<key>name</key>
					<string>support.function.snmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(is_soap_fault|use_soap_error_handler)\b</string>
					<key>name</key>
					<string>support.function.soap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsocket_(accept|bind|c(l(ear_error|ose)|msg_space|onnect|reate(_(listen|pair))?)|get(_option|opt|peername|sockname)|import_stream|l(ast_error|isten)|re(ad|cv(from|msg)?)|s(e(lect|nd(msg|to)?|t(_(block|nonblock|option)|opt))|hutdown|trerror)|write)\b</string>
					<key>name</key>
					<string>support.function.sockets.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsqlite_(s(ingle_query|eek)|has_(prev|more)|n(um_(fields|rows)|ext)|c(hanges|olumn|urrent|lose|reate_(function|aggregate))|open|u(nbuffered_query|df_(decode_binary|encode_binary))|p(open|rev)|e(scape_string|rror_string|xec)|valid|key|query|f(ield_name|etch_(s(tring|ingle)|column_types|object|a(ll|rray))|actory)|l(ib(encoding|version)|ast_(insert_rowid|error))|array_query|rewind|busy_timeout)\b</string>
					<key>name</key>
					<string>support.function.sqlite.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsqlsrv_(se(nd_stream_data|rver_info)|has_rows|n(um_(fields|rows)|ext_result)|c(o(n(nect|figure)|mmit)|l(ient_info|ose)|ancel)|prepare|e(rrors|xecute)|query|f(ield_metadata|etch(_(object|array))?|ree_stmt)|ro(ws_affected|llback)|get_(config|field)|begin_transaction)\b</string>
					<key>name</key>
					<string>support.function.sqlsrv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstats_(s(ta(ndard_deviation|t_(noncentral_t|correlation|in(nerproduct|dependent_t)|p(owersum|ercentile|aired_t)|gennch|binomial_coef))|kew)|harmonic_mean|c(ovariance|df_(n(oncentral_(chisquare|f)|egative_binomial)|c(hisquare|auchy)|t|uniform|poisson|exponential|f|weibull|l(ogistic|aplace)|gamma|b(inomial|eta)))|den(s_(n(ormal|egative_binomial)|c(hisquare|auchy)|t|pmf_(hypergeometric|poisson|binomial)|exponential|f|weibull|l(ogistic|aplace)|gamma|beta)|_uniform)|variance|kurtosis|absolute_deviation|rand_(setall|phrase_to_seeds|ranf|ge(n_(no(ncen(tral_(t|f)|ral_chisquare)|rmal)|chisquare|t|i(nt|uniform|poisson|binomial(_negative)?)|exponential|f(uniform)?|gamma|beta)|t_seeds)))\b</string>
					<key>name</key>
					<string>support.function.stats.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bs(tream_(s(ocket_(s(hutdown|e(ndto|rver))|client|pair|enable_crypto|accept|recvfrom|get_name)|upports_lock|e(t_(chunk_size|timeout|write_buffer|read_buffer|blocking)|lect))|notification_callback|co(ntext_(set_(option|default|params)|create|get_(options|default|params))|py_to_stream)|is_local|encoding|filter_(prepend|append|re(gister|move))|wrapper_(unregister|re(store|gister))|re(solve_include_path|gister_wrapper)|get_(contents|transports|filters|wrappers|line|meta_data)|bucket_(new|prepend|append|make_writeable))|et_socket_blocking)\b</string>
					<key>name</key>
					<string>support.function.streamsfuncs.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(scanf|ha1(_file)?|tr(s(tr|pn)|n(c(asecmp|mp)|atc(asecmp|mp))|c(spn|hr|oll|asecmp|mp)|t(o(upper|k|lower)|r)|i(str|p(slashes|cslashes|os|_tags))|_(s(huffle|plit)|ireplace|pad|word_count|r(ot13|ep(eat|lace))|getcsv)|p(os|brk)|len|r(chr|ipos|pos|ev))|imilar_text|oundex|ubstr(_(co(unt|mpare)|replace))?|printf|etlocale)|h(tml(specialchars(_decode)?|_entity_decode|entities)|e(x2bin|brev(c)?))|n(umber_format|l(2br|_langinfo))|c(h(op|unk_split|r)|o(nvert_(cyr_string|uu(decode|encode))|unt_chars)|r(ypt|c32))|trim|implode|ord|uc(first|words)|join|p(arse_str|rint(f)?)|e(cho|xplode)|v(sprintf|printf|fprintf)|quote(d_printable_(decode|encode)|meta)|fprintf|wordwrap|l(cfirst|trim|ocaleconv|evenshtein)|add(slashes|cslashes)|rtrim|get_html_translation_table|m(oney_format|d5(_file)?|etaphone)|bin2hex)\b</string>
					<key>name</key>
					<string>support.function.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(taint|is_tainted|untaint)\b</string>
					<key>name</key>
					<string>support.function.taint.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btidy_(access_count|c(lean_repair|onfig_count)|diagnose|error_count|get(_(body|config|error_buffer|h(ead|tml(_ver)?)|o(pt_doc|utput)|r(elease|oot)|status)|opt)|is_x(html|ml)|parse_(file|string)|repair_(file|string)|warning_count)\b</string>
					<key>name</key>
					<string>support.function.tidy.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btoken_(get_all|name)\b</string>
					<key>name</key>
					<string>support.function.tokenizer.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btrader_(s(t(och(f|rsi)?|ddev)|in(h)?|u(m|b)|et_(compat|unstable_period)|qrt|ar(ext)?|ma)|ht_(sine|trend(line|mode)|dcp(hase|eriod)|phasor)|natr|c(ci|o(s(h)?|rrel)|dl(s(ho(otingstar|rtline)|t(icksandwich|alledpattern)|pinningtop|eparatinglines)|h(i(kkake(mod)?|ghwave)|omingpigeon|a(ngingman|rami(cross)?|mmer))|c(o(ncealbabyswall|unterattack)|losingmarubozu)|t(hrusting|a(sukigap|kuri)|ristar)|i(n(neck|vertedhammer)|dentical3crows)|2crows|onneck|d(oji(star)?|arkcloudcover|ragonflydoji)|u(nique3river|psidegap2crows)|3(starsinsouth|inside|outside|whitesoldiers|linestrike|blackcrows)|piercing|e(ngulfing|vening(star|dojistar))|kicking(bylength)?|l(ongl(ine|eggeddoji)|adderbottom)|a(dvanceblock|bandonedbaby)|ri(sefall3methods|ckshawman)|g(apsidesidewhite|ravestonedoji)|xsidegap3methods|m(orning(star|dojistar)|a(t(hold|chinglow)|rubozu))|b(elthold|reakaway))|eil|mo)|t(sf|ypprice|3|ema|an(h)?|r(i(x|ma)|ange))|obv|d(iv|ema|x)|ultosc|p(po|lus_d(i|m))|e(rrno|xp|ma)|var|kama|floor|w(clprice|illr|ma)|l(n|inearreg(_(slope|intercept|angle))?|og10)|a(sin|cos|t(an|r)|d(osc|d|x(r)?)?|po|vgprice|roon(osc)?)|r(si|oc(p|r(100)?)?)|get_(compat|unstable_period)|m(i(n(index|us_d(i|m)|max(index)?)?|dp(oint|rice))|om|ult|edprice|fi|a(cd(ext|fix)?|vp|x(index)?|ma)?)|b(op|eta|bands))\b</string>
					<key>name</key>
					<string>support.function.trader.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\buopz_(co(py|mpose)|implement|overload|delete|undefine|extend|f(unction|lags)|re(store|name|define)|backup)\b</string>
					<key>name</key>
					<string>support.function.uopz.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(http_build_query|url(decode|encode)|parse_url|rawurl(decode|encode)|get_(headers|meta_tags)|base64_(decode|encode))\b</string>
					<key>name</key>
					<string>support.function.url.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(trval|e(ttype|rialize))|i(s(set|_(s(calar|tring)|nu(ll|meric)|callable|int(eger)?|object|double|float|long|array|re(source|al)|bool))|ntval|mport_request_variables)|d(oubleval|ebug_zval_dump)|unse(t|rialize)|print_r|empty|var_(dump|export)|floatval|get(type|_(defined_vars|resource_type))|boolval)\b</string>
					<key>name</key>
					<string>support.function.var.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bwddx_(add_vars|deserialize|packet_(end|start)|serialize_va(lue|rs))\b</string>
					<key>name</key>
					<string>support.function.wddx.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxhprof_(sample_(disable|enable)|disable|enable)\b</string>
					<key>name</key>
					<string>support.function.xhprof.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(utf8_(decode|encode)|xml_(error_string|get_(current_(byte_index|column_number|line_number)|error_code)|parse(_into_struct|r_(create(_ns)?|free|get_option|set_option))?|set_(character_data_handler|default_handler|e(lement_handler|nd_namespace_decl_handler|xternal_entity_ref_handler)|notation_decl_handler|object|processing_instruction_handler|start_namespace_decl_handler|unparsed_entity_decl_handler)))\b</string>
					<key>name</key>
					<string>support.function.xml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlrpc_(se(t_type|rver_(c(all_method|reate)|destroy|add_introspection_data|register_(introspection_callback|method)))|is_fault|decode(_request)?|parse_method_descriptions|encode(_request)?|get_type)\b</string>
					<key>name</key>
					<string>support.function.xmlrpc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlwriter_(end_(attribute|c(data|omment)|d(ocument|td(_(attlist|e(lement|ntity)))?)|element|pi)|f(lush|ull_end_element)|o(pen_(memory|uri)|utput_memory)|s(et_indent(_string)?|tart_(attribute(_ns)?|c(data|omment)|d(ocument|td(_(attlist|e(lement|ntity)))?)|element(_ns)?|pi))|text|write_(attribute(_ns)?|c(data|omment)|dtd(_(attlist|e(lement|ntity)))?|element(_ns)?|pi|raw))\b</string>
					<key>name</key>
					<string>support.function.xmlwriter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(deflate_(add|init)|gz(c(lose|ompress)|de(code|flate)|e(ncode|of)|file|get(c|s(s)?)|inflate|open|p(assthru|uts)|re(ad|wind)|seek|tell|uncompress|write)|inflate_(add|init)|ob_gzhandler|readgzfile|zlib_(decode|encode|get_coding_type))\b</string>
					<key>name</key>
					<string>support.function.zlib.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpdo_drivers\b</string>
					<key>name</key>
					<string>support.function.pdo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxdebug_(break|c(all_(class|f(ile|unction)|line)|lear_aggr_profiling_data|ode_coverage_started)|d(ebug_zval(_stdout)?|isable|ump_(aggr_profiling_data|superglobals))|enable|get_(co(de_coverage|llected_errors)|declared_vars|f(ormatted_function_stack|unction_(count|stack))|headers|monitored_functions|profiler_filename|stack_depth|tracefile_name)|is_enabled|memory_usage|p(eak_memory_usage|rint_function_stack)|st(art_(code_coverage|error_collection|function_monitor|trace)|op_(code_coverage|error_collection|function_monitor|trace))|time_index|var_dump)\b</string>
					<key>name</key>
					<string>support.function.xdebug.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(lass_(alias|exists)|reate_function)|de(bug_(backtrace|print_backtrace)|fine(d)?)|e(ach|rror_reporting|xtension_loaded)|func(_(get_arg(s)?|num_args)|tion_exists)|g(c_(collect_cycles|disable|enable(d)?|mem_caches)|et_(c(alled_class|lass(_(methods|vars))?)|de(clared_(classes|interfaces|traits)|fined_(constants|functions|vars))|extension_funcs|included_files|loaded_extensions|object_vars|parent_class|re(quired_files|source(_type|s))))|i(nterface_exists|s_(a|subclass_of))|method_exists|property_exists|restore_e(rror_handler|xception_handler)|s(et_e(rror_handler|xception_handler)|tr(c(asecmp|mp)|len|nc(asecmp|mp)))|tr(ait_exists|igger_error)|user_error|zend_version)\b</string>
					<key>name</key>
					<string>support.function.core.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(a(bs|cos(h)?|dd(cslashes|slashes)|r(ray_(c(h(ange_key_case|unk)|o(lumn|mbine|unt_values))|diff(_(assoc|key|u(assoc|key)))?|f(il(l(_keys)?|ter)|lip)|intersect(_(assoc|key|u(assoc|key)))?|key(_exists|s)|m(ap|erge(_recursive)?|ultisort)|p(ad|op|roduct|ush)|r(and|e(duce|place(_recursive)?|verse))|s(earch|hift|lice|plice|um)|u(diff(_(assoc|uassoc))?|intersect(_(assoc|uassoc))?|n(ique|shift))|values|walk(_recursive)?)|sort)|s(in(h)?|ort|sert(_options)?)|tan(2|h)?)|b(ase(64_(decode|encode)|_convert|name)|in(2hex|dec)|oolval)|c(all_user_func(_array)?|eil|h(dir|eckdnsrr|grp|mod|o(p|wn)|r|unk_split)|l(earstatcache|i_(get_process_title|set_process_title)|ose(dir|log))|o(mpact|n(nection_(aborted|status)|stant|vert_(cyr_string|uu(decode|encode)))|py|s(h)?|unt(_chars)?)|r(c32|ypt)|urrent)|d(e(bug_zval_dump|c(bin|hex|oct)|g2rad)|i(r(name)?|sk(_(free_space|total_space)|freespace))|l|ns_(check_record|get_(mx|record))|oubleval)|e(nd|rror_(clear_last|get_last|log)|scapeshell(arg|cmd)|x(ec|p(lode|m1)?|tract)|zmlm_hash)|f(close|eof|flush|get(c(sv)?|s(s)?)|ile(_(exists|get_contents|put_contents)|atime|ctime|group|inode|mtime|owner|perms|size|type)?|l(o(atval|ck|or)|ush)|mod|nmatch|o(pen|rward_static_call(_array)?)|p(assthru|rintf|ut(csv|s))|read|s(canf|eek|ockopen|tat)|t(ell|ok|runcate)|write)|g(et(_(browser|c(fg_var|urrent_user)|h(eaders|tml_translation_table)|include_path|m(agic_quotes_(gpc|runtime)|eta_tags))|cwd|env|host(by(addr|name(l)?)|name)|imagesize(fromstring)?|lastmod|m(xrr|y(gid|inode|pid|uid))|opt|protobyn(ame|umber)|r(andmax|usage)|servby(name|port)|t(imeofday|ype))|lob)|h(e(ader(_re(gister_callback|move)|s_(list|sent))?|brev(c)?|x(2bin|dec))|ighlight_(file|string)|t(ml(_entity_decode|entities|specialchars(_decode)?)|tp_(build_query|response_code))|ypot)|i(gnore_user_abort|m(age_type_to_(extension|mime_type)|plode)|n(_array|et_(ntop|pton)|i_(alter|get(_all)?|restore|set)|t(div|val))|p(2long|tc(embed|parse))|s_(array|bool|callable|d(ir|ouble)|executable|f(i(le|nite)|loat)|in(finite|t(eger)?)|l(ink|ong)|n(an|u(ll|meric))|object|re(a(dable|l)|source)|s(calar|tring)|uploaded_file|writ(able|eable)))|join|k(ey(_exists)?|rsort|sort)|l(c(first|g_value|h(grp|own))|evenshtein|ink(info)?|o(caleconv|g(1(0|p))?|ng2ip)|stat|trim)|m(a(il|x)|d5(_file)?|e(mory_get_(peak_usage|usage)|taphone)|i(crotime|n)|kdir|o(ney_format|ve_uploaded_file)|t_(getrandmax|rand|srand))|n(at(casesort|sort)|ext|l(2br|_langinfo)|umber_format)|o(b_(clean|end_(clean|flush)|flush|get_(c(lean|ontents)|flush|le(ngth|vel)|status)|implicit_flush|list_handlers|start)|ctdec|pen(dir|log)|rd|utput_(add_rewrite_var|reset_rewrite_vars))|p(a(ck|rse_(ini_(file|string)|str|url)|ssthru|thinfo)|close|fsockopen|hp(_(ini_(loaded_file|scanned_files)|s(api_name|trip_whitespace)|uname)|credits|info|version)|i|o(pen|s|w)|r(ev|int(_r|f)|oc_(close|get_status|nice|open|terminate))|utenv)|quote(d_printable_(decode|encode)|meta)|r(a(d2deg|n(d(om_(bytes|int))?|ge)|wurl(decode|encode))|e(a(d(dir|file|link)|lpath(_cache_(get|size))?)|gister_(shutdown_function|tick_function)|name|s(et|tore_include_path)|wind(dir)?)|mdir|ound|sort|trim)|s(candir|e(rialize|t(_(file_buffer|include_path|time_limit)|cookie|locale|rawcookie|type))|h(a1(_file)?|ell_exec|ow_source|uffle)|i(milar_text|n(h)?|zeof)|leep|o(cket_(get_status|set_(blocking|timeout))|rt|undex)|printf|qrt|rand|scanf|t(at|r(_(getcsv|ireplace|pad|r(ep(eat|lace)|ot13)|s(huffle|plit)|word_count)|c(hr|oll|spn)|eam_(bucket_(append|make_writeable|new|prepend)|co(ntext_(create|get_(default|options|params)|set_(default|option|params))|py_to_stream)|filter_(append|prepend|re(gister|move))|get_(contents|filters|line|meta_data|transports|wrappers)|is_local|re(gister_wrapper|solve_include_path)|s(e(lect|t_(blocking|chunk_size|read_buffer|timeout|write_buffer))|ocket_(accept|client|enable_crypto|get_name|pair|recvfrom|s(e(ndto|rver)|hutdown))|upports_lock)|wrapper_(re(gister|store)|unregister))|i(p(_tags|cslashes|os|slashes)|str)|natc(asecmp|mp)|p(brk|os|time)|r(chr|ev|ipos|pos)|s(pn|tr)|t(o(k|lower|upper)|r)|val))|ubstr(_(co(mpare|unt)|replace))?|y(mlink|s(_get(_temp_dir|loadavg)|log|tem)))|t(an(h)?|empnam|ime_(nanosleep|sleep_until)|mpfile|ouch|rim)|u(asort|c(first|words)|ksort|mask|n(iqid|link|pack|register_tick_function|serialize)|rl(decode|encode)|s(leep|ort))|v(ar_(dump|export)|ersion_compare|fprintf|printf|sprintf)|wordwrap)\b</string>
					<key>name</key>
					<string>support.function.standard.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bis_int(eger)?\b</string>
					<key>name</key>
					<string>support.function.alias.php</string>
				</dict>
			</array>
		</dict>
		<key>user-function-call</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=[a-z_0-9\\]*[a-z_][a-z0-9_]*\s*\()</string>
			<key>end</key>
			<string>(?i)[a-z_][a-z_0-9]*(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#namespace</string>
				</dict>
			</array>
		</dict>
		<key>var_basic</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
        			            (\$+)[a-zA-Z_\x{7f}-\x{ff}]
        			            [a-zA-Z0-9_\x{7f}-\x{ff}]*?\b</string>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
			</array>
		</dict>
		<key>var_global</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)((_(COOKIE|FILES|GET|POST|REQUEST))|arg(v|c))\b</string>
			<key>name</key>
			<string>variable.other.global.php</string>
		</dict>
		<key>var_global_safer</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)((GLOBALS|_(ENV|SERVER|SESSION)))</string>
			<key>name</key>
			<string>variable.other.global.safer.php</string>
		</dict>
		<key>variable-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.index.php</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.end.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.begin.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.index.php</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>variable.other.index.php</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax: $foo, $foo[0], $foo[$bar], $foo-&gt;bar</string>
					<key>match</key>
					<string>(?x)
						((\$)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*))
						(?:
							(-&gt;)(\g&lt;name&gt;)
							|
							(\[)
								(?:(\d+)|((\$)\g&lt;name&gt;)|(\w+))
							(\])
						)?
						</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax with braces: "foo${bar}baz"</string>
					<key>match</key>
					<string>(?x)
						((\$\{)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(\}))
						</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_basic</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\$\{)(?=.*?\})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.php</string>
</dict>
</plist>
