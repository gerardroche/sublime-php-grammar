<?xml version="1.0" encoding="UTF-8"?>
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>TODO:
• Try to improve parameters list syntax – scope numbers, ‘=’, ‘,’ and possibly be intelligent about entity ordering
• Is meta.function-call the correct scope? I've added it to my theme but by default it's not highlighted</string>
	<key>fileTypes</key>
	<array>
		<string>php</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!.*(?&lt;!-)php[0-9]{0,1}\b</string>
	<key>foldingStartMarker</key>
	<string>(/\*|\{\s*$|&lt;&lt;&lt;HTML)</string>
	<key>foldingStopMarker</key>
	<string>(\*/|^\s*\}|^HTML;)</string>
	<key>name</key>
	<string>PHP</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>source.php.embedded.line.empty.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.php</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>meta.consecutive-tags.php</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.trailing.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Matches empty tags.</string>
			<key>match</key>
			<string>(?x)
				(^\s*)?							# 1 - Leading whitespace
					(							# 2 - meta.embedded.line.empty.php
						(						# 3 - Open Tag
							(?:
								((?&lt;=\?&gt;)&lt;)		# 4 - Consecutive tags
							  | &lt;
							)
							\?(?i:php|=)?
						)
							(\s*)				# 5 - Loneliness
						((\?)&gt;)					# 6 - Close Tag
												# 7 - Scope ? as scope.php
					)
				(
					\1							# Match nothing if there was no
												#   leading whitespace...
				  | (\s*$\n)?					# or match trailing whitespace.
				)
			</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=&lt;\?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.leading.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Catches tags with preceeding whitespace.</string>
			<key>end</key>
			<string>(?&lt;=\?&gt;)(\s*$\n)?</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.embedded.trailing.php</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;\?(?i:php|=)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?)&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>source.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>source.php.embedded.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(((?&lt;=\?&gt;)&lt;)|&lt;)\?(?i:php|=)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.consecutive-tags.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Catches the remainder.</string>
			<key>end</key>
			<string>(\?)&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>source.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>source.php.embedded.line.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#language</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>class-builtin</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\\)?\b(?&gt;A(?&gt;ppendIterator|r(?&gt;ithmeticError|ray(?&gt;Access|Iterator|Object))|ssertionError)|Bad(?&gt;FunctionCallException|MethodCallException)|C(?&gt;URLFile|a(?&gt;chingIterator|llbackFilterIterator)|los(?&gt;edGeneratorException|ure)|o(?&gt;llator|untable))|D(?&gt;OM(?&gt;Attr|C(?&gt;dataSection|haracterData|o(?&gt;mment|nfiguration))|Do(?&gt;cument(?&gt;Fragment|Type)?|mError)|E(?&gt;lement|ntity(?&gt;Reference)?|rrorHandler|xception)|Implementation(?&gt;List|Source)?|Locator|N(?&gt;ame(?&gt;List|SpaceNode|dNodeMap)|o(?&gt;de(?&gt;List)?|tation))|ProcessingInstruction|String(?&gt;Extend|List)|T(?&gt;ext|ypeinfo)|UserDataHandler|XPath)|ate(?&gt;Interval|Period|Time(?&gt;I(?&gt;mmutable|nterface)|Zone)?)|i(?&gt;rectory(?&gt;Iterator)?|visionByZeroError)|omainException)|E(?&gt;mptyIterator|rror(?&gt;Exception)?|xception)|Fil(?&gt;esystemIterator|terIterator)|G(?&gt;enerator|lobIterator)|I(?&gt;n(?&gt;finiteIterator|tl(?&gt;BreakIterator|C(?&gt;alendar|har|odePointBreakIterator)|DateFormatter|Exception|GregorianCalendar|Iterator|PartsIterator|RuleBasedBreakIterator|TimeZone)|validArgumentException)|terator(?&gt;Aggregate|Iterator)?)|JsonSerializable|L(?&gt;engthException|i(?&gt;bXMLError|mitIterator)|o(?&gt;cale|gicException))|M(?&gt;essageFormatter|ultipleIterator)|N(?&gt;o(?&gt;RewindIterator|rmalizer)|umberFormatter)|O(?&gt;ut(?&gt;Of(?&gt;BoundsException|RangeException)|erIterator)|verflowException)|P(?&gt;DO(?&gt;Exception|Row|Statement)?|ar(?&gt;entIterator|seError)|har(?&gt;Data|Exception|FileInfo)?)|R(?&gt;angeException|e(?&gt;cursive(?&gt;ArrayIterator|Ca(?&gt;chingIterator|llbackFilterIterator)|DirectoryIterator|FilterIterator|Iterator(?&gt;Iterator)?|RegexIterator|TreeIterator)|flect(?&gt;ion(?&gt;Class|Ex(?&gt;ception|tension)|Function(?&gt;Abstract)?|Generator|Method|Object|P(?&gt;arameter|roperty)|Type|ZendExtension)?|or)|gexIterator|sourceBundle)|untimeException)|S(?&gt;QLite3(?&gt;Result|Stmt)?|e(?&gt;ekableIterator|rializable|ssion(?&gt;Handler(?&gt;Interface)?|IdInterface|UpdateTimestampHandlerInterface))|impleXML(?&gt;Element|Iterator)|oap(?&gt;Client|Fault|Header|Param|Server|Var)|p(?&gt;l(?&gt;DoublyLinkedList|Fi(?&gt;le(?&gt;Info|Object)|xedArray)|Heap|M(?&gt;axHeap|inHeap)|Ob(?&gt;jectStorage|server)|PriorityQueue|Queue|S(?&gt;tack|ubject)|TempFileObject)|oofchecker))|T(?&gt;hrowable|ra(?&gt;nsliterator|versable)|ypeError)|U(?&gt;Converter|n(?&gt;derflowException|expectedValueException))|XML(?&gt;Reader|Writer)|ZipArchive|__PHP_Incomplete_Class|finfo|mysqli(?&gt;_(?&gt;driver|result|s(?&gt;ql_exception|tmt)|warning))?|php_user_filter|stdClass|tidy(?&gt;Node)?)\b</string>
					<key>name</key>
					<string>support.class.builtin.php</string>
				</dict>
			</array>
		</dict>
		<key>class-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-builtin</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[\\a-zA-Z_])</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?:#@\+)?\s*$</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>This now only highlights a docblock if the first line contains only /**
								- this is to stop highlighting everything as invalid when people do comment banners with /******** ...
								- Now matches /**#@+ too - used for docblock templates: http://manual.phpdoc.org/HTMLframesConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.phpdoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#php_doc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*?($\n?|(?=\?&gt;))</string>
					<key>name</key>
					<string>comment.line.double-slash.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*?($\n?|(?=\?&gt;))</string>
					<key>name</key>
					<string>comment.line.number-sign.php</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?xi)(?=
			            (
			                (\\[a-z_][a-z_0-9]*\\[a-z_][a-z_0-9\\]*)|
			                ([a-z_][a-z_0-9]*\\[a-z_][a-z_0-9\\]*)
			            )
			            [^a-z_0-9\\])</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\\?[a-zA-Z_\x{7f}-\x{ff}])</string>
					<key>end</key>
					<string>(?=[^\\a-zA-Z_\x{7f}-\x{ff}])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(TRUE|FALSE|NULL|__(FILE|DIR|FUNCTION|CLASS|METHOD|LINE|NAMESPACE|TRAIT)__|ON|OFF|YES|NO|NL|BR|TAB)\b</string>
							<key>name</key>
							<string>constant.language.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(?&gt;DE(?&gt;BUG_BACKTRACE_(?&gt;IGNORE_ARGS|PROVIDE_OBJECT)|FAULT_INCLUDE_PATH)|E_(?&gt;ALL|CO(?&gt;MPILE_(?&gt;ERROR|WARNING)|RE_(?&gt;ERROR|WARNING))|DEPRECATED|ERROR|NOTICE|PARSE|RECOVERABLE_ERROR|STRICT|USER_(?&gt;DEPRECATED|ERROR|NOTICE|WARNING)|WARNING)|FALSE|NULL|P(?&gt;EAR_(?&gt;EXTENSION_DIR|INSTALL_DIR)|HP_(?&gt;BIN(?&gt;ARY|DIR)|CONFIG_FILE_(?&gt;PATH|SCAN_DIR)|D(?&gt;ATADIR|EBUG)|E(?&gt;OL|XT(?&gt;ENSION_DIR|RA_VERSION))|INT_(?&gt;M(?&gt;AX|IN)|SIZE)|L(?&gt;IBDIR|OCALSTATEDIR)|M(?&gt;A(?&gt;JOR_VERSION|NDIR|XPATHLEN)|INOR_VERSION)|O(?&gt;S|UTPUT_HANDLER_(?&gt;C(?&gt;LEAN(?&gt;ABLE)?|ONT)|DISABLED|END|F(?&gt;INAL|LUSH(?&gt;ABLE)?)|REMOVABLE|ST(?&gt;ART(?&gt;ED)?|DFLAGS)|WRITE))|PREFIX|RELEASE_VERSION|S(?&gt;API|HLIB_SUFFIX|YSCONFDIR)|VERSION(?&gt;_ID)?|ZTS))|STD(?&gt;ERR|IN|OUT)|TRUE|UPLOAD_ERR_(?&gt;CANT_WRITE|EXTENSION|FORM_SIZE|INI_SIZE|NO_(?&gt;FILE|TMP_DIR)|OK|PARTIAL)|ZEND_(?&gt;DEBUG_BUILD|THREAD_SAFE))\b</string>
							<key>name</key>
							<string>support.constant.core.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(?&gt;A(?&gt;B(?&gt;DAY_(?&gt;1|2|3|4|5|6|7)|MON_(?&gt;1(?&gt;0|1|2)?|2|3|4|5|6|7|8|9))|LT_DIGITS|M_STR|RRAY_FILTER_USE_(?&gt;BOTH|KEY)|SSERT_(?&gt;ACTIVE|BAIL|CALLBACK|EXCEPTION|QUIET_EVAL|WARNING))|C(?&gt;ASE_(?&gt;LOWER|UPPER)|HAR_MAX|O(?&gt;DESET|NNECTION_(?&gt;ABORTED|NORMAL|TIMEOUT)|UNT_(?&gt;NORMAL|RECURSIVE))|R(?&gt;EDITS_(?&gt;ALL|DOCS|FULLPAGE|G(?&gt;ENERAL|ROUP)|MODULES|QA|SAPI)|NCYSTR|YPT_(?&gt;BLOWFISH|EXT_DES|MD5|S(?&gt;ALT_LENGTH|HA(?&gt;256|512)|TD_DES))))|D(?&gt;AY_(?&gt;1|2|3|4|5|6|7)|IRECTORY_SEPARATOR|NS_(?&gt;A(?&gt;6|AAA|LL|NY)?|CNAME|HINFO|MX|N(?&gt;APTR|S)|PTR|S(?&gt;OA|RV)|TXT)|_(?&gt;FMT|T_FMT))|E(?&gt;NT_(?&gt;COMPAT|DISALLOWED|HTML(?&gt;401|5)|IGNORE|NOQUOTES|QUOTES|SUBSTITUTE|X(?&gt;HTML|ML1))|RA(?&gt;_(?&gt;D_(?&gt;FMT|T_FMT)|T_FMT))?|XTR_(?&gt;IF_EXISTS|OVERWRITE|PREFIX_(?&gt;ALL|I(?&gt;F_EXISTS|NVALID)|SAME)|REFS|SKIP))|F(?&gt;ILE_(?&gt;APPEND|BINARY|IGNORE_NEW_LINES|NO_DEFAULT_CONTEXT|SKIP_EMPTY_LINES|TEXT|USE_INCLUDE_PATH)|NM_(?&gt;CASEFOLD|NOESCAPE|P(?&gt;ATHNAME|ERIOD)))|GLOB_(?&gt;AVAILABLE_FLAGS|BRACE|ERR|MARK|NO(?&gt;CHECK|ESCAPE|SORT)|ONLYDIR)|HTML_(?&gt;ENTITIES|SPECIALCHARS)|I(?&gt;MAGETYPE_(?&gt;BMP|COUNT|GIF|I(?&gt;CO|FF)|J(?&gt;B2|P(?&gt;2|C|EG(?&gt;2000)?|X))|P(?&gt;NG|SD)|SW(?&gt;C|F)|TIFF_(?&gt;II|MM)|UNKNOWN|WBMP|XBM)|N(?&gt;F(?&gt;O_(?&gt;ALL|C(?&gt;ONFIGURATION|REDITS)|ENVIRONMENT|GENERAL|LICENSE|MODULES|VARIABLES))?|I_(?&gt;ALL|PERDIR|S(?&gt;CANNER_(?&gt;NORMAL|RAW|TYPED)|YSTEM)|USER)))|L(?&gt;C_(?&gt;ALL|C(?&gt;OLLATE|TYPE)|M(?&gt;ESSAGES|ONETARY)|NUMERIC|TIME)|O(?&gt;CK_(?&gt;EX|NB|SH|UN)|G_(?&gt;A(?&gt;LERT|UTH(?&gt;PRIV)?)|C(?&gt;ONS|R(?&gt;IT|ON))|D(?&gt;AEMON|EBUG)|E(?&gt;MERG|RR)|INFO|KERN|L(?&gt;OCAL(?&gt;0|1|2|3|4|5|6|7)|PR)|MAIL|N(?&gt;DELAY|EWS|O(?&gt;TICE|WAIT))|ODELAY|P(?&gt;ERROR|ID)|SYSLOG|U(?&gt;SER|UCP)|WARNING)))|M(?&gt;ON_(?&gt;1(?&gt;0|1|2)?|2|3|4|5|6|7|8|9)|_(?&gt;1_PI|2_(?&gt;PI|SQRTPI)|E(?&gt;ULER)?|L(?&gt;N(?&gt;10|2|PI)|OG(?&gt;10E|2E))|PI(?&gt;_(?&gt;2|4))?|SQRT(?&gt;1_2|2|3|PI)))|N(?&gt;AN|OEXPR)|P(?&gt;A(?&gt;SSWORD_(?&gt;BCRYPT(?&gt;_DEFAULT_COST)?|DEFAULT)|TH(?&gt;INFO_(?&gt;BASENAME|DIRNAME|EXTENSION|FILENAME)|_SEPARATOR))|HP_(?&gt;QUERY_RFC(?&gt;1738|3986)|ROUND_HALF_(?&gt;DOWN|EVEN|ODD|UP)|URL_(?&gt;FRAGMENT|HOST|P(?&gt;A(?&gt;SS|TH)|ORT)|QUERY|SCHEME|USER))|M_STR|SFS_(?&gt;ERR_FATAL|F(?&gt;EED_ME|LAG_(?&gt;FLUSH_(?&gt;CLOSE|INC)|NORMAL))|PASS_ON))|RADIXCHAR|S(?&gt;CANDIR_SORT_(?&gt;ASCENDING|DESCENDING|NONE)|EEK_(?&gt;CUR|END|SET)|ORT_(?&gt;ASC|DESC|FLAG_CASE|LOCALE_STRING|N(?&gt;ATURAL|UMERIC)|REGULAR|STRING)|TR(?&gt;EAM_(?&gt;BUFFER_(?&gt;FULL|LINE|NONE)|C(?&gt;AST_(?&gt;AS_STREAM|FOR_SELECT)|LIENT_(?&gt;ASYNC_CONNECT|CONNECT|PERSISTENT)|RYPTO_METHOD_(?&gt;ANY_(?&gt;CLIENT|SERVER)|SSLv(?&gt;2(?&gt;3_(?&gt;CLIENT|SERVER)|_(?&gt;CLIENT|SERVER))|3_(?&gt;CLIENT|SERVER))|TLS(?&gt;_(?&gt;CLIENT|SERVER)|v1_(?&gt;0_(?&gt;CLIENT|SERVER)|1_(?&gt;CLIENT|SERVER)|2_(?&gt;CLIENT|SERVER)))))|FILTER_(?&gt;ALL|READ|WRITE)|I(?&gt;GNORE_URL|PPROTO_(?&gt;I(?&gt;CMP|P)|RAW|TCP|UDP)|S_URL)|M(?&gt;ETA_(?&gt;ACCESS|GROUP(?&gt;_NAME)?|OWNER(?&gt;_NAME)?|TOUCH)|KDIR_RECURSIVE|UST_SEEK)|NOTIFY_(?&gt;AUTH_RE(?&gt;QUIRED|SULT)|CO(?&gt;MPLETED|NNECT)|F(?&gt;AILURE|ILE_SIZE_IS)|MIME_TYPE_IS|PROGRESS|RE(?&gt;DIRECTED|SOLVE)|SEVERITY_(?&gt;ERR|INFO|WARN))|O(?&gt;OB|PTION_(?&gt;BLOCKING|READ_(?&gt;BUFFER|TIMEOUT)|WRITE_BUFFER))|P(?&gt;EEK|F_(?&gt;INET(?&gt;6)?|UNIX))|REPORT_ERRORS|S(?&gt;ERVER_(?&gt;BIND|LISTEN)|HUT_(?&gt;RD(?&gt;WR)?|WR)|OCK_(?&gt;DGRAM|R(?&gt;AW|DM)|S(?&gt;EQPACKET|TREAM)))|U(?&gt;RL_STAT_(?&gt;LINK|QUIET)|SE_PATH))|_PAD_(?&gt;BOTH|LEFT|RIGHT)))|T(?&gt;HOUSEP|_FMT(?&gt;_AMPM)?)|YESEXPR)\b</string>
							<key>name</key>
							<string>support.constant.std.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(?&gt;A(?&gt;F_(?&gt;INET(?&gt;6)?|UNIX)|PACHE_MAP)|BUS_(?&gt;ADR(?&gt;ALN|ERR)|OBJERR)|C(?&gt;AL_(?&gt;DOW_(?&gt;DAYNO|LONG|SHORT)|EASTER_(?&gt;ALWAYS_(?&gt;GREGORIAN|JULIAN)|DEFAULT|ROMAN)|FRENCH|GREGORIAN|J(?&gt;EWISH(?&gt;_ADD_(?&gt;ALAFIM(?&gt;_GERESH)?|GERESHAYIM))?|ULIAN)|MONTH_(?&gt;FRENCH|GREGORIAN_(?&gt;LONG|SHORT)|J(?&gt;EWISH|ULIAN_(?&gt;LONG|SHORT)))|NUM_CALS)|LD_(?&gt;CONTINUED|DUMPED|EXITED|KILLED|STOPPED|TRAPPED)|URL(?&gt;AUTH_(?&gt;ANY(?&gt;SAFE)?|BASIC|DIGEST(?&gt;_IE)?|GSSNEGOTIATE|N(?&gt;ONE|TLM)|ONLY)|E_(?&gt;ABORTED_BY_CALLBACK|BAD_(?&gt;C(?&gt;ALLING_ORDER|ONTENT_ENCODING)|DOWNLOAD_RESUME|FUNCTION_ARGUMENT|PASSWORD_ENTERED)|COULDNT_(?&gt;CONNECT|RESOLVE_(?&gt;HOST|PROXY))|F(?&gt;AILED_INIT|ILE(?&gt;SIZE_EXCEEDED|_COULDNT_READ_FILE)|TP_(?&gt;ACCESS_DENIED|BAD_DOWNLOAD_RESUME|C(?&gt;ANT_(?&gt;GET_HOST|RECONNECT)|OULDNT_(?&gt;GET_SIZE|RETR_FILE|S(?&gt;ET_(?&gt;ASCII|BINARY)|TOR_FILE)|USE_REST))|P(?&gt;ARTIAL_FILE|ORT_FAILED)|QUOTE_ERROR|SSL_FAILED|USER_PASSWORD_INCORRECT|W(?&gt;EIRD_(?&gt;227_FORMAT|PAS(?&gt;S_REPLY|V_REPLY)|SERVER_REPLY|USER_REPLY)|RITE_ERROR))|UNCTION_NOT_FOUND)|GOT_NOTHING|HTTP_(?&gt;NOT_FOUND|PO(?&gt;RT_FAILED|ST_ERROR)|R(?&gt;ANGE_ERROR|ETURNED_ERROR))|L(?&gt;DAP_(?&gt;CANNOT_BIND|INVALID_URL|SEARCH_FAILED)|IBRARY_NOT_FOUND)|MALFORMAT_USER|O(?&gt;BSOLETE|K|PERATION_TIME(?&gt;DOUT|OUTED)|UT_OF_MEMORY)|PARTIAL_FILE|RE(?&gt;AD_ERROR|CV_ERROR)|S(?&gt;END_ERROR|HARE_IN_USE|S(?&gt;H|L_(?&gt;C(?&gt;ACERT|ERTPROBLEM|IPHER|ONNECT_ERROR)|ENGINE_(?&gt;NOTFOUND|SETFAILED)|PEER_CERTIFICATE)))|T(?&gt;ELNET_OPTION_SYNTAX|OO_MANY_REDIRECTS)|U(?&gt;N(?&gt;KNOWN_TELNET_OPTION|SUPPORTED_PROTOCOL)|RL_MALFORMAT(?&gt;_USER)?)|WRITE_ERROR)|FTP(?&gt;AUTH_(?&gt;DEFAULT|SSL|TLS)|METHOD_(?&gt;MULTICWD|NOCWD|SINGLECWD)|SSL_(?&gt;ALL|C(?&gt;CC_(?&gt;ACTIVE|NONE|PASSIVE)|ONTROL)|NONE|TRY))|GSSAPI_DELEGATION_(?&gt;FLAG|POLICY_FLAG)|INFO_(?&gt;APPCONNECT_TIME|C(?&gt;ERTINFO|O(?&gt;N(?&gt;DITION_UNMET|NECT_TIME|TENT_(?&gt;LENGTH_(?&gt;DOWNLOAD|UPLOAD)|TYPE))|OKIELIST))|EFFECTIVE_URL|F(?&gt;ILETIME|TP_ENTRY_PATH)|H(?&gt;EADER_(?&gt;OUT|SIZE)|TTP(?&gt;AUTH_AVAIL|_CO(?&gt;DE|NNECTCODE)))|L(?&gt;ASTONE|OCAL_(?&gt;IP|PORT))|N(?&gt;AMELOOKUP_TIME|UM_CONNECTS)|OS_ERRNO|PR(?&gt;ETRANSFER_TIME|I(?&gt;MARY_(?&gt;IP|PORT)|VATE)|OXYAUTH_AVAIL)|R(?&gt;E(?&gt;DIRECT_(?&gt;COUNT|TIME|URL)|QUEST_SIZE|SPONSE_CODE)|TSP_(?&gt;C(?&gt;LIENT_CSEQ|SEQ_RECV)|SE(?&gt;RVER_CSEQ|SSION_ID)))|S(?&gt;IZE_(?&gt;DOWNLOAD|UPLOAD)|PEED_(?&gt;DOWNLOAD|UPLOAD)|SL_(?&gt;ENGINES|VERIFYRESULT)|TARTTRANSFER_TIME)|TOTAL_TIME)|M(?&gt;OPT_(?&gt;MAXCONNECTS|PIPELINING)|SG_DONE|_(?&gt;ADDED_ALREADY|BAD_(?&gt;EASY_HANDLE|HANDLE)|CALL_MULTI_PERFORM|INTERNAL_ERROR|O(?&gt;K|UT_OF_MEMORY)))|OPT_(?&gt;A(?&gt;CCEPT(?&gt;TIMEOUT_MS|_ENCODING)|DDRESS_SCOPE|PPEND|UTOREFERER)|B(?&gt;INARYTRANSFER|UFFERSIZE)|C(?&gt;A(?&gt;INFO|PATH)|ERTINFO|O(?&gt;NNECT(?&gt;TIMEOUT(?&gt;_MS)?|_ONLY)|OKIE(?&gt;FILE|JAR|LIST|SESSION)?)|RLF(?&gt;ILE)?|USTOMREQUEST)|D(?&gt;IRLISTONLY|NS_(?&gt;CACHE_TIMEOUT|SERVERS|USE_GLOBAL_CACHE))|E(?&gt;GDSOCKET|NCODING)|F(?&gt;AILONERROR|ILE(?&gt;TIME)?|NMATCH_FUNCTION|O(?&gt;LLOWLOCATION|RBID_REUSE)|RESH_CONNECT|TP(?&gt;APPEND|LISTONLY|PORT|SSLAUTH|_(?&gt;A(?&gt;CCOUNT|LTERNATIVE_TO_USER)|CREATE_MISSING_DIRS|FILEMETHOD|RESPONSE_TIMEOUT|S(?&gt;KIP_PASV_IP|SL(?&gt;_CCC)?)|USE_(?&gt;EP(?&gt;RT|SV)|PRET))))|GSSAPI_DELEGATION|H(?&gt;EADER(?&gt;FUNCTION)?|TTP(?&gt;200ALIASES|AUTH|GET|HEADER|PROXYTUNNEL|_(?&gt;CONTENT_DECODING|TRANSFER_DECODING|VERSION)))|I(?&gt;GNORE_CONTENT_LENGTH|N(?&gt;FILE(?&gt;SIZE)?|TERFACE)|PRESOLVE|SSUERCERT)|K(?&gt;EYPASSWD|RB(?&gt;4LEVEL|LEVEL))|LO(?&gt;CALPORT(?&gt;RANGE)?|W_SPEED_(?&gt;LIMIT|TIME))|MA(?&gt;IL_(?&gt;AUTH|FROM|RCPT)|X(?&gt;CONNECTS|FILESIZE|REDIRS|_(?&gt;RECV_SPEED_LARGE|SEND_SPEED_LARGE)))|N(?&gt;E(?&gt;TRC(?&gt;_FILE)?|W_(?&gt;DIRECTORY_PERMS|FILE_PERMS))|O(?&gt;BODY|PRO(?&gt;GRESS|XY)|SIGNAL))|P(?&gt;ASSWORD|O(?&gt;RT|ST(?&gt;FIELDS|QUOTE|REDIR)?)|R(?&gt;EQUOTE|IVATE|O(?&gt;GRESSFUNCTION|TOCOLS|XY(?&gt;AUTH|P(?&gt;ASSWORD|ORT)|TYPE|USER(?&gt;NAME|PWD)|_TRANSFER_MODE)?))|UT)|QUOTE|R(?&gt;AN(?&gt;DOM_FILE|GE)|E(?&gt;AD(?&gt;DATA|FUNCTION)|DIR_PROTOCOLS|FERER|S(?&gt;OLVE|UME_FROM)|TURNTRANSFER)|TSP_(?&gt;CLIENT_CSEQ|REQUEST|S(?&gt;E(?&gt;RVER_CSEQ|SSION_ID)|TREAM_URI)|TRANSPORT))|S(?&gt;AFE_UPLOAD|HARE|OCKS5_GSSAPI_(?&gt;NEC|SERVICE)|S(?&gt;H_(?&gt;AUTH_TYPES|HOST_PUBLIC_KEY_MD5|KNOWNHOSTS|P(?&gt;RIVATE_KEYFILE|UBLIC_KEYFILE))|L(?&gt;CERT(?&gt;PASSWD|TYPE)?|ENGINE(?&gt;_DEFAULT)?|KEY(?&gt;PASSWD|TYPE)?|VERSION|_(?&gt;CIPHER_LIST|OPTIONS|SESSIONID_CACHE|VERIFY(?&gt;HOST|PEER))))|TDERR)|T(?&gt;CP_(?&gt;KEEP(?&gt;ALIVE|I(?&gt;DLE|NTVL))|NODELAY)|ELNETOPTIONS|FTP_BLKSIZE|IME(?&gt;CONDITION|OUT(?&gt;_MS)?|VALUE)|LSAUTH_(?&gt;PASSWORD|TYPE|USERNAME)|RANSFER(?&gt;TEXT|_ENCODING))|U(?&gt;NRESTRICTED_AUTH|PLOAD|RL|SE(?&gt;R(?&gt;AGENT|NAME|PWD)|_SSL))|VERBOSE|W(?&gt;ILDCARDMATCH|RITE(?&gt;FUNCTION|HEADER)))|P(?&gt;AUSE_(?&gt;ALL|CONT|RECV(?&gt;_CONT)?|SEND(?&gt;_CONT)?)|RO(?&gt;TO_(?&gt;ALL|DICT|F(?&gt;ILE|TP(?&gt;S)?)|GOPHER|HTTP(?&gt;S)?|IMAP(?&gt;S)?|LDAP(?&gt;S)?|POP3(?&gt;S)?|RT(?&gt;MP(?&gt;E|S|T(?&gt;E|S)?)?|SP)|S(?&gt;CP|FTP|MTP(?&gt;S)?)|T(?&gt;ELNET|FTP))|XY_(?&gt;HTTP|SOCKS(?&gt;4(?&gt;A)?|5(?&gt;_HOSTNAME)?))))|S(?&gt;HOPT_(?&gt;NONE|SHARE|UNSHARE)|S(?&gt;H_AUTH_(?&gt;ANY|DEFAULT|HOST|KEYBOARD|NONE|P(?&gt;ASSWORD|UBLICKEY))|LOPT_ALLOW_BEAST))|USESSL_(?&gt;ALL|CONTROL|NONE|TRY)|VERSION_NOW|_(?&gt;FNMATCHFUNC_(?&gt;FAIL|MATCH|NOMATCH)|HTTP_VERSION_(?&gt;1_(?&gt;0|1)|2_0|NONE)|IPRESOLVE_(?&gt;V(?&gt;4|6)|WHATEVER)|LOCK_DATA_(?&gt;COOKIE|DNS|SSL_SESSION)|NETRC_(?&gt;IGNORED|OPTIONAL|REQUIRED)|R(?&gt;EADFUNC_PAUSE|TSPREQ_(?&gt;ANNOUNCE|DESCRIBE|GET_PARAMETER|OPTIONS|P(?&gt;AUSE|LAY)|REC(?&gt;EIVE|ORD)|SET(?&gt;UP|_PARAMETER)|TEARDOWN))|SSLVERSION_(?&gt;DEFAULT|SSLv(?&gt;2|3)|TLSv1(?&gt;_(?&gt;0|1|2))?)|T(?&gt;IMECOND_(?&gt;IF(?&gt;MODSINCE|UNMODSINCE)|LASTMOD|NONE)|LSAUTH_SRP)|VERSION_(?&gt;HTTP2|IPV6|KERBEROS4|LIBZ|SSL)|WRITEFUNC_PAUSE)))|D(?&gt;ATE_(?&gt;ATOM|COOKIE|ISO8601|R(?&gt;FC(?&gt;1(?&gt;036|123)|2822|3339(?&gt;_EXTENDED)?|8(?&gt;22|50))|SS)|W3C)|OM(?&gt;STRING_SIZE_ERR|_(?&gt;HIERARCHY_REQUEST_ERR|IN(?&gt;DEX_SIZE_ERR|USE_ATTRIBUTE_ERR|VALID_(?&gt;ACCESS_ERR|CHARACTER_ERR|MODIFICATION_ERR|STATE_ERR))|N(?&gt;AMESPACE_ERR|O(?&gt;T_(?&gt;FOUND_ERR|SUPPORTED_ERR)|_(?&gt;DATA_ALLOWED_ERR|MODIFICATION_ALLOWED_ERR)))|PHP_ERR|SYNTAX_ERR|VALIDATION_ERR|WRONG_DOCUMENT_ERR)))|EXIF_USE_MBSTRING|F(?&gt;IL(?&gt;EINFO_(?&gt;CONTINUE|DEVICES|MIME(?&gt;_(?&gt;ENCODING|TYPE))?|NONE|PRESERVE_ATIME|RAW|SYMLINK)|TER_(?&gt;CALLBACK|DEFAULT|F(?&gt;LAG_(?&gt;ALLOW_(?&gt;FRACTION|HEX|OCTAL|SCIENTIFIC|THOUSAND)|E(?&gt;MPTY_STRING_NULL|NCODE_(?&gt;AMP|HIGH|LOW))|HOST(?&gt;NAME|_REQUIRED)|IPV(?&gt;4|6)|NO(?&gt;NE|_(?&gt;ENCODE_QUOTES|PRIV_RANGE|RES_RANGE))|PATH_REQUIRED|QUERY_REQUIRED|S(?&gt;CHEME_REQUIRED|TRIP_(?&gt;BACKTICK|HIGH|LOW)))|ORCE_ARRAY)|NULL_ON_FAILURE|REQUIRE_(?&gt;ARRAY|SCALAR)|SANITIZE_(?&gt;E(?&gt;MAIL|NCODED)|FULL_SPECIAL_CHARS|MAGIC_QUOTES|NUMBER_(?&gt;FLOAT|INT)|S(?&gt;PECIAL_CHARS|TRI(?&gt;NG|PPED))|URL)|UNSAFE_RAW|VALIDATE_(?&gt;BOOLEAN|DOMAIN|EMAIL|FLOAT|I(?&gt;NT|P)|MAC|REGEXP|URL)))|ORCE_(?&gt;DEFLATE|GZIP)|PE_(?&gt;FLT(?&gt;DIV|INV|OVF|RES|SUB|UND)|INT(?&gt;DIV|OVF))|TP_(?&gt;A(?&gt;SCII|UTO(?&gt;RESUME|SEEK))|BINARY|F(?&gt;AILED|INISHED)|IMAGE|MOREDATA|T(?&gt;EXT|IMEOUT_SEC)|USEPASVADDRESS))|G(?&gt;D_(?&gt;BUNDLED|EXTRA_VERSION|M(?&gt;AJOR_VERSION|INOR_VERSION)|RELEASE_VERSION|VERSION)|RAPHEME_EXTR_(?&gt;COUNT|MAX(?&gt;BYTES|CHARS)))|HASH_HMAC|I(?&gt;CONV_(?&gt;IMPL|MIME_DECODE_(?&gt;CONTINUE_ON_ERROR|STRICT)|VERSION)|DNA_(?&gt;ALLOW_UNASSIGNED|CHECK_(?&gt;BIDI|CONTEXTJ)|DEFAULT|ERROR_(?&gt;BIDI|CONTEXTJ|D(?&gt;ISALLOWED|OMAIN_NAME_TOO_LONG)|EMPTY_LABEL|HYPHEN_3_4|INVALID_ACE_LABEL|L(?&gt;ABEL_(?&gt;HAS_DOT|TOO_LONG)|EADING_(?&gt;COMBINING_MARK|HYPHEN))|PUNYCODE|TRAILING_HYPHEN)|NONTRANSITIONAL_TO_(?&gt;ASCII|UNICODE)|USE_STD3_RULES)|LL_(?&gt;BADSTK|COPROC|ILL(?&gt;ADR|OP(?&gt;C|N)|TRP)|PRV(?&gt;OPC|REG))|MG_(?&gt;A(?&gt;FFINE_(?&gt;ROTATE|S(?&gt;CALE|HEAR_(?&gt;HORIZONTAL|VERTICAL))|TRANSLATE)|RC_(?&gt;CHORD|EDGED|NOFILL|PIE|ROUNDED))|B(?&gt;E(?&gt;LL|SSEL)|I(?&gt;CUBIC(?&gt;_FIXED)?|LINEAR_FIXED)|LACKMAN|OX|SPLINE)|C(?&gt;ATMULLROM|OLOR_(?&gt;BRUSHED|STYLED(?&gt;BRUSHED)?|T(?&gt;ILED|RANSPARENT))|ROP_(?&gt;BLACK|DEFAULT|SIDES|T(?&gt;HRESHOLD|RANSPARENT)|WHITE))|EFFECT_(?&gt;ALPHABLEND|NORMAL|OVERLAY|REPLACE)|F(?&gt;ILTER_(?&gt;BRIGHTNESS|CO(?&gt;LORIZE|NTRAST)|E(?&gt;DGEDETECT|MBOSS)|G(?&gt;AUSSIAN_BLUR|RAYSCALE)|MEAN_REMOVAL|NEGATE|PIXELATE|S(?&gt;ELECTIVE_BLUR|MOOTH))|LIP_(?&gt;BOTH|HORIZONTAL|VERTICAL))|G(?&gt;AUSSIAN|D2_(?&gt;COMPRESSED|RAW)|ENERALIZED_CUBIC|IF)|H(?&gt;A(?&gt;MMING|NNING)|ERMITE)|JP(?&gt;EG|G)|MITCHELL|NEAREST_NEIGHBOUR|P(?&gt;NG|OWER)|QUADRATIC|SINC|TRIANGLE|W(?&gt;BMP|EIGHTED4)|XPM)|N(?&gt;PUT_(?&gt;COOKIE|ENV|GET|POST|REQUEST|SE(?&gt;RVER|SSION))|TL_(?&gt;I(?&gt;CU_(?&gt;DATA_VERSION|VERSION)|DNA_VARIANT_(?&gt;2003|UTS46))|MAX_LOCALE_LEN))|P(?&gt;PROTO_IP(?&gt;V6)?|V6_(?&gt;HOPLIMIT|MULTICAST_(?&gt;HOPS|IF|LOOP)|PKTINFO|RECV(?&gt;HOPLIMIT|PKTINFO|TCLASS)|TCLASS|UNICAST_HOPS|V6ONLY)|_MULTICAST_(?&gt;IF|LOOP|TTL)))|JSON_(?&gt;BIGINT_AS_STRING|ERROR_(?&gt;CTRL_CHAR|DEPTH|IN(?&gt;F_OR_NAN|VALID_PROPERTY_NAME)|NONE|RECURSION|S(?&gt;TATE_MISMATCH|YNTAX)|U(?&gt;NSUPPORTED_TYPE|TF(?&gt;16|8)))|FORCE_OBJECT|HEX_(?&gt;A(?&gt;MP|POS)|QUOT|TAG)|NUMERIC_CHECK|OBJECT_AS_ARRAY|P(?&gt;ARTIAL_OUTPUT_ON_ERROR|RE(?&gt;SERVE_ZERO_FRACTION|TTY_PRINT))|UNESCAPED_(?&gt;SLASHES|UNICODE))|LIBXML_(?&gt;BIGLINES|COMPACT|D(?&gt;OTTED_VERSION|TD(?&gt;ATTR|LOAD|VALID))|ERR_(?&gt;ERROR|FATAL|NONE|WARNING)|HTML_NO(?&gt;DEFDTD|IMPLIED)|LOADED_VERSION|N(?&gt;O(?&gt;BLANKS|CDATA|E(?&gt;MPTYTAG|NT|RROR)|NET|WARNING|XMLDECL)|SCLEAN)|P(?&gt;ARSEHUGE|EDANTIC)|SCHEMA_CREATE|VERSION|XINCLUDE)|M(?&gt;B_(?&gt;CASE_(?&gt;LOWER|TITLE|UPPER)|OVERLOAD_(?&gt;MAIL|REGEX|STRING))|C(?&gt;AST_(?&gt;BLOCK_SOURCE|JOIN_(?&gt;GROUP|SOURCE_GROUP)|LEAVE_(?&gt;GROUP|SOURCE_GROUP)|UNBLOCK_SOURCE)|RYPT_(?&gt;3DES|ARCFOUR(?&gt;_IV)?|BLOWFISH(?&gt;_COMPAT)?|C(?&gt;AST_(?&gt;128|256)|RYPT)|DE(?&gt;CRYPT|S|V_(?&gt;RANDOM|URANDOM))|EN(?&gt;CRYPT|IGNA)|GOST|IDEA|LOKI97|M(?&gt;ARS|ODE_(?&gt;C(?&gt;BC|FB)|ECB|NOFB|OFB|STREAM))|PANAMA|R(?&gt;AND|C(?&gt;2|6)|IJNDAEL_(?&gt;1(?&gt;28|92)|256))|S(?&gt;AFER(?&gt;128|64|PLUS)|ERPENT|KIPJACK)|T(?&gt;HREEWAY|RIPLEDES|WOFISH)|WAKE|XTEA))|HASH_(?&gt;ADLER32|CRC32(?&gt;B)?|FNV1(?&gt;32|64|A(?&gt;32|64))|GOST|HAVAL(?&gt;1(?&gt;28|60|92)|2(?&gt;24|56))|JOAAT|MD(?&gt;2|4|5)|RIPEMD(?&gt;1(?&gt;28|60)|256|320)|S(?&gt;HA(?&gt;1|2(?&gt;24|56)|384|512)|NEFRU256)|TIGER(?&gt;1(?&gt;28|60))?|WHIRLPOOL)|SG_(?&gt;C(?&gt;MSG_CLOEXEC|ONFIRM|TRUNC)|DONT(?&gt;ROUTE|WAIT)|E(?&gt;AGAIN|NOMSG|O(?&gt;F|R)|RRQUEUE|XCEPT)|IPC_NOWAIT|MORE|NO(?&gt;ERROR|SIGNAL)|OOB|PEEK|TRUNC|WAIT(?&gt;ALL|FORONE))|YSQLI_(?&gt;A(?&gt;S(?&gt;SOC|YNC)|UTO_INCREMENT_FLAG)|B(?&gt;INARY_FLAG|LOB_FLAG|OTH)|C(?&gt;LIENT_(?&gt;C(?&gt;AN_HANDLE_EXPIRED_PASSWORDS|OMPRESS)|FOUND_ROWS|I(?&gt;GNORE_SPACE|NTERACTIVE)|NO_SCHEMA|SSL(?&gt;_(?&gt;DONT_VERIFY_SERVER_CERT|VERIFY_SERVER_CERT))?)|URSOR_TYPE_(?&gt;FOR_UPDATE|NO_CURSOR|READ_ONLY|SCROLLABLE))|D(?&gt;ATA_TRUNCATED|EBUG_TRACE_ENABLED)|ENUM_FLAG|GROUP_FLAG|INIT_COMMAND|MULTIPLE_KEY_FLAG|N(?&gt;O(?&gt;T_NULL_FLAG|_D(?&gt;ATA|EFAULT_VALUE_FLAG))|UM(?&gt;_FLAG)?)|O(?&gt;N_UPDATE_NOW_FLAG|PT_(?&gt;C(?&gt;AN_HANDLE_EXPIRED_PASSWORDS|ONNECT_TIMEOUT)|INT_AND_FLOAT_NATIVE|LOCAL_INFILE|NET_(?&gt;CMD_BUFFER_SIZE|READ_BUFFER_SIZE)|SSL_VERIFY_SERVER_CERT))|P(?&gt;ART_KEY_FLAG|RI_KEY_FLAG)|RE(?&gt;AD_DEFAULT_(?&gt;FILE|GROUP)|FRESH_(?&gt;BACKUP_LOG|GRANT|HOSTS|LOG|MASTER|S(?&gt;LAVE|TATUS)|T(?&gt;ABLES|HREADS))|PORT_(?&gt;ALL|ERROR|INDEX|OFF|STRICT))|S(?&gt;E(?&gt;RVER_(?&gt;P(?&gt;S_OUT_PARAMS|UBLIC_KEY)|QUERY_(?&gt;NO_(?&gt;GOOD_INDEX_USED|INDEX_USED)|WAS_SLOW))|T_(?&gt;CHARSET_(?&gt;DIR|NAME)|FLAG))|T(?&gt;MT_ATTR_(?&gt;CURSOR_TYPE|PREFETCH_ROWS|UPDATE_MAX_LENGTH)|ORE_RESULT(?&gt;_COPY_DATA)?))|T(?&gt;IMESTAMP_FLAG|RANS_(?&gt;COR_(?&gt;AND_(?&gt;CHAIN|NO_CHAIN)|NO_RELEASE|RELEASE)|START_(?&gt;READ_(?&gt;ONLY|WRITE)|WITH_CONSISTENT_SNAPSHOT))|YPE_(?&gt;B(?&gt;IT|LOB)|CHAR|D(?&gt;ATE(?&gt;TIME)?|ECIMAL|OUBLE)|ENUM|FLOAT|GEOMETRY|INT(?&gt;24|ERVAL)|JSON|LONG(?&gt;LONG|_BLOB)?|MEDIUM_BLOB|N(?&gt;EWD(?&gt;ATE|ECIMAL)|ULL)|S(?&gt;ET|HORT|TRING)|TI(?&gt;ME(?&gt;STAMP)?|NY(?&gt;_BLOB)?)|VAR_STRING|YEAR))|U(?&gt;N(?&gt;IQUE_KEY_FLAG|SIGNED_FLAG)|SE_RESULT)|ZEROFILL_FLAG))|OPENSSL_(?&gt;ALGO_(?&gt;DSS1|MD(?&gt;4|5)|RMD160|SHA(?&gt;1|2(?&gt;24|56)|384|512))|CIPHER_(?&gt;3DES|AES_(?&gt;1(?&gt;28_CBC|92_CBC)|256_CBC)|DES|RC2_(?&gt;128|40|64))|DEFAULT_STREAM_CIPHERS|KEYTYPE_(?&gt;D(?&gt;H|SA)|EC|RSA)|NO_PADDING|PKCS1_(?&gt;OAEP_PADDING|PADDING)|RAW_DATA|SSLV23_PADDING|TLSEXT_SERVER_NAME|VERSION_(?&gt;NUMBER|TEXT)|ZERO_PADDING)|P(?&gt;C(?&gt;NTL_E(?&gt;2BIG|A(?&gt;CCES|GAIN)|CHILD|FAULT|I(?&gt;N(?&gt;TR|VAL)|O|SDIR)|L(?&gt;IBBAD|OOP)|MFILE|N(?&gt;AMETOOLONG|FILE|O(?&gt;E(?&gt;NT|XEC)|MEM|TDIR))|PERM|SRCH|TXTBSY)|RE_VERSION)|HP_(?&gt;BINARY_READ|NORMAL_READ|SESSION_(?&gt;ACTIVE|DISABLED|NONE))|KCS7_(?&gt;BINARY|DETACHED|NO(?&gt;ATTR|C(?&gt;ERTS|HAIN)|INTERN|SIGS|VERIFY)|TEXT)|NG_(?&gt;ALL_FILTERS|FILTER_(?&gt;AVG|NONE|PAETH|SUB|UP)|NO_FILTER)|O(?&gt;LL_(?&gt;ERR|HUP|IN|MSG|OUT|PRI)|SIX_(?&gt;F_OK|R(?&gt;LIMIT_(?&gt;AS|C(?&gt;ORE|PU)|DATA|FSIZE|INFINITY|LOCKS|M(?&gt;EMLOCK|SGQUEUE)|N(?&gt;ICE|OFILE|PROC)|R(?&gt;SS|T(?&gt;PRIO|TIME))|S(?&gt;IGPENDING|TACK))|_OK)|S_IF(?&gt;BLK|CHR|IFO|REG|SOCK)|W_OK|X_OK))|R(?&gt;EG_(?&gt;BA(?&gt;CKTRACK_LIMIT_ERROR|D_UTF8_(?&gt;ERROR|OFFSET_ERROR))|GREP_INVERT|INTERNAL_ERROR|JIT_STACKLIMIT_ERROR|NO_ERROR|OFFSET_CAPTURE|PATTERN_ORDER|RECURSION_LIMIT_ERROR|S(?&gt;ET_ORDER|PLIT_(?&gt;DELIM_CAPTURE|NO_EMPTY|OFFSET_CAPTURE)))|IO_(?&gt;P(?&gt;GRP|ROCESS)|USER)))|READLINE_LIB|S(?&gt;CM_(?&gt;CREDENTIALS|RIGHTS)|EGV_(?&gt;ACCERR|MAPERR)|I(?&gt;G(?&gt;A(?&gt;BRT|LRM)|B(?&gt;ABY|US)|C(?&gt;HLD|LD|ONT)|FPE|HUP|I(?&gt;LL|NT|O(?&gt;T)?)|KILL|P(?&gt;IPE|OLL|ROF|WR)|QUIT|S(?&gt;EGV|T(?&gt;KFLT|OP)|YS)|T(?&gt;ERM|RAP|STP|T(?&gt;IN|OU))|U(?&gt;RG|SR(?&gt;1|2))|VTALRM|WINCH|X(?&gt;CPU|FSZ)|_(?&gt;BLOCK|DFL|ERR|IGN|SETMASK|UNBLOCK))|_(?&gt;ASYNCIO|KERNEL|MESGQ|QUEUE|SIGIO|T(?&gt;IMER|KILL)|USER))|O(?&gt;AP_(?&gt;1_(?&gt;1|2)|A(?&gt;CTOR_(?&gt;N(?&gt;EXT|ONE)|UNLIMATERECEIVER)|UTHENTICATION_(?&gt;BASIC|DIGEST))|COMPRESSION_(?&gt;ACCEPT|DEFLATE|GZIP)|DOCUMENT|ENC(?&gt;ODED|_(?&gt;ARRAY|OBJECT))|FUNCTIONS_ALL|LITERAL|PERSISTENCE_(?&gt;REQUEST|SESSION)|RPC|S(?&gt;INGLE_ELEMENT_ARRAYS|SL_METHOD_(?&gt;SSLv(?&gt;2(?&gt;3)?|3)|TLS))|USE_XSI_ARRAY_TYPE|WAIT_ONE_WAY_CALLS)|CK(?&gt;ET_E(?&gt;2BIG|A(?&gt;CCES|D(?&gt;DR(?&gt;INUSE|NOTAVAIL)|V)|FNOSUPPORT|GAIN|LREADY)|B(?&gt;AD(?&gt;E|F(?&gt;D)?|MSG|R(?&gt;QC)?|SLT)|USY)|C(?&gt;HRNG|O(?&gt;MM|NN(?&gt;ABORTED|RE(?&gt;FUSED|SET))))|D(?&gt;ESTADDRREQ|QUOT)|EXIST|FAULT|HOST(?&gt;DOWN|UNREACH)|I(?&gt;DRM|N(?&gt;PROGRESS|TR|VAL)|O|S(?&gt;CONN|DIR|NAM))|L(?&gt;2(?&gt;HLT|NSYNC)|3(?&gt;HLT|RST)|NRNG|OOP)|M(?&gt;EDIUMTYPE|FILE|LINK|SGSIZE|ULTIHOP)|N(?&gt;AMETOOLONG|ET(?&gt;DOWN|RESET|UNREACH)|FILE|O(?&gt;ANO|BUFS|CSI|D(?&gt;ATA|EV)|ENT|L(?&gt;CK|INK)|M(?&gt;E(?&gt;DIUM|M)|SG)|NET|PROTOOPT|S(?&gt;PC|R|TR|YS)|T(?&gt;BLK|CONN|DIR|EMPTY|SOCK|TY|UNIQ))|XIO)|OPNOTSUPP|P(?&gt;ERM|FNOSUPPORT|IPE|ROTO(?&gt;NOSUPPORT|TYPE)?)|R(?&gt;E(?&gt;M(?&gt;CHG|OTE(?&gt;IO)?)|START)|OFS)|S(?&gt;HUTDOWN|OCKTNOSUPPORT|PIPE|RMNT|TRPIPE)|T(?&gt;IME(?&gt;DOUT)?|OOMANYREFS)|U(?&gt;NATCH|SERS)|WOULDBLOCK|X(?&gt;DEV|FULL))|_(?&gt;DGRAM|R(?&gt;AW|DM)|S(?&gt;EQPACKET|TREAM)))|L_(?&gt;SOCKET|TCP|UDP)|MAXCONN|_(?&gt;B(?&gt;INDTODEVICE|ROADCAST)|D(?&gt;EBUG|ONTROUTE)|ERROR|KEEPALIVE|LINGER|OOBINLINE|PASSCRED|R(?&gt;CV(?&gt;BUF|LOWAT|TIMEO)|EUSE(?&gt;ADDR|PORT))|SND(?&gt;BUF|LOWAT|TIMEO)|TYPE))|QLITE3_(?&gt;ASSOC|B(?&gt;LOB|OTH)|FLOAT|INTEGER|NU(?&gt;LL|M)|OPEN_(?&gt;CREATE|READ(?&gt;ONLY|WRITE))|TEXT)|UNFUNCS_RET_(?&gt;DOUBLE|STRING|TIMESTAMP))|T(?&gt;CP_NODELAY|IDY_(?&gt;NODETYPE_(?&gt;ASP|C(?&gt;DATA|OMMENT)|DOCTYPE|END|JSTE|P(?&gt;HP|ROCINS)|ROOT|S(?&gt;ECTION|TART(?&gt;END)?)|TEXT|XMLDECL)|TAG_(?&gt;A(?&gt;BBR|CRONYM|DDRESS|LIGN|PPLET|REA)?|B(?&gt;ASE(?&gt;FONT)?|DO|GSOUND|IG|L(?&gt;INK|OCKQUOTE)|ODY|R|UTTON)?|C(?&gt;APTION|ENTER|ITE|O(?&gt;DE|L(?&gt;GROUP)?|MMENT))|D(?&gt;D|EL|FN|I(?&gt;R|V)|L|T)|EM(?&gt;BED)?|F(?&gt;IELDSET|O(?&gt;NT|RM)|RAME(?&gt;SET)?)|H(?&gt;1|2|3|4|5|6|EAD|R|TML)|I(?&gt;FRAME|LAYER|MG|N(?&gt;PUT|S)|SINDEX)?|K(?&gt;BD|EYGEN)|L(?&gt;A(?&gt;BEL|YER)|EGEND|I(?&gt;NK|STING)?)|M(?&gt;A(?&gt;P|RQUEE)|E(?&gt;NU|TA)|ULTICOL)|NO(?&gt;BR|EMBED|FRAMES|LAYER|S(?&gt;AVE|CRIPT))|O(?&gt;BJECT|L|PT(?&gt;GROUP|ION))|P(?&gt;ARAM|LAINTEXT|RE)?|Q|R(?&gt;B(?&gt;C)?|P|T(?&gt;C)?|UBY)|S(?&gt;AMP|CRIPT|E(?&gt;LECT|RV(?&gt;ER|LET))|MALL|PA(?&gt;CER|N)|T(?&gt;R(?&gt;IKE|ONG)|YLE)|U(?&gt;B|P))?|T(?&gt;ABLE|BODY|D|EXTAREA|FOOT|H(?&gt;EAD)?|ITLE|R|T)|U(?&gt;L|NKNOWN)?|VAR|WBR|XMP))|RAP_(?&gt;BRKPT|TRACE))|U(?&gt;LOC_(?&gt;ACTUAL_LOCALE|VALID_LOCALE)|NKNOWN_TYPE|_(?&gt;AMBIGUOUS_ALIAS_WARNING|B(?&gt;AD_VARIABLE_DEFINITION|RK_(?&gt;ASSIGN_ERROR|ERROR_(?&gt;LIMIT|START)|HEX_DIGITS_EXPECTED|IN(?&gt;IT_ERROR|TERNAL_ERROR)|M(?&gt;ALFORMED_RULE_TAG|ISMATCHED_PAREN)|NEW_LINE_IN_QUOTED_STRING|RULE_(?&gt;EMPTY_SET|SYNTAX)|SEMICOLON_EXPECTED|UN(?&gt;CLOSED_SET|DEFINED_VARIABLE|RECOGNIZED_OPTION)|VARIABLE_REDFINITION)|UFFER_OVERFLOW_ERROR)|C(?&gt;E_NOT_FOUND_ERROR|OLLATOR_VERSION_MISMATCH)|DIFFERENT_UCA_VERSION|E(?&gt;NUM_OUT_OF_SYNC_ERROR|RROR_(?&gt;LIMIT|WARNING_(?&gt;LIMIT|START)))|F(?&gt;ILE_ACCESS_ERROR|MT_PARSE_ERROR_(?&gt;LIMIT|START))|I(?&gt;DNA_(?&gt;ACE_PREFIX_ERROR|CHECK_BIDI_ERROR|DOMAIN_NAME_TOO_LONG_ERROR|ERROR_(?&gt;LIMIT|START)|LABEL_TOO_LONG_ERROR|PROHIBITED_ERROR|STD3_ASCII_RULES_ERROR|UNASSIGNED_ERROR|VERIFICATION_ERROR|ZERO_LENGTH_LABEL_ERROR)|LLEGAL_(?&gt;ARGUMENT_ERROR|CHAR(?&gt;ACTER|_(?&gt;FOUND|IN_SEGMENT))|ESCAPE_SEQUENCE|PAD_POSITION)|N(?&gt;DEX_OUTOFBOUNDS_ERROR|TERNAL_(?&gt;PROGRAM_ERROR|TRANSLITERATOR_ERROR)|VA(?&gt;LID_(?&gt;CHAR_FOUND|F(?&gt;ORMAT_ERROR|UNCTION)|ID|PROPERTY_PATTERN|RBT_SYNTAX|STATE_ERROR|TABLE_F(?&gt;ILE|ORMAT))|RIANT_CONVERSION_ERROR)))|M(?&gt;ALFORMED_(?&gt;EXPONENTIAL_PATTERN|PRAGMA|RULE|S(?&gt;ET|YMBOL_REFERENCE)|UNICODE_ESCAPE|VARIABLE_(?&gt;DEFINITION|REFERENCE))|E(?&gt;MORY_ALLOCATION_ERROR|SSAGE_PARSE_ERROR)|IS(?&gt;MATCHED_SEGMENT_DELIMITERS|PLACED_(?&gt;ANCHOR_START|C(?&gt;OMPOUND_FILTER|URSOR_OFFSET)|QUANTIFIER)|SING_(?&gt;OPERATOR|RESOURCE_ERROR|SEGMENT_CLOSE))|ULTIPLE_(?&gt;ANTE_CONTEXTS|C(?&gt;OMPOUND_FILTERS|URSORS)|DECIMAL_SEP(?&gt;ARATORS|ERATORS)|EXPONENTIAL_SYMBOLS|P(?&gt;AD_SPECIFIERS|ER(?&gt;CENT_SYMBOLS|MILL_SYMBOLS)|OST_CONTEXTS)))|NO_(?&gt;SPACE_AVAILABLE|WRITE_PERMISSION)|P(?&gt;A(?&gt;RSE_ERROR(?&gt;_(?&gt;LIMIT|START))?|TTERN_SYNTAX_ERROR)|RIMARY_TOO_LONG_ERROR)|R(?&gt;E(?&gt;GEX_(?&gt;BAD_(?&gt;ESCAPE_SEQUENCE|INTERVAL)|ERROR_(?&gt;LIMIT|START)|IN(?&gt;TERNAL_ERROR|VALID_(?&gt;BACK_REF|FLAG|STATE))|LOOK_BEHIND_LIMIT|M(?&gt;AX_LT_MIN|ISMATCHED_PAREN)|NUMBER_TOO_BIG|PROPERTY_SYNTAX|RULE_SYNTAX|SET_CONTAINS_STRING|UNIMPLEMENTED)|SOURCE_TYPE_MISMATCH)|ULE_MASK_ERROR)|S(?&gt;AFECLONE_ALLOCATED_WARNING|ORT_KEY_TOO_SHORT_WARNING|T(?&gt;A(?&gt;NDARD_ERROR_LIMIT|TE_(?&gt;OLD_WARNING|TOO_OLD_ERROR))|RING(?&gt;PREP_(?&gt;CHECK_BIDI_ERROR|PROHIBITED_ERROR|UNASSIGNED_ERROR)|_NOT_TERMINATED_WARNING)))|T(?&gt;OO_MANY_ALIASES_ERROR|R(?&gt;AILING_BACKSLASH|UNCATED_CHAR_FOUND))|U(?&gt;N(?&gt;CLOSED_SEGMENT|DEFINED_(?&gt;SEGMENT_REFERENCE|VARIABLE)|EXPECTED_TOKEN|MATCHED_BRACES|QUOTED_SPECIAL|SUPPORTED_(?&gt;ATTRIBUTE|E(?&gt;RROR|SCAPE_SEQUENCE)|PROPERTY)|TERMINATED_QUOTE)|S(?&gt;ELESS_COLLATOR_ERROR|ING_(?&gt;DEFAULT_WARNING|FALLBACK_WARNING)))|VARIABLE_RANGE_(?&gt;EXHAUSTED|OVERLAP)|ZERO_ERROR))|W(?&gt;CONTINUED|NOHANG|SDL_CACHE_(?&gt;BOTH|DISK|MEMORY|NONE)|UNTRACED)|X(?&gt;509_PURPOSE_(?&gt;ANY|CRL_SIGN|NS_SSL_SERVER|S(?&gt;MIME_(?&gt;ENCRYPT|SIGN)|SL_(?&gt;CLIENT|SERVER)))|DEBUG_(?&gt;CC_(?&gt;BRANCH_CHECK|DEAD_CODE|UNUSED)|STACK_NO_DESC|TRACE_(?&gt;APPEND|COMPUTERIZED|HTML|NAKED_FILENAME))|ML_(?&gt;ATTRIBUTE_(?&gt;CDATA|DECL_NODE|EN(?&gt;TITY|UMERATION)|ID(?&gt;REF(?&gt;S)?)?|N(?&gt;MTOKEN(?&gt;S)?|O(?&gt;DE|TATION)))|C(?&gt;DATA_SECTION_NODE|OMMENT_NODE)|D(?&gt;OCUMENT_(?&gt;FRAG_NODE|NODE|TYPE_NODE)|TD_NODE)|E(?&gt;LEMENT_(?&gt;DECL_NODE|NODE)|NTITY_(?&gt;DECL_NODE|NODE|REF_NODE)|RROR_(?&gt;A(?&gt;SYNC_ENTITY|TTRIBUTE_EXTERNAL_ENTITY_REF)|B(?&gt;AD_CHAR_REF|INARY_ENTITY_REF)|DUPLICATE_ATTRIBUTE|EXTERNAL_ENTITY_HANDLING|IN(?&gt;CORRECT_ENCODING|VALID_TOKEN)|JUNK_AFTER_DOC_ELEMENT|MISPLACED_XML_PI|NO(?&gt;NE|_(?&gt;ELEMENTS|MEMORY))|PAR(?&gt;AM_ENTITY_REF|TIAL_CHAR)|RECURSIVE_ENTITY_REF|SYNTAX|TAG_MISMATCH|UN(?&gt;CLOSED_(?&gt;CDATA_SECTION|TOKEN)|DEFINED_ENTITY|KNOWN_ENCODING)))|HTML_DOCUMENT_NODE|LOCAL_NAMESPACE|N(?&gt;AMESPACE_DECL_NODE|OTATION_NODE)|OPTION_(?&gt;CASE_FOLDING|SKIP_(?&gt;TAGSTART|WHITE)|TARGET_ENCODING)|PI_NODE|SAX_IMPL|TEXT_NODE)|SD_(?&gt;1999_(?&gt;NAMESPACE|TIMEINSTANT)|ANY(?&gt;TYPE|URI|XML)|B(?&gt;ASE64BINARY|OOLEAN|YTE)|D(?&gt;ATE(?&gt;TIME)?|ECIMAL|OUBLE|URATION)|ENTIT(?&gt;IES|Y)|FLOAT|G(?&gt;DAY|MONTH(?&gt;DAY)?|YEAR(?&gt;MONTH)?)|HEXBINARY|I(?&gt;D(?&gt;REF(?&gt;S)?)?|NT(?&gt;EGER)?)|L(?&gt;ANGUAGE|ONG)|N(?&gt;AME(?&gt;SPACE)?|CNAME|EGATIVEINTEGER|MTOKEN(?&gt;S)?|O(?&gt;N(?&gt;NEGATIVEINTEGER|POSITIVEINTEGER)|RMALIZEDSTRING|TATION))|POSITIVEINTEGER|QNAME|S(?&gt;HORT|TRING)|T(?&gt;IME|OKEN)|UNSIGNED(?&gt;BYTE|INT|LONG|SHORT)))|ZLIB_(?&gt;BLOCK|DEFAULT_STRATEGY|ENCODING_(?&gt;DEFLATE|GZIP|RAW)|F(?&gt;I(?&gt;LTERED|NISH|XED)|ULL_FLUSH)|HUFFMAN_ONLY|NO_FLUSH|PARTIAL_FLUSH|RLE|SYNC_FLUSH|VER(?&gt;NUM|SION)))\b</string>
							<key>name</key>
							<string>support.constant.ext.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\bT(?&gt;OKEN_PARSE|_(?&gt;A(?&gt;BSTRACT|ND_EQUAL|RRAY(?&gt;_CAST)?|S)|B(?&gt;OOL(?&gt;EAN_(?&gt;AND|OR)|_CAST)|REAK)|C(?&gt;A(?&gt;LLABLE|SE|TCH)|L(?&gt;ASS(?&gt;_C)?|O(?&gt;NE|SE_TAG))|O(?&gt;ALESCE|MMENT|N(?&gt;CAT_EQUAL|ST(?&gt;ANT_ENCAPSED_STRING)?|TINUE))|URLY_OPEN)|D(?&gt;E(?&gt;C(?&gt;LARE)?|FAULT)|I(?&gt;R|V_EQUAL)|NUMBER|O(?&gt;C_COMMENT|LLAR_OPEN_CURLY_BRACES|UBLE_(?&gt;ARROW|C(?&gt;AST|OLON)))?)|E(?&gt;CHO|L(?&gt;LIPSIS|SE(?&gt;IF)?)|MPTY|N(?&gt;CAPSED_AND_WHITESPACE|D(?&gt;DECLARE|FOR(?&gt;EACH)?|IF|SWITCH|WHILE|_HEREDOC))|VAL|X(?&gt;IT|TENDS))|F(?&gt;I(?&gt;LE|NAL(?&gt;LY)?)|OR(?&gt;EACH)?|UNC(?&gt;TION|_C))|G(?&gt;LOBAL|OTO)|HALT_COMPILER|I(?&gt;F|MPLEMENTS|N(?&gt;C(?&gt;LUDE(?&gt;_ONCE)?)?|LINE_HTML|ST(?&gt;ANCEOF|EADOF)|T(?&gt;ERFACE|_CAST))|S(?&gt;SET|_(?&gt;EQUAL|GREATER_OR_EQUAL|IDENTICAL|NOT_(?&gt;EQUAL|IDENTICAL)|SMALLER_OR_EQUAL)))|L(?&gt;I(?&gt;NE|ST)|NUMBER|OGICAL_(?&gt;AND|OR|XOR))|M(?&gt;ETHOD_C|INUS_EQUAL|OD_EQUAL|UL_EQUAL)|N(?&gt;AMESPACE|EW|S_(?&gt;C|SEPARATOR)|UM_STRING)|O(?&gt;BJECT_(?&gt;CAST|OPERATOR)|PEN_TAG(?&gt;_WITH_ECHO)?|R_EQUAL)|P(?&gt;AAMAYIM_NEKUDOTAYIM|LUS_EQUAL|OW(?&gt;_EQUAL)?|R(?&gt;I(?&gt;NT|VATE)|OTECTED)|UBLIC)|RE(?&gt;QUIRE(?&gt;_ONCE)?|TURN)|S(?&gt;L(?&gt;_EQUAL)?|PACESHIP|R(?&gt;_EQUAL)?|T(?&gt;A(?&gt;RT_HEREDOC|TIC)|RING(?&gt;_(?&gt;CAST|VARNAME))?)|WITCH)|T(?&gt;HROW|R(?&gt;AIT(?&gt;_C)?|Y))|U(?&gt;NSET(?&gt;_CAST)?|SE)|VAR(?&gt;IABLE)?|WHI(?&gt;LE|TESPACE)|XOR_EQUAL|YIELD(?&gt;_FROM)?))\b</string>
							<key>name</key>
							<string>support.constant.parser-token.php</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>In PHP, any identifier which is not a variable is taken to be a constant.
        				However, if there is no constant defined with the given name then a notice
        				is generated and the constant is assumed to have the value of its name.</string>
							<key>match</key>
							<string>[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*</string>
							<key>name</key>
							<string>constant.other.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)
							\s*(array) # Typehint
							\s*(&amp;)? 					# Reference
							\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
							\s*(=)	# A default value
							\s*(?:(array(?=[^\[])|(?=\[))\s*(\(|\[))
							</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.array.php</string>
					<key>end</key>
					<string>\)|\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.argument.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#numbers</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>constant.language.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.non-null-typehinted.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?xi)
							\s*(array) # Typehint
							\s*(&amp;)? 					# Reference
							\s*((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*) # The variable name
							(?:
								\s*(?:(=)\s*(?:(null)|((?:\S*?\(\))|(?:\S*?))))	# A default value
							)?
							\s*(?=,|\)|/[/*]|\#|$) # A closing parentheses (end of argument list) or a comma or a comment
							</string>
					<key>name</key>
					<string>meta.function.argument.array.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?=[a-z_0-9\\]*[a-z_][a-z_0-9]*\s*&amp;?\s*\$)</string>
					<key>end</key>
					<string>(?=,|\)|/[/*]|\#|$)</string>
					<key>name</key>
					<string>meta.function.argument.typehinted.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.reference.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.php</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.variable.php</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>constant.language.php</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.non-null-typehinted.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?xi)
        							\s*([a-z_][a-z_0-9]*)? # Typehinted class name
        							\s*(&amp;)? 					# Reference
        							\s*((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*) # The variable name
        							(?:
        								\s*(?:(=)\s*(?:(null)|((?:\S*?\(\))|(?:\S*?))))	# A default value
        							)?
        							\s*(?=,|\)|/[/*]|\#|$) # A closing parentheses (end of argument list) or a comma
					        </string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\)|/[/*]|\#)</string>
					<key>name</key>
					<string>meta.function.argument.no-default.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(?:\s*(=)\s*)\s*</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=,|\)|/[/*]|\#)</string>
					<key>name</key>
					<string>meta.function.argument.default.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-default-types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\\?[a-z_0-9\\]+\\[a-z_][a-z0-9_]*\s*\()</string>
					<key>comment</key>
					<string>Functions in a user-defined namespace (overrides any built-ins)</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#user-function-call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(print|echo)\b</string>
					<key>name</key>
					<string>support.function.construct.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(\\)?(?=\b[a-z_][a-z_0-9]*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Root namespace function calls (built-in or user)</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(isset|unset|e(val|mpty)|list)(?=\s*\()</string>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#user-function-call</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>heredoc</key>
		<dict>
			<key>begin</key>
			<string>(?=&lt;&lt;&lt;\s*('?)([a-zA-Z_]+[a-zA-Z0-9_]*)(\1)\s*$)</string>
			<key>end</key>
			<string>^((HTML|XML|SQL|JAVASCRIPT|JSON|CSS)|\2)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.heredoc.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.unquoted.heredoc.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(HTML)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>text.html</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(XML)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>text.xml</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.xml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(SQL)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.sql</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(JAVASCRIPT)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.js</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(JSON)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.json</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.json</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.json</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*(CSS)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.php</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.css</string>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>meta.embedded.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.css</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*([a-zA-Z_]+[a-zA-Z0-9_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;&lt;&lt;)\s*'([a-zA-Z_]+[a-zA-Z0-9_]*)'</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.heredoc.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=^\2\b)</string>
					<key>name</key>
					<string>string.unquoted.nowdoc.php</string>
				</dict>
			</array>
		</dict>
		<key>instantiation</key>
		<dict>
			<key>begin</key>
			<string>(?i)(new)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.new.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(?=[^$a-z0-9_\\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(parent|static|self)(?=[^a-z0-9_])</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>comment</key>
			<string>http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[0-7]{1,3}</string>
					<key>name</key>
					<string>constant.numeric.octal.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f]{1,2}</string>
					<key>name</key>
					<string>constant.numeric.hex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\u\{[0-9A-Fa-f]+\}</string>
					<key>name</key>
					<string>constant.numeric.unicodepoint.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[efnrtv\\\$\"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\{)(?=\$.*?\})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>invoke-call</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)(\$+)([a-z_][a-z_0-9]*)(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.invoke.php</string>
		</dict>
		<key>language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(interface)\s+([a-z0-9_]+)\s*(extends)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.interface.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([a-zA-Z0-9_]+)?\s*(?:(?=\{)|$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.interface.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(namespace)\b\s+(?=([a-z0-9_\\]+\s*($|[;{]|(\/[\/*])))|$)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.namespace.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.type.namespace.php</string>
					<key>end</key>
					<string>(?i)(?=\s*$|[^a-z0-9_\\])</string>
					<key>name</key>
					<string>meta.namespace.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\s*\b(use)\s+(?:((const)|(function))\s+)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.use.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.const.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;|(?:^\s*$))</string>
					<key>name</key>
					<string>meta.use.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\s*(?=[a-z_0-9\\])</string>
							<key>end</key>
							<string>(?xi)(?:
    			                (?:\s*(as)\b\s*([a-z_0-9]*)\s*(?=,|;|$))
    			                |(?=,|;|$)
    			            )</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.use-as.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.other.namespace.use-as.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-builtin</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\s*(?=[\\a-z_0-9])</string>
									<key>end</key>
									<string>$|(?=[\s,;])</string>
									<key>name</key>
									<string>support.other.namespace.use.php</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\\</string>
											<key>name</key>
											<string>punctuation.separator.inheritance.php</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\s*,\s*</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(trait)\s+([a-zA-Z0-9_]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.trait.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.trait.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\{)</string>
					<key>name</key>
					<string>meta.trait.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(abstract|final)?\s*(class)\s+([a-z0-9_]+)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.abstract.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(extends)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.extends.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.other.inherited-class.php</string>
							<key>end</key>
							<string>(?i)(?=[^a-z_0-9\\])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
									<key>end</key>
									<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.other.inherited-class.php</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#namespace</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#class-builtin</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#namespace</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)[a-z_][a-z_0-9]*</string>
									<key>name</key>
									<string>entity.other.inherited-class.php</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(implements)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.implements.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=[;{])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)(?=[a-z0-9_\\]+)</string>
									<key>contentName</key>
									<string>meta.other.inherited-class.php</string>
									<key>end</key>
									<string>(?i)(?:\s*(?:,|(?=[^a-z0-9_\\\s]))\s*)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
											<key>end</key>
											<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>entity.other.inherited-class.php</string>
												</dict>
											</dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#namespace</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#class-builtin</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#namespace</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?i)[a-z_][a-z_0-9]*</string>
											<key>name</key>
											<string>entity.other.inherited-class.php</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\s*\b(break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|return|switch|use|while|yield)\b</string>
					<key>name</key>
					<string>keyword.control.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b((?:require|include)(?:_once)?)\b\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.include.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|;|$)</string>
					<key>name</key>
					<string>meta.include.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(catch)\b\s*\(\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.catch.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([A-Za-z_][A-Za-z_0-9]*)\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*\)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.exception.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.catch.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(catch|try|throw|exception|finally)\b</string>
					<key>name</key>
					<string>keyword.control.exception.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(function)\s*(&amp;\s*)?(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\{</string>
					<key>name</key>
					<string>meta.function.closure.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function.arguments.php</string>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-arguments</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(use)\s*(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.function.use.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.reference.php</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>variable.other.php</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.variable.php</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\))</string>
									<key>name</key>
									<string>meta.function.closure.use.php</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)\s*
					    ((?:(?:final|abstract|public|private|protected|static)\s+)*)
				        (function)
				        (?:\s+|(\s*&amp;\s*))
				        (?:
				            (__(?:call|construct|debugInfo|destruct|get|set|isset|unset|toString|clone|set_state|sleep|wakeup|autoload|invoke|callStatic))
				            |([a-zA-Z0-9_]+)
				        )
				        \s*
				        (\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.arguments.php</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#invoke-call</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)\s*(?=
				        [a-z_0-9$\\]+(::)
                        (?:
        				    ([a-z_][a-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)
        				)?
				    )</string>
					<key>end</key>
					<string>(?x)(::)
                        (?:
        				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.static.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.class.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(self|static|parent)\b</string>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(array)(\()(\))</string>
					<key>name</key>
					<string>meta.array.empty.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\s*\(\s*(array|real|double|float|int(eger)?|bool(ean)?|string|object|binary|unset)\s*\)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(array|real|double|float|int(eger)?|bool(ean)?|string|class|clone|var|function|interface|parent|self|object)\b</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(global|abstract|const|extends|implements|final|p(r(ivate|otected)|ublic)|static)\b</string>
					<key>name</key>
					<string>storage.modifier.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.expression.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#heredoc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.=?</string>
					<key>name</key>
					<string>keyword.operator.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(\=)(&amp;))|(&amp;(?=[$A-Za-z_]))</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(@)</string>
					<key>name</key>
					<string>keyword.operator.error-control.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(!|&amp;&amp;|\|\|)|\b(and|or|xor|as)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;|&gt;&gt;|~|\^|&amp;|\|</string>
					<key>name</key>
					<string>keyword.operator.bitwise.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(===|==|!==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(instanceof)\b\s+(?=[\\$a-z_])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.type.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\\$A-Za-z_0-9])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.goto.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.other.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(goto)\s+([a-z_][a-z_0-9]*)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.goto-label.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)^\s*([a-z_][a-z_0-9]*)\s*:</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[)(\])</string>
					<key>name</key>
					<string>meta.array.empty.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>namespace</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?:(namespace)|[a-z0-9_]+)?(\\)(?=.*?[^a-z_0-9\\])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.namespace.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.inheritance.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(?=[a-z0-9_]*[^a-z0-9_\\])</string>
			<key>name</key>
			<string>support.other.namespace.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\\)</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
			<key>name</key>
			<string>constant.numeric.php</string>
		</dict>
		<key>object</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(-&gt;)(\$?\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.object.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)(-&gt;)
            				(?:
            				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
            				    |
            				    ((\$+)?[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
            				)?</string>
				</dict>
			</array>
		</dict>
		<key>parameter-default-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;(?=\s*\$)</string>
					<key>name</key>
					<string>storage.modifier.reference.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array(?=[^\[])|(?=\[))\s*(\(|\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)|\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-default-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)\s*(?=
				        [a-z_0-9\\]+(::)
    				    ([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)?
				    )</string>
					<key>end</key>
					<string>(?i)(::)([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>php_doc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>PHPDocumentor only recognises lines with an asterisk as the first non-whitespaces character</string>
					<key>match</key>
					<string>^(?!\s*\*).*$\n?</string>
					<key>name</key>
					<string>invalid.illegal.missing-asterisk.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.wrong-access-type.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*\*\s*(@access)\s+((public|private|protected)|(.+))\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&amp;#]+(?&lt;![.?:])</string>
					<key>name</key>
					<string>markup.underline.link.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@xlink)\s+(.+)\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\@\b(a(bstract|uthor)|c(ategory|opyright)|example|global|internal|li(cense|nk)|pa(ckage|ram)|return|s(ee|ince|tatic|ubpackage)|t(hrows|odo)|v(ar|ersion)|uses|deprecated|final)\b</string>
					<key>name</key>
					<string>keyword.other.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\{(@(link)).+?\}</string>
					<key>name</key>
					<string>meta.tag.inline.phpdoc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\@[a-z0-9_-]+</string>
					<key>name</key>
					<string>keyword.other.phpdoc.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)"/ (?= (\\.|[^"/])++/[imsxeADSUXu]*" )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.double-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repetition.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)'/ (?= (\\.|[^'/])++/[imsxeADSUXu]*' )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.single-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repetition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repetition.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Escaped from the PHP string – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>\\{1,2}[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\\'\[\]]</string>
							<key>name</key>
							<string>constant.character.escape.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\"`']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>'(?=((\\')|[^'"])*("|$))</string>
					<key>name</key>
					<string>string.quoted.single.unclosed.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>`(?=((\\`)|[^`"])*("|$))</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\'`"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>`(?=((\\`)|[^`'])*('|$))</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>"(?=((\\")|[^"'])*('|$))</string>
					<key>name</key>
					<string>string.quoted.double.unclosed.sql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>string-backtick</key>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>`</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.interpolated.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This contentName is just to allow the usage of “select scope” to select the string contents first, then the string with quotes</string>
			<key>contentName</key>
			<string>meta.string-contents.quoted.double.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.string-contents.quoted.single.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regex-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\bapc_(s(tore|ma_info)|c(ompile_file|lear_cache|a(s|che_info))|inc|de(c|fine_constants|lete(_file)?)|exists|fetch|load_constants|add|bin_(dump(file)?|load(file)?))\b</string>
					<key>name</key>
					<string>support.function.apc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(huffle|izeof|ort)|n(ext|at(sort|casesort))|c(o(unt|mpact)|urrent)|in_array|u(sort|ksort|asort)|p(os|rev)|e(nd|ach|xtract)|k(sort|ey(_exists)?|rsort)|list|a(sort|r(sort|ray(_(s(hift|um|plice|earch|lice)|c(h(unk|ange_key_case)|o(unt_values|lumn|mbine))|intersect(_(u(key|assoc)|key|assoc))?|diff(_(u(key|assoc)|key|assoc))?|u(n(shift|ique)|intersect(_(uassoc|assoc))?|diff(_(uassoc|assoc))?)|p(op|ush|ad|roduct)|values|key(s|_exists)|f(il(ter|l(_keys)?)|lip)|walk(_recursive)?|r(e(duce|place(_recursive)?|verse)|and)|m(ultisort|erge(_recursive)?|ap)))?))|r(sort|eset|ange))\b</string>
					<key>name</key>
					<string>support.function.array.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(how_source|ys_getloadavg|leep)|highlight_(string|file)|con(stant|nection_(status|aborted))|time_(sleep_until|nanosleep)|ignore_user_abort|d(ie|efine(d)?)|u(sleep|n(iqid|pack))|__halt_compiler|p(hp_(strip_whitespace|check_syntax)|ack)|e(val|xit)|get_browser)\b</string>
					<key>name</key>
					<string>support.function.basic_functions.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbc(?&gt;add|comp|div|m(?&gt;od|ul)|pow(?&gt;mod)?|s(?&gt;cale|qrt|ub))\b</string>
					<key>name</key>
					<string>support.function.bcmath.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bblenc_encrypt\b</string>
					<key>name</key>
					<string>support.function.blenc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbz(?&gt;c(?&gt;lose|ompress)|decompress|err(?&gt;no|or|str)|flush|open|read|write)\b</string>
					<key>name</key>
					<string>support.function.bz2.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;cal_(?&gt;days_in_month|from_jd|info|to_jd)|easter_da(?&gt;te|ys)|frenchtojd|gregoriantojd|j(?&gt;d(?&gt;dayofweek|monthname|to(?&gt;french|gregorian|j(?&gt;ewish|ulian)|unix))|ewishtojd|uliantojd)|unixtojd)\b</string>
					<key>name</key>
					<string>support.function.calendar.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(lass_(exists|alias)|all_user_method(_array)?)|trait_exists|i(s_(subclass_of|a)|nterface_exists)|__autoload|property_exists|get_(c(lass(_(vars|methods))?|alled_class)|object_vars|declared_(classes|traits|interfaces)|parent_class)|method_exists)\b</string>
					<key>name</key>
					<string>support.function.classobj.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(com_(create_guid|print_typeinfo|event_sink|load_typelib|get_active_object|message_pump)|variant_(s(ub|et(_type)?)|n(ot|eg)|c(a(st|t)|mp)|i(nt|div|mp)|or|d(iv|ate_(to_timestamp|from_timestamp))|pow|eqv|fix|a(nd|dd|bs)|round|get_type|xor|m(od|ul)))\b</string>
					<key>name</key>
					<string>support.function.com.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bctype_(?&gt;al(?&gt;num|pha)|cntrl|digit|graph|lower|p(?&gt;rint|unct)|space|upper|xdigit)\b</string>
					<key>name</key>
					<string>support.function.ctype.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcurl_(?&gt;c(?&gt;lose|opy_handle)|e(?&gt;rr(?&gt;no|or)|scape|xec)|file_create|getinfo|init|multi_(?&gt;add_handle|close|exec|getcontent|in(?&gt;fo_read|it)|remove_handle|s(?&gt;e(?&gt;lect|topt)|trerror))|pause|reset|s(?&gt;etopt(?&gt;_array)?|hare_(?&gt;close|init|setopt)|trerror)|unescape|version)\b</string>
					<key>name</key>
					<string>support.function.curl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;checkdate|date(?&gt;_(?&gt;add|create(?&gt;_(?&gt;from_format|immutable(?&gt;_from_format)?))?|d(?&gt;ate_set|efault_timezone_(?&gt;get|set)|iff)|format|get_last_errors|i(?&gt;nterval_(?&gt;create_from_date_string|format)|sodate_set)|modify|offset_get|parse(?&gt;_from_format)?|su(?&gt;b|n(?&gt;_info|rise|set))|time(?&gt;_set|stamp_(?&gt;get|set)|zone_(?&gt;get|set))))?|g(?&gt;etdate|m(?&gt;date|mktime|strftime))|idate|localtime|mktime|str(?&gt;ftime|totime)|time(?&gt;zone_(?&gt;abbreviations_list|identifiers_list|location_get|name_(?&gt;from_abbr|get)|o(?&gt;ffset_get|pen)|transitions_get|version_get))?)\b</string>
					<key>name</key>
					<string>support.function.datetime.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdba_(close|delete|exists|f(etch|irstkey)|handlers|insert|key_split|list|nextkey|op(en|timize)|popen|replace|sync)\b</string>
					<key>name</key>
					<string>support.function.dba.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdbx_(sort|c(o(nnect|mpare)|lose)|e(scape_string|rror)|query|fetch_row)\b</string>
					<key>name</key>
					<string>support.function.dbx.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(scandir|c(h(dir|root)|losedir)|opendir|dir|re(winddir|addir)|getcwd)\b</string>
					<key>name</key>
					<string>support.function.dir.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\beio_(s(y(nc(_file_range|fs)?|mlink)|tat(vfs)?|e(ndfile|t_m(in_parallel|ax_(idle|p(oll_(time|reqs)|arallel)))|ek))|n(threads|op|pending|re(qs|ady))|c(h(own|mod)|ustom|lose|ancel)|truncate|init|open|dup2|u(nlink|time)|poll|event_loop|f(s(ync|tat(vfs)?)|ch(own|mod)|truncate|datasync|utime|allocate)|write|l(stat|ink)|r(e(name|a(d(dir|link|ahead)?|lpath))|mdir)|g(et_(event_stream|last_error)|rp(_(cancel|limit|add))?)|mk(nod|dir)|busy)\b</string>
					<key>name</key>
					<string>support.function.eio.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\benchant_(dict_(s(tore_replacement|uggest)|check|is_in_session|describe|quick_check|add_to_(session|personal)|get_error)|broker_(set_ordering|init|d(ict_exists|escribe)|free(_dict)?|list_dicts|request_(dict|pwl_dict)|get_error))\b</string>
					<key>name</key>
					<string>support.function.enchant.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(set_e(rror_handler|xception_handler)|trigger_error|debug_(print_backtrace|backtrace)|user_error|error_(log|reporting|get_last)|restore_e(rror_handler|xception_handler))\b</string>
					<key>name</key>
					<string>support.function.errorfunc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(hell_exec|ystem)|p(assthru|roc_(nice|close|terminate|open|get_status))|e(scapeshell(cmd|arg)|xec))\b</string>
					<key>name</key>
					<string>support.function.exec.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;exif_(?&gt;imagetype|read_data|t(?&gt;agname|humbnail))|read_exif_data)\b</string>
					<key>name</key>
					<string>support.function.exif.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfann_(s(huffle_train_data|cale_(train(_data)?|input(_train_data)?|output(_train_data)?)|ubset_train_data|et_(s(caling_params|arprop_(step_error_(shift|threshold_factor)|temperature|weight_decay_shift))|ca(scade_(num_candidate_groups|candidate_(stagnation_epochs|change_fraction|limit)|output_(stagnation_epochs|change_fraction)|weight_multiplier|activation_(steepnesses|functions)|m(in_(cand_epochs|out_epochs)|ax_(cand_epochs|out_epochs)))|llback)|train(ing_algorithm|_(stop_function|error_function))|input_scaling_params|output_scaling_params|error_log|quickprop_(decay|mu)|weight(_array)?|learning_(rate|momentum)|activation_(steepness(_(hidden|output|layer))?|function(_(hidden|output|layer))?)|rprop_(increase_factor|de(crease_factor|lta_(zero|m(in|ax))))|bit_fail_limit)|ave(_train)?)|num_(input_train_data|output_train_data)|c(opy|lear_scaling_params|ascadetrain_on_(data|file)|reate_(s(hortcut(_array)?|tandard(_array)?|parse(_array)?)|train(_from_callback)?|from_file))|t(est(_data)?|rain(_(on_(data|file)|epoch))?)|init_weights|d(uplicate_train_data|es(cale_(train|input|output)|troy(_train)?))|print_error|length_train_data|r(un|e(set_(MSE|err(str|no))|ad_train_from_file)|andomize_weights)|get_(sarprop_(step_error_(shift|threshold_factor)|temperature|weight_decay_shift)|n(um_(input|output|layers)|etwork_type)|MSE|c(onnection_(array|rate)|ascade_(num_candidate(s|_groups)|candidate_(stagnation_epochs|change_fraction|limit)|output_(stagnation_epochs|change_fraction)|weight_multiplier|activation_(steepnesses(_count)?|functions(_count)?)|m(in_(cand_epochs|out_epochs)|ax_(cand_epochs|out_epochs))))|t(otal_(neurons|connections)|rain(ing_algorithm|_(stop_function|error_function)))|err(str|no)|quickprop_(decay|mu)|l(earning_(rate|momentum)|ayer_array)|activation_(steepness|function)|rprop_(increase_factor|de(crease_factor|lta_(zero|m(in|ax))))|bi(t_fail(_limit)?|as_array))|merge_train_data)\b</string>
					<key>name</key>
					<string>support.function.fann.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(ymlink|tat|et_file_buffer)|c(h(own|grp|mod)|opy|learstatcache)|t(ouch|empnam|mpfile)|is_(dir|uploaded_file|executable|file|writ(eable|able)|link|readable)|d(i(sk(_(total_space|free_space)|freespace)|rname)|elete)|u(nlink|mask)|p(close|open|a(thinfo|rse_ini_(string|file)))|f(s(canf|tat|eek)|nmatch|close|t(ell|runcate)|ile(size|ctime|type|inode|owner|_(put_contents|exists|get_contents)|perms|atime|group|mtime)?|open|p(ut(s|csv)|assthru)|eof|flush|write|lock|read|get(s(s)?|c(sv)?))|l(stat|ch(own|grp)|ink(info)?)|r(e(name|wind|a(d(file|link)|lpath(_cache_(size|get))?))|mdir)|glob|m(ove_uploaded_file|kdir)|basename)\b</string>
					<key>name</key>
					<string>support.function.file.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;finfo_(?&gt;buffer|close|file|open|set_flags)|mime_content_type)\b</string>
					<key>name</key>
					<string>support.function.fileinfo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfilter_(?&gt;has_var|i(?&gt;d|nput(?&gt;_array)?)|list|var(?&gt;_array)?)\b</string>
					<key>name</key>
					<string>support.function.filter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfastcgi_finish_request\b</string>
					<key>name</key>
					<string>support.function.fpm.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(all_user_func(_array)?|reate_function)|unregister_tick_function|f(orward_static_call(_array)?|unc(tion_exists|_(num_args|get_arg(s)?)))|register_(shutdown_function|tick_function)|get_defined_functions)\b</string>
					<key>name</key>
					<string>support.function.funchand.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;_|bind(?&gt;_textdomain_codeset|textdomain)|d(?&gt;c(?&gt;gettext|ngettext)|gettext|ngettext)|gettext|ngettext|textdomain)\b</string>
					<key>name</key>
					<string>support.function.gettext.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bgmp_(s(can(1|0)|trval|ign|ub|etbit|qrt(rem)?)|hamdist|ne(g|xtprime)|c(om|lrbit|mp)|testbit|i(n(tval|it|vert)|mport)|or|div(_(q(r)?|r)|exact)?|jacobi|p(o(pcount|w(m)?)|erfect_square|rob_prime)|export|fact|legendre|a(nd|dd|bs)|r(oot(rem)?|andom(_(range|bits))?)|gcd(ext)?|xor|m(od|ul))\b</string>
					<key>name</key>
					<string>support.function.gmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;hash(?&gt;_(?&gt;algos|copy|equals|fi(?&gt;le|nal)|hmac(?&gt;_file)?|init|pbkdf2|update(?&gt;_(?&gt;file|stream))?))?|mhash(?&gt;_(?&gt;count|get_(?&gt;block_size|hash_name)|keygen_s2k))?)\b</string>
					<key>name</key>
					<string>support.function.hash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(http_(s(upport|end_(st(atus|ream)|content_(type|disposition)|data|file|last_modified))|head|negotiate_(c(harset|ontent_type)|language)|c(hunked_decode|ache_(etag|last_modified))|throttle|inflate|d(eflate|ate)|p(ost_(data|fields)|ut_(stream|data|file)|ersistent_handles_(c(ount|lean)|ident)|arse_(headers|cookie|params|message))|re(direct|quest(_(method_(name|unregister|exists|register)|body_encode))?)|get(_request_(headers|body(_stream)?))?|match_(etag|request_header|modified)|build_(str|cookie|url))|ob_(inflatehandler|deflatehandler|etaghandler))\b</string>
					<key>name</key>
					<string>support.function.http.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\biconv(?&gt;_(?&gt;get_encoding|mime_(?&gt;decode(?&gt;_headers)?|encode)|s(?&gt;et_encoding|tr(?&gt;len|pos|rpos)|ubstr)))?\b</string>
					<key>name</key>
					<string>support.function.iconv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\biis_(s(t(op_serv(ice|er)|art_serv(ice|er))|et_(s(cript_map|erver_rights)|dir_security|app_settings))|add_server|remove_server|get_(s(cript_map|erv(ice_state|er_(rights|by_(comment|path))))|dir_security))\b</string>
					<key>name</key>
					<string>support.function.iisfunc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;gd_info|image(?&gt;2wbmp|a(?&gt;ffine(?&gt;matrix(?&gt;concat|get))?|lphablending|ntialias|rc)|c(?&gt;har(?&gt;up)?|o(?&gt;lor(?&gt;a(?&gt;llocate(?&gt;alpha)?|t)|closest(?&gt;alpha|hwb)?|deallocate|exact(?&gt;alpha)?|match|resolve(?&gt;alpha)?|s(?&gt;et|forindex|total)|transparent)|nvolution|py(?&gt;merge(?&gt;gray)?|res(?&gt;ampled|ized))?)|r(?&gt;eate(?&gt;from(?&gt;g(?&gt;d(?&gt;2(?&gt;part)?)?|if)|jpeg|png|string|wbmp|xbm)|truecolor)?|op(?&gt;auto)?))|d(?&gt;ashedline|estroy)|ellipse|f(?&gt;il(?&gt;l(?&gt;ed(?&gt;arc|ellipse|polygon|rectangle)|toborder)?|ter)|lip|ont(?&gt;height|width))|g(?&gt;ammacorrect|d(?&gt;2)?|if)|i(?&gt;nterlace|struecolor)|jpeg|l(?&gt;ayereffect|ine|oadfont)|p(?&gt;alette(?&gt;copy|totruecolor)|ng|olygon)|r(?&gt;ectangle|otate)|s(?&gt;avealpha|cale|et(?&gt;brush|interpolation|pixel|style|t(?&gt;hickness|ile))|tring(?&gt;up)?|x|y)|t(?&gt;ruecolortopalette|ypes)|wbmp|xbm)|jpeg2wbmp|png2wbmp)\b</string>
					<key>name</key>
					<string>support.function.image.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(ys_get_temp_dir|et_(time_limit|include_path|magic_quotes_runtime))|cli_(set_process_title|get_process_title)|ini_(set|alter|restore|get(_all)?)|zend_(thread_id|version|logo_guid)|dl|p(hp(credits|info|_(sapi_name|ini_(scanned_files|loaded_file)|uname|logo_guid)|version)|utenv)|extension_loaded|version_compare|assert(_options)?|restore_include_path|g(c_(collect_cycles|disable|enable(d)?)|et(opt|_(c(urrent_user|fg_var)|include(d_files|_path)|defined_constants|extension_funcs|loaded_extensions|required_files|magic_quotes_(runtime|gpc))|env|lastmod|rusage|my(inode|uid|pid|gid)))|m(emory_get_(usage|peak_usage)|a(in|gic_quotes_runtime)))\b</string>
					<key>name</key>
					<string>support.function.info.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bibase_(se(t_event_handler|rv(ice_(detach|attach)|er_info))|n(um_(params|fields)|ame_result)|c(o(nnect|mmit(_ret)?)|lose)|trans|d(elete_user|rop_db|b_info)|p(connect|aram_info|repare)|e(rr(code|msg)|xecute)|query|f(ield_info|etch_(object|assoc|row)|ree_(event_handler|query|result))|wait_event|a(dd_user|ffected_rows)|r(ollback(_ret)?|estore)|gen_id|m(odify_user|aintain_db)|b(lob_(c(lose|ancel|reate)|i(nfo|mport)|open|echo|add|get)|ackup))\b</string>
					<key>name</key>
					<string>support.function.interbase.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;collator_(?&gt;asort|c(?&gt;ompare|reate)|get_(?&gt;attribute|error_(?&gt;code|message)|locale|s(?&gt;ort_key|trength))|s(?&gt;et_(?&gt;attribute|strength)|ort(?&gt;_with_sort_keys)?))|datefmt_(?&gt;create|format(?&gt;_object)?|get_(?&gt;calendar(?&gt;_object)?|datetype|error_(?&gt;code|message)|locale|pattern|time(?&gt;type|zone(?&gt;_id)?))|is_lenient|localtime|parse|set_(?&gt;calendar|lenient|pattern|timezone))|grapheme_(?&gt;extract|s(?&gt;tr(?&gt;i(?&gt;pos|str)|len|pos|r(?&gt;ipos|pos)|str)|ubstr))|i(?&gt;dn_to_(?&gt;ascii|utf8)|ntl(?&gt;_(?&gt;error_name|get_error_(?&gt;code|message)|is_failure)|cal_(?&gt;a(?&gt;dd|fter)|before|c(?&gt;lear|reate_instance)|equals|f(?&gt;ield_difference|rom_date_time)|get(?&gt;_(?&gt;a(?&gt;ctual_m(?&gt;aximum|inimum)|vailable_locales)|day_of_week_type|error_(?&gt;code|message)|first_day_of_week|greatest_minimum|keyword_values_for_locale|l(?&gt;east_maximum|ocale)|m(?&gt;aximum|inim(?&gt;al_days_in_first_week|um))|now|repeated_wall_time_option|skipped_wall_time_option|t(?&gt;ime(?&gt;_zone)?|ype)|weekend_transition))?|i(?&gt;n_daylight_time|s_(?&gt;equivalent_to|lenient|set|weekend))|roll|set(?&gt;_(?&gt;first_day_of_week|lenient|minimal_days_in_first_week|repeated_wall_time_option|skipped_wall_time_option|time(?&gt;_zone)?))?|to_date_time)|gregcal_(?&gt;create_instance|get_gregorian_change|is_leap_year|set_gregorian_change)|tz_(?&gt;c(?&gt;ount_equivalent_ids|reate_(?&gt;default|enumeration|time_zone(?&gt;_id_enumeration)?))|from_date_time_zone|get_(?&gt;canonical_id|d(?&gt;isplay_name|st_savings)|e(?&gt;quivalent_id|rror_(?&gt;code|message))|gmt|id|offset|r(?&gt;aw_offset|egion)|tz_data_version|unknown)|has_same_rules|to_date_time_zone|use_daylight_time)))|locale_(?&gt;accept_from_http|c(?&gt;anonicalize|ompose)|filter_matches|get_(?&gt;all_variants|d(?&gt;efault|isplay_(?&gt;language|name|region|script|variant))|keywords|primary_language|region|script)|lookup|parse|set_default)|msgfmt_(?&gt;create|format(?&gt;_message)?|get_(?&gt;error_(?&gt;code|message)|locale|pattern)|parse(?&gt;_message)?|set_pattern)|n(?&gt;ormalizer_(?&gt;is_normalized|normalize)|umfmt_(?&gt;create|format(?&gt;_currency)?|get_(?&gt;attribute|error_(?&gt;code|message)|locale|pattern|symbol|text_attribute)|parse(?&gt;_currency)?|set_(?&gt;attribute|pattern|symbol|text_attribute)))|resourcebundle_(?&gt;c(?&gt;ount|reate)|get(?&gt;_error_(?&gt;code|message))?|locales)|transliterator_(?&gt;create(?&gt;_(?&gt;from_rules|inverse))?|get_error_(?&gt;code|message)|list_ids|transliterate))\b</string>
					<key>name</key>
					<string>support.function.intl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bjson_(?&gt;decode|encode|last_error(?&gt;_msg)?)\b</string>
					<key>name</key>
					<string>support.function.json.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bldap_(s(tart_tls|ort|e(t_(option|rebind_proc)|arch)|asl_bind)|next_(entry|attribute|reference)|c(o(n(nect|trol_paged_result(_response)?)|unt_entries|mpare)|lose)|t61_to_8859|d(n2ufn|elete)|8859_to_t61|unbind|parse_re(sult|ference)|e(scape|rr(no|2str|or)|xplode_dn)|f(irst_(entry|attribute|reference)|ree_result)|list|add|re(name|ad)|get_(option|dn|entries|values(_len)?|attributes)|mod(ify(_batch)?|_(del|add|replace))|bind)\b</string>
					<key>name</key>
					<string>support.function.ldap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blibxml_(?&gt;clear_errors|disable_entity_loader|get_(?&gt;errors|last_error)|set_(?&gt;external_entity_loader|streams_context)|use_internal_errors)\b</string>
					<key>name</key>
					<string>support.function.libxml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ezmlm_hash|mail)\b</string>
					<key>name</key>
					<string>support.function.mail.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(in(h)?|qrt|rand)|h(ypot|exdec)|c(os(h)?|eil)|tan(h)?|is_(nan|infinite|finite)|octdec|de(c(hex|oct|bin)|g2rad)|p(i|ow)|exp(m1)?|f(loor|mod)|l(cg_value|og(1(p|0))?)|a(sin(h)?|cos(h)?|tan(h|2)?|bs)|r(ound|a(nd|d2deg))|getrandmax|m(t_(srand|rand|getrandmax)|in|ax)|b(indec|ase_convert))\b</string>
					<key>name</key>
					<string>support.function.math.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmb(?&gt;_(?&gt;c(?&gt;heck_encoding|onvert_(?&gt;case|encoding|kana|variables))|de(?&gt;code_(?&gt;mimeheader|numericentity)|tect_(?&gt;encoding|order))|e(?&gt;ncod(?&gt;e_(?&gt;mimeheader|numericentity)|ing_aliases)|reg(?&gt;_(?&gt;match|replace(?&gt;_callback)?|search(?&gt;_(?&gt;get(?&gt;pos|regs)|init|pos|regs|setpos))?)|i(?&gt;_replace)?)?)|get_info|http_(?&gt;input|output)|internal_encoding|l(?&gt;anguage|ist_encodings)|output_handler|p(?&gt;arse_str|referred_mime_name)|regex_(?&gt;encoding|set_options)|s(?&gt;end_mail|plit|tr(?&gt;cut|i(?&gt;mwidth|pos|str)|len|pos|r(?&gt;chr|i(?&gt;chr|pos)|pos)|str|to(?&gt;lower|upper)|width)|ubst(?&gt;itute_character|r(?&gt;_count)?)))|ereg(?&gt;_(?&gt;match|replace|search(?&gt;_(?&gt;get(?&gt;pos|regs)|init|pos|regs|setpos))?)|i(?&gt;_replace)?)?|regex_encoding|split)\b</string>
					<key>name</key>
					<string>support.function.mbstring.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bm(?&gt;crypt_(?&gt;create_iv|decrypt|enc(?&gt;_(?&gt;get_(?&gt;algorithms_name|block_size|iv_size|key_size|modes_name|supported_key_sizes)|is_block_(?&gt;algorithm(?&gt;_mode)?|mode)|self_test)|rypt)|ge(?&gt;neric(?&gt;_(?&gt;deinit|init))?|t_(?&gt;block_size|cipher_name|iv_size|key_size))|list_(?&gt;algorithms|modes)|module_(?&gt;close|get_(?&gt;algo_(?&gt;block_size|key_size)|supported_key_sizes)|is_block_(?&gt;algorithm(?&gt;_mode)?|mode)|open|self_test))|decrypt_generic)\b</string>
					<key>name</key>
					<string>support.function.mcrypt.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmemcache_debug\b</string>
					<key>name</key>
					<string>support.function.memcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmhash(_(count|keygen_s2k|get_(hash_name|block_size)))?\b</string>
					<key>name</key>
					<string>support.function.mhash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(log_(cmd_(insert|delete|update)|killcursor|write_batch|reply|getmore)|bson_(decode|encode))\b</string>
					<key>name</key>
					<string>support.function.mongo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_(?&gt;a(?&gt;ffected_rows|utocommit)|begin_transaction|c(?&gt;ha(?&gt;nge_user|racter_set_name)|lose|o(?&gt;mmit|nnect(?&gt;_err(?&gt;no|or))?))|d(?&gt;ata_seek|ebug|ump_debug_info)|e(?&gt;rr(?&gt;no|or(?&gt;_list)?)|scape_string|xecute)|f(?&gt;etch_(?&gt;a(?&gt;ll|rray|ssoc)|field(?&gt;_direct|s)?|lengths|object|row)|ield_(?&gt;count|seek|tell)|ree_result)|get_(?&gt;c(?&gt;harset|lient_(?&gt;info|stats|version)|onnection_stats)|host_info|links_stats|proto_info|server_(?&gt;info|version)|warnings)|in(?&gt;fo|it|sert_id)|kill|m(?&gt;ore_results|ulti_query)|n(?&gt;ext_result|um_(?&gt;fields|rows))|options|p(?&gt;ing|oll|repare)|query|r(?&gt;e(?&gt;a(?&gt;l_(?&gt;connect|escape_string|query)|p_async_query)|fresh|lease_savepoint|port)|ollback)|s(?&gt;avepoint|e(?&gt;lect_db|t_(?&gt;charset|opt))|qlstate|sl_set|t(?&gt;at|mt_(?&gt;a(?&gt;ffected_rows|ttr_(?&gt;get|set))|bind_(?&gt;param|result)|close|data_seek|e(?&gt;rr(?&gt;no|or(?&gt;_list)?)|xecute)|f(?&gt;etch|ield_count|ree_result)|get_(?&gt;result|warnings)|in(?&gt;it|sert_id)|more_results|n(?&gt;ext_result|um_rows)|p(?&gt;aram_count|repare)|res(?&gt;et|ult_metadata)|s(?&gt;end_long_data|qlstate|tore_result))|ore_result))|thread_(?&gt;id|safe)|use_result|warning_count)\b</string>
					<key>name</key>
					<string>support.function.mysqli.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_memcache_(set|get_config)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-memcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_ms_(set_(user_pick_server|qos)|dump_servers|query_is_select|fabric_select_(shard|global)|get_(stats|last_(used_connection|gtid))|xa_(commit|rollback|gc|begin)|match_wild)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-ms.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_qc_(set_(storage_handler|cache_condition|is_select|user_handlers)|clear_cache|get_(normalized_query_trace_log|c(ore_stats|ache_info)|query_trace_log|available_handlers))\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-qc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_uh_(set_(statement_proxy|connection_proxy)|convert_to_mysqlnd)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-uh.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(yslog|ocket_(set_(timeout|blocking)|get_status)|et(cookie|rawcookie))|h(ttp_response_code|eader(s_(sent|list)|_re(gister_callback|move))?)|c(heckdnsrr|loselog)|i(net_(ntop|pton)|p2long)|openlog|d(ns_(check_record|get_(record|mx))|efine_syslog_variables)|pfsockopen|fsockopen|long2ip|get(servby(name|port)|host(name|by(name(l)?|addr))|protobyn(umber|ame)|mxrr))\b</string>
					<key>name</key>
					<string>support.function.network.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bnsapi_(virtual|re(sponse_headers|quest_headers))\b</string>
					<key>name</key>
					<string>support.function.nsapi.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\boci(s(tatementtype|e(tprefetch|rverversion)|avelob(file)?)|n(umcols|ew(c(ollection|ursor)|descriptor)|logon)|c(o(l(umn(s(cale|ize)|name|type(raw)?|isnull|precision)|l(size|trim|a(ssign(elem)?|ppend)|getelem|max))|mmit)|loselob|ancel)|internaldebug|definebyname|_(s(tatement_type|e(t_(client_i(nfo|dentifier)|prefetch|edition|action|module_name)|rver_version))|n(um_(fields|rows)|ew_(c(o(nnect|llection)|ursor)|descriptor))|c(o(nnect|mmit)|l(ient_version|ose)|ancel)|internal_debug|define_by_name|p(connect|a(ssword_change|rse))|e(rror|xecute)|f(ield_(s(cale|ize)|name|type(_raw)?|is_null|precision)|etch(_(object|a(ssoc|ll|rray)|row))?|ree_(statement|descriptor))|lob_(copy|is_equal)|r(ollback|esult)|get_implicit_resultset|bind_(array_by_name|by_name))|p(logon|arse)|e(rror|xecute)|f(etch(statement|into)?|ree(statement|c(ollection|ursor)|desc))|write(temporarylob|lobtofile)|lo(adlob|go(n|ff))|r(o(wcount|llback)|esult)|bindbyname)\b</string>
					<key>name</key>
					<string>support.function.oci8.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopcache_(?&gt;compile_file|get_(?&gt;configuration|status)|i(?&gt;nvalidate|s_script_cached)|reset)\b</string>
					<key>name</key>
					<string>support.function.opcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopenssl_(?&gt;c(?&gt;ipher_iv_length|sr_(?&gt;export(?&gt;_to_file)?|get_(?&gt;public_key|subject)|new|sign))|d(?&gt;ecrypt|h_compute_key|igest)|e(?&gt;ncrypt|rror_string)|free_key|get_(?&gt;c(?&gt;ert_locations|ipher_methods)|md_methods|p(?&gt;rivatekey|ublickey))|open|p(?&gt;bkdf2|k(?&gt;cs(?&gt;12_(?&gt;export(?&gt;_to_file)?|read)|7_(?&gt;decrypt|encrypt|sign|verify))|ey_(?&gt;export(?&gt;_to_file)?|free|get_(?&gt;details|p(?&gt;rivate|ublic))|new))|rivate_(?&gt;decrypt|encrypt)|ublic_(?&gt;decrypt|encrypt))|random_pseudo_bytes|s(?&gt;eal|ign|pki_(?&gt;export(?&gt;_challenge)?|new|verify))|verify|x509_(?&gt;check(?&gt;_private_key|purpose)|export(?&gt;_to_file)?|f(?&gt;ingerprint|ree)|parse|read))\b</string>
					<key>name</key>
					<string>support.function.openssl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(o(utput_(add_rewrite_var|reset_rewrite_vars)|b_(start|clean|implicit_flush|end_(clean|flush)|flush|list_handlers|g(zhandler|et_(status|c(ontents|lean)|flush|le(ngth|vel)))))|flush)\b</string>
					<key>name</key>
					<string>support.function.output.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpassword_(?&gt;get_info|hash|needs_rehash|verify)\b</string>
					<key>name</key>
					<string>support.function.password.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpcntl_(?&gt;alarm|e(?&gt;rrno|xec)|fork|get(?&gt;_last_error|priority)|s(?&gt;etpriority|ig(?&gt;nal(?&gt;_dispatch)?|procmask|timedwait|waitinfo)|trerror)|w(?&gt;ait(?&gt;pid)?|exitstatus|if(?&gt;continued|exited|s(?&gt;ignaled|topped))|stopsig|termsig))\b</string>
					<key>name</key>
					<string>support.function.pcntl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpg_(s(ocket|e(nd_(prepare|execute|query(_params)?)|t_(client_encoding|error_verbosity)|lect))|host|num_(fields|rows)|c(o(n(sume_input|nect(ion_(status|reset|busy)|_poll)?|vert)|py_(to|from))|l(ient_encoding|ose)|ancel_query)|t(ty|ra(nsaction_status|ce))|insert|options|d(elete|bname)|u(n(trace|escape_bytea)|pdate)|p(connect|ing|ort|ut_line|arameter_status|repare)|e(scape_(string|identifier|literal|bytea)|nd_copy|xecute)|version|query(_params)?|f(ield_(size|n(um|ame)|t(ype(_oid)?|able)|is_null|prtlen)|etch_(object|a(ssoc|ll(_columns)?|rray)|r(ow|esult))|lush|ree_result)|l(o_(seek|c(lose|reate)|t(ell|runcate)|import|open|unlink|export|write|read(_all)?)|ast_(notice|oid|error))|affected_rows|result_(s(tatus|eek)|error(_field)?)|get_(notify|pid|result)|meta_data)\b</string>
					<key>name</key>
					<string>support.function.pgsql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(virtual|apache_(setenv|note|child_terminate|lookup_uri|re(s(ponse_headers|et_timeout)|quest_headers)|get(_(version|modules)|env))|getallheaders)\b</string>
					<key>name</key>
					<string>support.function.php_apache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_import_simplexml\b</string>
					<key>name</key>
					<string>support.function.php_dom.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bftp_(?&gt;alloc|c(?&gt;dup|h(?&gt;dir|mod)|lose|onnect)|delete|exec|f(?&gt;get|put)|get(?&gt;_option)?|login|m(?&gt;dtm|kdir)|n(?&gt;b_(?&gt;continue|f(?&gt;get|put)|get|put)|list)|p(?&gt;asv|ut|wd)|quit|r(?&gt;aw(?&gt;list)?|ename|mdir)|s(?&gt;et_option|i(?&gt;te|ze)|sl_connect|ystype))\b</string>
					<key>name</key>
					<string>support.function.php_ftp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bimap_(s(can(mailbox)?|tatus|ort|ubscribe|e(t(_quota|flag_full|acl)|arch)|avebody)|header(s|info)?|num_(recent|msg)|c(heck|l(ose|earflag_full)|reate(mailbox)?)|t(hread|imeout)|open|delete(mailbox)?|8bit|u(n(subscribe|delete)|tf(7_(decode|encode)|8)|id)|ping|e(rrors|xpunge)|qprint|fetch(structure|header|text|_overview|mime|body)|l(sub|ist(s(can|ubscribed)|mailbox)?|ast_error)|a(ppend|lerts)|r(e(name(mailbox)?|open)|fc822_(parse_(headers|adrlist)|write_address))|g(c|et(subscribed|_quota(root)?|acl|mailboxes))|m(sgno|ime_header_decode|ail(_(co(py|mpose)|move)|boxmsginfo)?)|b(inary|ody(struct)?|ase64))\b</string>
					<key>name</key>
					<string>support.function.php_imap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bodbc_(s(tatistics|pecialcolumns|etoption)|n(um_(fields|rows)|ext_result)|c(o(nnect|lumn(s|privileges)|mmit)|ursor|lose(_all)?)|table(s|privileges)|d(o|ata_source)|p(connect|r(imarykeys|ocedure(s|columns)|epare))|e(rror(msg)?|xec(ute)?)|f(ield_(scale|n(um|ame)|type|precision|len)|oreignkeys|etch_(into|object|array|row)|ree_result)|longreadlen|autocommit|r(ollback|esult(_all)?)|gettypeinfo|binmode)\b</string>
					<key>name</key>
					<string>support.function.php_odbc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpreg_(?&gt;filter|grep|last_error|match(?&gt;_all)?|quote|replace(?&gt;_callback(?&gt;_array)?)?|split)\b</string>
					<key>name</key>
					<string>support.function.php_pcre.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;class_(?&gt;implements|parents|uses)|iterator_(?&gt;apply|count|to_array)|spl_(?&gt;autoload(?&gt;_(?&gt;call|extensions|functions|register|unregister))?|classes|object_hash))\b</string>
					<key>name</key>
					<string>support.function.php_spl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bzip_(?&gt;close|entry_(?&gt;c(?&gt;lose|ompress(?&gt;edsize|ionmethod))|filesize|name|open|read)|open|read)\b</string>
					<key>name</key>
					<string>support.function.php_zip.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bposix_(?&gt;access|ctermid|errno|get(?&gt;_last_error|cwd|e(?&gt;gid|uid)|g(?&gt;id|r(?&gt;gid|nam|oups))|login|p(?&gt;g(?&gt;id|rp)|id|pid|w(?&gt;nam|uid))|rlimit|sid|uid)|i(?&gt;nitgroups|satty)|kill|mk(?&gt;fifo|nod)|s(?&gt;et(?&gt;e(?&gt;gid|uid)|gid|pgid|rlimit|sid|uid)|trerror)|t(?&gt;imes|tyname)|uname)\b</string>
					<key>name</key>
					<string>support.function.posix.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bset(threadtitle|proctitle)\b</string>
					<key>name</key>
					<string>support.function.proctitle.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpspell_(s(tore_replacement|uggest|ave_wordlist)|new(_(config|personal))?|c(heck|onfig_(save_repl|create|ignore|d(ict_dir|ata_dir)|personal|r(untogether|epl)|mode)|lear_session)|add_to_(session|personal))\b</string>
					<key>name</key>
					<string>support.function.pspell.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\breadline(?&gt;_(?&gt;add_history|c(?&gt;allback_(?&gt;handler_(?&gt;install|remove)|read_char)|lear_history|ompletion_function)|info|list_history|on_new_line|re(?&gt;ad_history|display)|write_history))?\b</string>
					<key>name</key>
					<string>support.function.readline.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brecode(_(string|file))?\b</string>
					<key>name</key>
					<string>support.function.recode.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brrd(c_disconnect|_(create|tune|info|update|error|version|f(irst|etch)|last(update)?|restore|graph|xport))\b</string>
					<key>name</key>
					<string>support.function.rrd.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;msg_(?&gt;get_queue|queue_exists|re(?&gt;ceive|move_queue)|s(?&gt;e(?&gt;nd|t_queue)|tat_queue))|s(?&gt;em_(?&gt;acquire|get|re(?&gt;lease|move))|hm_(?&gt;attach|detach|get_var|has_var|put_var|remove(?&gt;_var)?)))\b</string>
					<key>name</key>
					<string>support.function.sem.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsession_(?&gt;abort|c(?&gt;ache_(?&gt;expire|limiter)|ommit)|de(?&gt;code|stroy)|encode|get_cookie_params|id|module_name|name|re(?&gt;g(?&gt;enerate_id|ister_shutdown)|set)|s(?&gt;ave_path|et_(?&gt;cookie_params|save_handler)|ta(?&gt;rt|tus))|unset|write_close)\b</string>
					<key>name</key>
					<string>support.function.session.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bshmop_(?&gt;close|delete|open|read|size|write)\b</string>
					<key>name</key>
					<string>support.function.shmop.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsimplexml_(?&gt;import_dom|load_(?&gt;file|string))\b</string>
					<key>name</key>
					<string>support.function.simplexml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsnmp(set|2_(set|walk|real_walk|get(next)?)|_(set_(oid_(numeric_print|output_format)|enum_print|valueretrieval|quick_print)|read_mib|get_(valueretrieval|quick_print))|3_(set|walk|real_walk|get(next)?)|walk(oid)?|realwalk|get(next)?)\b</string>
					<key>name</key>
					<string>support.function.snmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;is_soap_fault|use_soap_error_handler)\b</string>
					<key>name</key>
					<string>support.function.soap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsocket_(?&gt;accept|bind|c(?&gt;l(?&gt;ear_error|ose)|msg_space|onnect|reate(?&gt;_(?&gt;listen|pair))?)|get(?&gt;_option|opt|peername|sockname)|import_stream|l(?&gt;ast_error|isten)|re(?&gt;ad|cv(?&gt;from|msg)?)|s(?&gt;e(?&gt;lect|nd(?&gt;msg|to)?|t(?&gt;_(?&gt;block|nonblock|option)|opt))|hutdown|trerror)|write)\b</string>
					<key>name</key>
					<string>support.function.sockets.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsqlite_(s(ingle_query|eek)|has_(prev|more)|n(um_(fields|rows)|ext)|c(hanges|olumn|urrent|lose|reate_(function|aggregate))|open|u(nbuffered_query|df_(decode_binary|encode_binary))|p(open|rev)|e(scape_string|rror_string|xec)|valid|key|query|f(ield_name|etch_(s(tring|ingle)|column_types|object|a(ll|rray))|actory)|l(ib(encoding|version)|ast_(insert_rowid|error))|array_query|rewind|busy_timeout)\b</string>
					<key>name</key>
					<string>support.function.sqlite.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsqlsrv_(se(nd_stream_data|rver_info)|has_rows|n(um_(fields|rows)|ext_result)|c(o(n(nect|figure)|mmit)|l(ient_info|ose)|ancel)|prepare|e(rrors|xecute)|query|f(ield_metadata|etch(_(object|array))?|ree_stmt)|ro(ws_affected|llback)|get_(config|field)|begin_transaction)\b</string>
					<key>name</key>
					<string>support.function.sqlsrv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstats_(s(ta(ndard_deviation|t_(noncentral_t|correlation|in(nerproduct|dependent_t)|p(owersum|ercentile|aired_t)|gennch|binomial_coef))|kew)|harmonic_mean|c(ovariance|df_(n(oncentral_(chisquare|f)|egative_binomial)|c(hisquare|auchy)|t|uniform|poisson|exponential|f|weibull|l(ogistic|aplace)|gamma|b(inomial|eta)))|den(s_(n(ormal|egative_binomial)|c(hisquare|auchy)|t|pmf_(hypergeometric|poisson|binomial)|exponential|f|weibull|l(ogistic|aplace)|gamma|beta)|_uniform)|variance|kurtosis|absolute_deviation|rand_(setall|phrase_to_seeds|ranf|ge(n_(no(ncen(tral_(t|f)|ral_chisquare)|rmal)|chisquare|t|i(nt|uniform|poisson|binomial(_negative)?)|exponential|f(uniform)?|gamma|beta)|t_seeds)))\b</string>
					<key>name</key>
					<string>support.function.stats.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bs(tream_(s(ocket_(s(hutdown|e(ndto|rver))|client|pair|enable_crypto|accept|recvfrom|get_name)|upports_lock|e(t_(chunk_size|timeout|write_buffer|read_buffer|blocking)|lect))|notification_callback|co(ntext_(set_(option|default|params)|create|get_(options|default|params))|py_to_stream)|is_local|encoding|filter_(prepend|append|re(gister|move))|wrapper_(unregister|re(store|gister))|re(solve_include_path|gister_wrapper)|get_(contents|transports|filters|wrappers|line|meta_data)|bucket_(new|prepend|append|make_writeable))|et_socket_blocking)\b</string>
					<key>name</key>
					<string>support.function.streamsfuncs.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(scanf|ha1(_file)?|tr(s(tr|pn)|n(c(asecmp|mp)|atc(asecmp|mp))|c(spn|hr|oll|asecmp|mp)|t(o(upper|k|lower)|r)|i(str|p(slashes|cslashes|os|_tags))|_(s(huffle|plit)|ireplace|pad|word_count|r(ot13|ep(eat|lace))|getcsv)|p(os|brk)|len|r(chr|ipos|pos|ev))|imilar_text|oundex|ubstr(_(co(unt|mpare)|replace))?|printf|etlocale)|h(tml(specialchars(_decode)?|_entity_decode|entities)|e(x2bin|brev(c)?))|n(umber_format|l(2br|_langinfo))|c(h(op|unk_split|r)|o(nvert_(cyr_string|uu(decode|encode))|unt_chars)|r(ypt|c32))|trim|implode|ord|uc(first|words)|join|p(arse_str|rint(f)?)|e(cho|xplode)|v(sprintf|printf|fprintf)|quote(d_printable_(decode|encode)|meta)|fprintf|wordwrap|l(cfirst|trim|ocaleconv|evenshtein)|add(slashes|cslashes)|rtrim|get_html_translation_table|m(oney_format|d5(_file)?|etaphone)|bin2hex)\b</string>
					<key>name</key>
					<string>support.function.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(taint|is_tainted|untaint)\b</string>
					<key>name</key>
					<string>support.function.taint.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btidy_(?&gt;access_count|c(?&gt;lean_repair|onfig_count)|diagnose|error_count|get(?&gt;_(?&gt;body|config|error_buffer|h(?&gt;ead|tml(?&gt;_ver)?)|o(?&gt;pt_doc|utput)|r(?&gt;elease|oot)|status)|opt)|is_x(?&gt;html|ml)|parse_(?&gt;file|string)|repair_(?&gt;file|string)|warning_count)\b</string>
					<key>name</key>
					<string>support.function.tidy.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btoken_(?&gt;get_all|name)\b</string>
					<key>name</key>
					<string>support.function.tokenizer.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btrader_(s(t(och(f|rsi)?|ddev)|in(h)?|u(m|b)|et_(compat|unstable_period)|qrt|ar(ext)?|ma)|ht_(sine|trend(line|mode)|dcp(hase|eriod)|phasor)|natr|c(ci|o(s(h)?|rrel)|dl(s(ho(otingstar|rtline)|t(icksandwich|alledpattern)|pinningtop|eparatinglines)|h(i(kkake(mod)?|ghwave)|omingpigeon|a(ngingman|rami(cross)?|mmer))|c(o(ncealbabyswall|unterattack)|losingmarubozu)|t(hrusting|a(sukigap|kuri)|ristar)|i(n(neck|vertedhammer)|dentical3crows)|2crows|onneck|d(oji(star)?|arkcloudcover|ragonflydoji)|u(nique3river|psidegap2crows)|3(starsinsouth|inside|outside|whitesoldiers|linestrike|blackcrows)|piercing|e(ngulfing|vening(star|dojistar))|kicking(bylength)?|l(ongl(ine|eggeddoji)|adderbottom)|a(dvanceblock|bandonedbaby)|ri(sefall3methods|ckshawman)|g(apsidesidewhite|ravestonedoji)|xsidegap3methods|m(orning(star|dojistar)|a(t(hold|chinglow)|rubozu))|b(elthold|reakaway))|eil|mo)|t(sf|ypprice|3|ema|an(h)?|r(i(x|ma)|ange))|obv|d(iv|ema|x)|ultosc|p(po|lus_d(i|m))|e(rrno|xp|ma)|var|kama|floor|w(clprice|illr|ma)|l(n|inearreg(_(slope|intercept|angle))?|og10)|a(sin|cos|t(an|r)|d(osc|d|x(r)?)?|po|vgprice|roon(osc)?)|r(si|oc(p|r(100)?)?)|get_(compat|unstable_period)|m(i(n(index|us_d(i|m)|max(index)?)?|dp(oint|rice))|om|ult|edprice|fi|a(cd(ext|fix)?|vp|x(index)?|ma)?)|b(op|eta|bands))\b</string>
					<key>name</key>
					<string>support.function.trader.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\buopz_(co(py|mpose)|implement|overload|delete|undefine|extend|f(unction|lags)|re(store|name|define)|backup)\b</string>
					<key>name</key>
					<string>support.function.uopz.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(http_build_query|url(decode|encode)|parse_url|rawurl(decode|encode)|get_(headers|meta_tags)|base64_(decode|encode))\b</string>
					<key>name</key>
					<string>support.function.url.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(s(trval|e(ttype|rialize))|i(s(set|_(s(calar|tring)|nu(ll|meric)|callable|int(eger)?|object|double|float|long|array|re(source|al)|bool))|ntval|mport_request_variables)|d(oubleval|ebug_zval_dump)|unse(t|rialize)|print_r|empty|var_(dump|export)|floatval|get(type|_(defined_vars|resource_type))|boolval)\b</string>
					<key>name</key>
					<string>support.function.var.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bwddx_(?&gt;add_vars|deserialize|packet_(?&gt;end|start)|serialize_va(?&gt;lue|rs))\b</string>
					<key>name</key>
					<string>support.function.wddx.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxhprof_(sample_(disable|enable)|disable|enable)\b</string>
					<key>name</key>
					<string>support.function.xhprof.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;utf8_(?&gt;decode|encode)|xml_(?&gt;error_string|get_(?&gt;current_(?&gt;byte_index|column_number|line_number)|error_code)|parse(?&gt;_into_struct|r_(?&gt;create(?&gt;_ns)?|free|get_option|set_option))?|set_(?&gt;character_data_handler|default_handler|e(?&gt;lement_handler|nd_namespace_decl_handler|xternal_entity_ref_handler)|notation_decl_handler|object|processing_instruction_handler|start_namespace_decl_handler|unparsed_entity_decl_handler)))\b</string>
					<key>name</key>
					<string>support.function.xml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlrpc_(se(t_type|rver_(c(all_method|reate)|destroy|add_introspection_data|register_(introspection_callback|method)))|is_fault|decode(_request)?|parse_method_descriptions|encode(_request)?|get_type)\b</string>
					<key>name</key>
					<string>support.function.xmlrpc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlwriter_(?&gt;end_(?&gt;attribute|c(?&gt;data|omment)|d(?&gt;ocument|td(?&gt;_(?&gt;attlist|e(?&gt;lement|ntity)))?)|element|pi)|f(?&gt;lush|ull_end_element)|o(?&gt;pen_(?&gt;memory|uri)|utput_memory)|s(?&gt;et_indent(?&gt;_string)?|tart_(?&gt;attribute(?&gt;_ns)?|c(?&gt;data|omment)|d(?&gt;ocument|td(?&gt;_(?&gt;attlist|e(?&gt;lement|ntity)))?)|element(?&gt;_ns)?|pi))|text|write_(?&gt;attribute(?&gt;_ns)?|c(?&gt;data|omment)|dtd(?&gt;_(?&gt;attlist|e(?&gt;lement|ntity)))?|element(?&gt;_ns)?|pi|raw))\b</string>
					<key>name</key>
					<string>support.function.xmlwriter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;deflate_(?&gt;add|init)|gz(?&gt;c(?&gt;lose|ompress)|de(?&gt;code|flate)|e(?&gt;ncode|of)|file|get(?&gt;c|s(?&gt;s)?)|inflate|open|p(?&gt;assthru|uts)|re(?&gt;ad|wind)|seek|tell|uncompress|write)|inflate_(?&gt;add|init)|ob_gzhandler|readgzfile|zlib_(?&gt;decode|encode|get_coding_type))\b</string>
					<key>name</key>
					<string>support.function.zlib.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpdo_drivers\b</string>
					<key>name</key>
					<string>support.function.pdo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxdebug_(?&gt;break|c(?&gt;all_(?&gt;class|f(?&gt;ile|unction)|line)|lear_aggr_profiling_data|ode_coverage_started)|d(?&gt;ebug_zval(?&gt;_stdout)?|isable|ump_(?&gt;aggr_profiling_data|superglobals))|enable|get_(?&gt;co(?&gt;de_coverage|llected_errors)|declared_vars|f(?&gt;ormatted_function_stack|unction_(?&gt;count|stack))|headers|monitored_functions|profiler_filename|stack_depth|tracefile_name)|is_enabled|memory_usage|p(?&gt;eak_memory_usage|rint_function_stack)|st(?&gt;art_(?&gt;code_coverage|error_collection|function_monitor|trace)|op_(?&gt;code_coverage|error_collection|function_monitor|trace))|time_index|var_dump)\b</string>
					<key>name</key>
					<string>support.function.xdebug.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;c(?&gt;lass_(?&gt;alias|exists)|reate_function)|de(?&gt;bug_(?&gt;backtrace|print_backtrace)|fine(?&gt;d)?)|e(?&gt;ach|rror_reporting|xtension_loaded)|func(?&gt;_(?&gt;get_arg(?&gt;s)?|num_args)|tion_exists)|g(?&gt;c_(?&gt;collect_cycles|disable|enable(?&gt;d)?|mem_caches)|et_(?&gt;c(?&gt;alled_class|lass(?&gt;_(?&gt;methods|vars))?)|de(?&gt;clared_(?&gt;classes|interfaces|traits)|fined_(?&gt;constants|functions|vars))|extension_funcs|included_files|loaded_extensions|object_vars|parent_class|re(?&gt;quired_files|source(?&gt;_type|s))))|i(?&gt;nterface_exists|s_(?&gt;a|subclass_of))|method_exists|property_exists|restore_e(?&gt;rror_handler|xception_handler)|s(?&gt;et_e(?&gt;rror_handler|xception_handler)|tr(?&gt;c(?&gt;asecmp|mp)|len|nc(?&gt;asecmp|mp)))|tr(?&gt;ait_exists|igger_error)|user_error|zend_version)\b</string>
					<key>name</key>
					<string>support.function.core.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(?&gt;a(?&gt;bs|cos(?&gt;h)?|dd(?&gt;cslashes|slashes)|r(?&gt;ray_(?&gt;c(?&gt;h(?&gt;ange_key_case|unk)|o(?&gt;lumn|mbine|unt_values))|diff(?&gt;_(?&gt;assoc|key|u(?&gt;assoc|key)))?|f(?&gt;il(?&gt;l(?&gt;_keys)?|ter)|lip)|intersect(?&gt;_(?&gt;assoc|key|u(?&gt;assoc|key)))?|key(?&gt;_exists|s)|m(?&gt;ap|erge(?&gt;_recursive)?|ultisort)|p(?&gt;ad|op|roduct|ush)|r(?&gt;and|e(?&gt;duce|place(?&gt;_recursive)?|verse))|s(?&gt;earch|hift|lice|plice|um)|u(?&gt;diff(?&gt;_(?&gt;assoc|uassoc))?|intersect(?&gt;_(?&gt;assoc|uassoc))?|n(?&gt;ique|shift))|values|walk(?&gt;_recursive)?)|sort)|s(?&gt;in(?&gt;h)?|ort|sert(?&gt;_options)?)|tan(?&gt;2|h)?)|b(?&gt;ase(?&gt;64_(?&gt;decode|encode)|_convert|name)|in(?&gt;2hex|dec)|oolval)|c(?&gt;all_user_func(?&gt;_array)?|eil|h(?&gt;dir|eckdnsrr|grp|mod|o(?&gt;p|wn)|r|unk_split)|l(?&gt;earstatcache|i_(?&gt;get_process_title|set_process_title)|ose(?&gt;dir|log))|o(?&gt;mpact|n(?&gt;nection_(?&gt;aborted|status)|stant|vert_(?&gt;cyr_string|uu(?&gt;decode|encode)))|py|s(?&gt;h)?|unt(?&gt;_chars)?)|r(?&gt;c32|ypt)|urrent)|d(?&gt;e(?&gt;bug_zval_dump|c(?&gt;bin|hex|oct)|g2rad)|i(?&gt;r(?&gt;name)?|sk(?&gt;_(?&gt;free_space|total_space)|freespace))|l|ns_(?&gt;check_record|get_(?&gt;mx|record))|oubleval)|e(?&gt;nd|rror_(?&gt;clear_last|get_last|log)|scapeshell(?&gt;arg|cmd)|x(?&gt;ec|p(?&gt;lode|m1)?|tract)|zmlm_hash)|f(?&gt;close|eof|flush|get(?&gt;c(?&gt;sv)?|s(?&gt;s)?)|ile(?&gt;_(?&gt;exists|get_contents|put_contents)|atime|ctime|group|inode|mtime|owner|perms|size|type)?|l(?&gt;o(?&gt;atval|ck|or)|ush)|mod|nmatch|o(?&gt;pen|rward_static_call(?&gt;_array)?)|p(?&gt;assthru|rintf|ut(?&gt;csv|s))|read|s(?&gt;canf|eek|ockopen|tat)|t(?&gt;ell|ok|runcate)|write)|g(?&gt;et(?&gt;_(?&gt;browser|c(?&gt;fg_var|urrent_user)|h(?&gt;eaders|tml_translation_table)|include_path|m(?&gt;agic_quotes_(?&gt;gpc|runtime)|eta_tags))|cwd|env|host(?&gt;by(?&gt;addr|name(?&gt;l)?)|name)|imagesize(?&gt;fromstring)?|lastmod|m(?&gt;xrr|y(?&gt;gid|inode|pid|uid))|opt|protobyn(?&gt;ame|umber)|r(?&gt;andmax|usage)|servby(?&gt;name|port)|t(?&gt;imeofday|ype))|lob)|h(?&gt;e(?&gt;ader(?&gt;_re(?&gt;gister_callback|move)|s_(?&gt;list|sent))?|brev(?&gt;c)?|x(?&gt;2bin|dec))|ighlight_(?&gt;file|string)|t(?&gt;ml(?&gt;_entity_decode|entities|specialchars(?&gt;_decode)?)|tp_(?&gt;build_query|response_code))|ypot)|i(?&gt;gnore_user_abort|m(?&gt;age_type_to_(?&gt;extension|mime_type)|plode)|n(?&gt;_array|et_(?&gt;ntop|pton)|i_(?&gt;alter|get(?&gt;_all)?|restore|set)|t(?&gt;div|val))|p(?&gt;2long|tc(?&gt;embed|parse))|s_(?&gt;array|bool|callable|d(?&gt;ir|ouble)|executable|f(?&gt;i(?&gt;le|nite)|loat)|in(?&gt;finite|t(?&gt;eger)?)|l(?&gt;ink|ong)|n(?&gt;an|u(?&gt;ll|meric))|object|re(?&gt;a(?&gt;dable|l)|source)|s(?&gt;calar|tring)|uploaded_file|writ(?&gt;able|eable)))|join|k(?&gt;ey(?&gt;_exists)?|rsort|sort)|l(?&gt;c(?&gt;first|g_value|h(?&gt;grp|own))|evenshtein|ink(?&gt;info)?|o(?&gt;caleconv|g(?&gt;1(?&gt;0|p))?|ng2ip)|stat|trim)|m(?&gt;a(?&gt;il|x)|d5(?&gt;_file)?|e(?&gt;mory_get_(?&gt;peak_usage|usage)|taphone)|i(?&gt;crotime|n)|kdir|o(?&gt;ney_format|ve_uploaded_file)|t_(?&gt;getrandmax|rand|srand))|n(?&gt;at(?&gt;casesort|sort)|ext|l(?&gt;2br|_langinfo)|umber_format)|o(?&gt;b_(?&gt;clean|end_(?&gt;clean|flush)|flush|get_(?&gt;c(?&gt;lean|ontents)|flush|le(?&gt;ngth|vel)|status)|implicit_flush|list_handlers|start)|ctdec|pen(?&gt;dir|log)|rd|utput_(?&gt;add_rewrite_var|reset_rewrite_vars))|p(?&gt;a(?&gt;ck|rse_(?&gt;ini_(?&gt;file|string)|str|url)|ssthru|thinfo)|close|fsockopen|hp(?&gt;_(?&gt;ini_(?&gt;loaded_file|scanned_files)|s(?&gt;api_name|trip_whitespace)|uname)|credits|info|version)|i|o(?&gt;pen|s|w)|r(?&gt;ev|int(?&gt;_r|f)|oc_(?&gt;close|get_status|nice|open|terminate))|utenv)|quote(?&gt;d_printable_(?&gt;decode|encode)|meta)|r(?&gt;a(?&gt;d2deg|n(?&gt;d(?&gt;om_(?&gt;bytes|int))?|ge)|wurl(?&gt;decode|encode))|e(?&gt;a(?&gt;d(?&gt;dir|file|link)|lpath(?&gt;_cache_(?&gt;get|size))?)|gister_(?&gt;shutdown_function|tick_function)|name|s(?&gt;et|tore_include_path)|wind(?&gt;dir)?)|mdir|ound|sort|trim)|s(?&gt;candir|e(?&gt;rialize|t(?&gt;_(?&gt;file_buffer|include_path|time_limit)|cookie|locale|rawcookie|type))|h(?&gt;a1(?&gt;_file)?|ell_exec|ow_source|uffle)|i(?&gt;milar_text|n(?&gt;h)?|zeof)|leep|o(?&gt;cket_(?&gt;get_status|set_(?&gt;blocking|timeout))|rt|undex)|printf|qrt|rand|scanf|t(?&gt;at|r(?&gt;_(?&gt;getcsv|ireplace|pad|r(?&gt;ep(?&gt;eat|lace)|ot13)|s(?&gt;huffle|plit)|word_count)|c(?&gt;hr|oll|spn)|eam_(?&gt;bucket_(?&gt;append|make_writeable|new|prepend)|co(?&gt;ntext_(?&gt;create|get_(?&gt;default|options|params)|set_(?&gt;default|option|params))|py_to_stream)|filter_(?&gt;append|prepend|re(?&gt;gister|move))|get_(?&gt;contents|filters|line|meta_data|transports|wrappers)|is_local|re(?&gt;gister_wrapper|solve_include_path)|s(?&gt;e(?&gt;lect|t_(?&gt;blocking|chunk_size|read_buffer|timeout|write_buffer))|ocket_(?&gt;accept|client|enable_crypto|get_name|pair|recvfrom|s(?&gt;e(?&gt;ndto|rver)|hutdown))|upports_lock)|wrapper_(?&gt;re(?&gt;gister|store)|unregister))|i(?&gt;p(?&gt;_tags|cslashes|os|slashes)|str)|natc(?&gt;asecmp|mp)|p(?&gt;brk|os|time)|r(?&gt;chr|ev|ipos|pos)|s(?&gt;pn|tr)|t(?&gt;o(?&gt;k|lower|upper)|r)|val))|ubstr(?&gt;_(?&gt;co(?&gt;mpare|unt)|replace))?|y(?&gt;mlink|s(?&gt;_get(?&gt;_temp_dir|loadavg)|log|tem)))|t(?&gt;an(?&gt;h)?|empnam|ime_(?&gt;nanosleep|sleep_until)|mpfile|ouch|rim)|u(?&gt;asort|c(?&gt;first|words)|ksort|mask|n(?&gt;iqid|link|pack|register_tick_function|serialize)|rl(?&gt;decode|encode)|s(?&gt;leep|ort))|v(?&gt;ar_(?&gt;dump|export)|ersion_compare|fprintf|printf|sprintf)|wordwrap)\b</string>
					<key>name</key>
					<string>support.function.standard.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bis_int(eger)?\b</string>
					<key>name</key>
					<string>support.function.alias.php</string>
				</dict>
			</array>
		</dict>
		<key>user-function-call</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=[a-z_0-9\\]*[a-z_][a-z0-9_]*\s*\()</string>
			<key>end</key>
			<string>(?i)[a-z_][a-z_0-9]*(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#namespace</string>
				</dict>
			</array>
		</dict>
		<key>var_basic</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
        			            (\$+)[a-zA-Z_\x{7f}-\x{ff}]
        			            [a-zA-Z0-9_\x{7f}-\x{ff}]*?\b</string>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
			</array>
		</dict>
		<key>var_global</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)((_(COOKIE|FILES|GET|POST|REQUEST))|arg(v|c))\b</string>
			<key>name</key>
			<string>variable.other.global.php</string>
		</dict>
		<key>var_global_safer</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)((GLOBALS|_(ENV|SERVER|SESSION)))</string>
			<key>name</key>
			<string>variable.other.global.safer.php</string>
		</dict>
		<key>variable-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.index.php</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.end.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.begin.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.index.php</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>variable.other.index.php</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax: $foo, $foo[0], $foo[$bar], $foo-&gt;bar</string>
					<key>match</key>
					<string>(?x)
						((\$)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*))
						(?:
							(-&gt;)(\g&lt;name&gt;)
							|
							(\[)
								(?:(\d+)|((\$)\g&lt;name&gt;)|(\w+))
							(\])
						)?
						</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax with braces: "foo${bar}baz"</string>
					<key>match</key>
					<string>(?x)
						((\$\{)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(\}))
						</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_basic</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\$\{)(?=.*?\})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.php</string>
</dict>
</plist>
